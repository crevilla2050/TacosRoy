' Gambas class file

Public myCSVfile As CsvFile
Public myPath As String

Private iRecords As Integer
Private colRecords As New Collection
Private aFields As String[]
Private iFoliosFacturas As Integer[]
Private fMyFacturas As New Float[]
Private iLastIndex As Integer

Public Sub btnPickVolunteer_Click()
Dim iInt As Integer

  myCSVfile = New CsvFile(myPath)
  Do Until myCSVfile.Eof
    colRecords[myCSVfile.Line] = myCSVfile.Read()   'read every line into a collection
    Inc iRecords                                    'count the number of records
  Loop
  aFields = myCSVfile.Fields      'get the field headers (i.e. "name", "rank" & "serialNo"
  
  gridFacturas.Rows.Count = 0
  gridFacturas.Columns.Count = 0
  
  gridFacturas.Header = GridView.Horizontal
  gridFacturas.Grid = True
  gridFacturas.Columns.Count = aFields.Count
  
  For iInt = 0 To aFields.Count - 1
    gridFacturas.Columns[iInt].Text = myCSVfile.Fields[iInt]
  Next
   iLastIndex = 0
  'display some data from the CSV file
  If colRecords.Count > 0 Then 
    gridFacturas.Rows.Count = colRecords.Count 
    btnInject.Enabled = True
    Me.Text = "Buscar facturas: " & "Columnas: " & aFields.Count & ", Facturas encontradas: " & colRecords.Count 
  Else 
    gridFacturas.Rows.Count = 0
    btnInject.Enabled = False
  Endif 
  Dec Application.Busy
'  Me.Close

Catch 
  Print Error.Text
  Dec Application.Busy
  Message.Error(Error.Where & ", " & Error.Text)
    
End

Public Sub btnPickFile_Click()

  FFilePick.ShowDialog
  myPath = modVariables.sFilePath
  
  If myPath <> "" Then 
    btnPickVolunteer.Enabled = True
  Else 
    btnPickVolunteer.Enabled = False
  Endif
Catch 
  Print Error.Text
  Dec Application.Busy
  Message.Error(Error.Where & ", " & Error.Text)
End

Public Sub gridFacturas_Data(Row As Integer, Column As Integer)

  If Row Mod 2 = 0 Then gridFacturas.Data.Background = Color.RGB(115, 115, 115)

  If (colRecords[Row + 2] <> Null) Then 
    gridFacturas.Data.text = colRecords[Row + 2][CStr(aFields[Column])]
  Endif

Catch 
  Print Error.Text
  Dec Application.Busy
  Message.Error(Error.Where & ", " & Error.Text)

End

Public Sub doInjectFacturas(Optional setTotales As Boolean)

Dim myColName As String
Dim myField As Variant
Dim myValue As Variant
Dim iInt, iRecordsCount As Integer
Dim iSelFacturas As Integer
Dim myDate As Date
Dim myfTotal As Float
Dim myiFolio As Integer
Dim sDay, sMonth, sYear As Integer
Dim bDateFound, bTotalFound, bFolioFound, bFound, bAdded As Boolean
Dim sQuery As String
Dim hResult As Result


bfound = False
iLastIndex = 0
bTotalFound = False
bDateFound = False
bAdded = False
iInt = 0
iSelFacturas = 0
'FTickets.iSelected.Clear

  For iRecordsCount = 0 To colRecords.Count
    Print iRecordsCount
    lblStatus.Text = ""
    lblStatus.Text = "Registro: " & iRecordsCount & ", iInt: " & iInt
    lblStatus.Refresh
    myiFolio = 0
    myfTotal = 0
    myDate = CDate("01/01/1980 00:00:00")
    
    For Each myField In colRecords
      If (myField <> Null) Then
        For Each myColName In aFields
          Select Case myColName
            Case "folio"
              If (myField["folio"] <> Null) Then 
                myiFolio = CInt(myField["folio"])
                bFolioFound = True
              Endif
            Case "total", "total mxn"
              If (myField["total"] <> Null) Then 
                myfTotal = CFloat(myField["total"])
                bTotalFound = True
              Else 
                myfTotal = 0
                bTotalFound = False
              Endif 
            Case "fecha"
              'Hay que corregir la fecha, pues el sistema me da un dia de menos
              If (myField["fecha"] <> Null) Then 
                myValue = myField["fecha"]
                sDay = CInt(Left(myValue, 2))
                sMonth = CInt(Mid(myValue, 4, 2))
                sYear = CInt(Right(myValue, 4))
                myDate = CDate("01/01/1980 00:00:00")
                myDate = DateAdd(myDate, gb.Year, sYear - 1980)
                myDate = DateAdd(myDate, gb.Month, sMonth - 1)
                myDate = DateAdd(myDate, gb.Day, sDay)
                myDate = DateAdd(myDate, gb.Hour, -18)
                'myDate = DateAdd(myDate, gb.Minute, -59)
                bDateFound = True
              Else 
                myDate = CDate("01/01/1980 00:00:00")
                bDateFound = False
              Endif
            Default 
          End Select
          If bTotalFound And bDateFound And bFolioFound Then 
            bFound = False
            FTickets.rsRecords.MoveFirst
            For Each FTickets.rsRecords 'read total and date from records, one at the time
              bAdded = False 
              iLastIndex = FTickets.rsRecords.Index
              'FTickets.rsRecords.MoveTo(iLastIndex)
              'If (FTickets.rsRecords["ID Pago"] = 4) Then 
              '  iLastIndex = FTickets.rsRecords.Index
              '  For iInt = 0 To FTickets.iSelected.Count - 1
              '    If FTickets.iSelected[iInt] = iLastIndex Then bAdded = True
              '  Next
              '  If Not bAdded Then 
              '    FTickets.iSelected.Add(iLastIndex)
              '    bFound = True 'reset bfound
              '    bTotalFound = False 
              '    bDateFound = False
              '    bAdded = False
              '  Endif
              'Endif
              If (CFloat(myfTotal) = CFloat(FTickets.rsRecords["Total"])) Then
                If Year(myDate) >= Year(CDate(FTickets.rsRecords["Fecha Hora"])) And Month(myDate) >= Month(CDate(FTickets.rsRecords["Fecha Hora"])) And Day(myDate) >= Day(CDate(FTickets.rsRecords["Fecha Hora"])) Then
                  'iLastIndex = FTickets.rsRecords.Index
                  For iInt = 0 To FTickets.iSelected.Count - 1
                    If FTickets.iSelected[iInt] = iLastIndex Then bAdded = True
                  Next
                  If Not bAdded Then 
                    Print "myfTotal: " & CStr(myfTotal)
                    Print "CFloat(FTickets.rsRecords[\"Total\"]: " & CStr(FTickets.rsRecords["Total"])
                    FTickets.iSelected.Add(iLastIndex)
                    bFound = True 'reset bfound
                    bTotalFound = False 
                    bDateFound = False
                    bAdded = False
                    If myfTotal > 0 Then 
                      sQuery = "UPDATE `db_tacosroy_" & modVariables.sPrefijoDB & "`.`tbl_ordenes_cerradas` SET `bool_factura` = '1' WHERE (`id_orden_cerrada` = &1);"
                      Try modVariables.c_Conn.Exec(sQuery, FTickets.rsRecords["ID ORC"])
                      'myiFolio
                    Endif 
                    sQuery = "SELECT * FROM  `db_tacosroy_" & modVariables.sPrefijoDB & "`.`tbl_facturas` where `id_orden` = &1"
                    
                    Try hResult = modVariables.c_Conn.Exec(sQuery, FTickets.rsRecords["ID ORC"])
                    If (hResult <> Null) And hResult.Available Then 
                      sQuery = "UPDATE `db_tacosroy_" & modVariables.sPrefijoDB & "`.`tbl_facturas` SET `chr_nr_factura` = '&1', `bit_realizada` = '1' WHERE (`id_orden` = &2);"
                      Try modVariables.c_Conn.Exec(sQuery, CStr(myiFolio), FTickets.rsRecords["ID ORC"])
                      Print sQuery
                    Else
                      hResult = Null
                      modVariables.c_Conn.Begin()
                      hResult = modVariables.c_Conn.Create("tbl_facturas")
                        hResult!id_orden = FTickets.rsRecords["ID ORC"]
                        hResult!chr_nr_factura = myiFolio
                        hResult!bit_realizada = 1
                        hResult.Update()
                      modVariables.c_Conn.Commit()
                      Print "myiFolio: " & myiFolio
                    Endif
                  Endif 
                Endif
              Endif
              'Inc iLastIndex
              'If iLastIndex >= FTickets.rsRecords.Count Then iLastIndex -= FTickets.rsRecords.Count
              If bFound Or iInt >= colRecords.Count Then Break
            Next 
          Endif 
        Next 
      Endif
    Next
  Next 
 

Catch 
  Print Error.Text
  Dec Application.Busy
  Message.Error(Error.Where & ", " & Error.Text)
   
End


Public Sub btnInject_Click()

Inc Application.Busy

  doInjectFacturas(True)
  'FTickets.escogeComandas(FTickets.rsRecords, True)
  
Dec Application.Busy
Me.Close

Catch 
  Dec Application.Busy
  Print Error.Text
  Message.Error(Error.Where & ", " & Error.Text)
End



