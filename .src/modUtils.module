' Gambas module file

'Private c_Conn As Connection
'Private $rData As Result
Public $dNow As Date

'Public Sub logError(sFile As String)
'  
'  
'  
'End

Public Function findPrice(iIDProducto As Integer, iTipoPrecio As Integer, iControlFechaStart As Integer, Optional iControlFechaEnd As Integer) As Float

Dim sQuery As String
Dim hResultPrecio As Result
Dim flMyPrice As Float

  sQuery = "select"
  sQuery &= " ANY_VALUE( `tbl_control_fechas`.`id_control_fechas`) AS `IDCF`,"
  sQuery &= " ANY_VALUE( `tbl_productos`.`id_producto` ) as `ID Prod`,"
  sQuery &= " ANY_VALUE( `tbl_productos`.`chr_nombre_prod` ) as `Producto`,"
  sQuery &= " ANY_VALUE( `tbl_precios_productos`.`dbl_precio` ) as `Precio`,"
  sQuery &= " ANY_VALUE( `tbl_precios_productos`.`dat_fecha_precio_activo` ) as `Fecha Precio`,"
  sQuery &= " ANY_VALUE( `tbl_precios_productos`.`int_tipo_precio` ) as `Tipo Precio`,"
  sQuery &= " ANY_VALUE( `tbl_precios_productos`.`bit_activo` ) as `Activo`"
  sQuery &= " From `tbl_precios_productos` "
  sQuery &= " left join `tbl_productos` on `tbl_productos`.`id_producto` = `tbl_precios_productos`.`id_producto`"
  sQuery &= " left join `tbl_control_fechas` on DATE(`tbl_control_fechas`.`dt_fecha_calendario`) = DATE(`tbl_precios_productos`.`dat_fecha_precio_activo`)"
  sQuery &= " where "
  sQuery &= "  `tbl_productos`.`id_producto` = &1 "
  sQuery &= " group by `tbl_precios_productos`.`dat_fecha_precio_activo`"
  sQuery &= " order by `tbl_precios_productos`.`dat_fecha_precio_activo` Asc "
  
  flMyPrice = -1
  hResultPrecio = Null
  Try hResultPrecio = modVariables.c_Conn.Exec(sQuery, iIDProducto)
  
  If (hResultPrecio <> Null) And hResultPrecio.Available Then 
    For Each hResultPrecio
      If (hResultPrecio["IDCF"] <> Null) Then 
        If (hResultPrecio["IDCF"] >= iControlFechaStart) And (hResultPrecio["IDCF"] <= iControlFechaEnd And iTipoPrecio = hResultPrecio["Tipo Precio"]) Then 
          flMyPrice = hResultPrecio["Precio"]
        Endif
      Endif
    Next
    If flMyPrice = -1 Then 
      hResultPrecio.MoveFirst
      For Each hResultPrecio
        If (hResultPrecio["Activo"] = 1 And iTipoPrecio = hResultPrecio["Tipo Precio"]) Then 
        flMyPrice = hResultPrecio["Precio"]
      Endif
      Next
    Endif
  Else 
    Return -1
  Endif
   
  hResultPrecio = Null
  
  Return flMyPrice
  
Catch 
  Print Error.Text
  'Message.Error(Error.Text)
  
End


Public Function ifNull(vToTest As Variant, vToSet As Variant) As Variant
  
  If (vToTest = Null) Then 
    Return vToSet 
  Else 
    Return vToTest
  Endif
  
End


Public Sub doSQLDump()
Dim sFilePath, fileName, tempFile As String

  sFilePath = User.Home &/ "Dropbox/2020/TRdumps" &/ modVariables.sPrefijoDB
  fileName = "mysqldb_" & modVariables.sPrefijoDB & "_" & CStr(Format(Now, "yyyy-mm-dd_hh-nn-ss")) 
  tempFile = "mysqldump -u root -pt4a2x0a6 db_tacosroy_" & modVariables.sPrefijoDB & " > " & sFilePath &/ fileName & ".sql"
  Shell tempFile Wait
  
  tempFile = "7za a -tzip -pt4a2x0a6 -mem=AES256 " & sFilePath &/ fileName & ".zip " & sFilePath &/ fileName & ".sql"
  Shell tempFile Wait
  
  If Not Error Then modVariables.cnfDBUpdates["Backups/backup_" & modVariables.sPrefijoDB] = "False"
  
  Try Kill sFilePath &/ fileName & ".sql"
  
Catch 
  Print (Error.Text & ", " & Error.Where)
  Message.Error(Error.Text & ", " & Error.Where)
  
End


Public Function exportHTMLFile(hResult As Result) As String
Dim tempHTML As String
Dim iInt, iJnt As Integer  
  
  tempHTML = "<body><table>" 
  tempHTML &= "<tr>" 
  
  For iInt = 0 To hResult.Fields.count - 1
    tempHTML &= "<td>" & hResult.Fields[iInt].Name & "</td>"
  Next
  
  tempHTML &= "</tr>" 
  hResult.MoveFirst

  For iJnt = 0 To hResult.Count - 1
    tempHTML &= "<tr>" 
    For iInt = 0 To hResult.Fields.count - 1
      tempHTML &= "<td>" & hResult[hResult.Fields[iInt].Name] & "</td>"
    Next 
    tempHTML &= "</tr>"
    hResult.MoveNext
  Next
  
  tempHTML &= "</table></body>"
  Return tempHTML
End

Public Function insertaVariantePlatillo(idProdOrden As Integer, idPlatillo As Integer) As Boolean

Dim sQueryString As String
  
  sQueryString = "INSERT INTO `tbl_prods_orden_opciones` (`id_prod_x_orden`, `id_variante_platillo`) VALUES (&1, &2)" 
  Try modVariables.c_Conn.Exec(sQueryString, idProdOrden, idPlatillo)
   
  If Error Then 
    Message.Error(Error.Text & ", " & Error.Where)
  Else
    Return True
  Endif
  
Catch
  Message.Error(Error.Text & ", " & Error.Where)
  Return False
End


Public Function convierteFechaFormato(laFecha As Date) As String
 
  Return Year(laFecha) & "-" & Month(laFecha) & "-" & Day(laFecha)
  
End

Public Function convierteFechaFormatoHora(laFecha As Date) As String
Dim sTemp As String
  
  sTemp = Second(laFecha)
  If Len(sTemp) = 1 Then sTemp = "0" & sTemp
  Return Year(laFecha) & "-" & Month(laFecha) & "-" & Day(laFecha) & "_" & Hour(laFecha) & ":" & Minute(laFecha) & ":" & sTemp
  
End

Public Sub TimerClk_Timer() As String

  'Dim sTime As String
  
  'If Second(Now) = $i_iLast Then Return
  $dNow = Now
  modVariables.sTime = Format($dNow, "dddd dd mmmm yyyy, hh:nn:ss")
  Return CStr(modVariables.sTime)

End

Public Sub EnableDisableControls(cContainer As Container, tTag As String, bNewState As Boolean)
  
  Dim myControl As Control
  
  cContainer.Enabled = True
    For Each myControl In cContainer.Children
      If Object.GetProperty(myControl, "Tag") = tTag Then 
        'Print Object.GetProperty(myControl, "Name") & ": ON"
        Object.SetProperty(myControl, "Enabled", bNewState)
        'Print Object.GetProperty(myControl, bNewState)
      Endif
    Next
  
End

Public Sub CleanFormControls(cContainer As Container, tTag As String)
  
  Dim myControl As Control
  
  cContainer.Enabled = True
    For Each myControl In cContainer.Children
      If Object.GetProperty(myControl, "Tag") = tTag Then 
        'Print Object.GetProperty(myControl, "Name") & ": ON"
        If (Object.Is(Mycontrol, "DataControl")) Then 
          Try Object.SetProperty(myControl, "Value", "")
        Endif
        
        If (Object.Is(MyControl, "TextBox")) Then 
          Try Object.SetProperty(myControl, "Text", "")
        Endif
        
        If Error Then Print Error.Text
        'Print Object.GetProperty(myControl, bNewState)
      Endif
    Next
  
End

Public Sub ReadData(tbvData As Object, $rData As Result)

  Dim hField As ResultField
  Dim iInd As Integer
  'Dim iTemp As Integer

  Inc Application.Busy

  'tbvData.Rows.Count = 0

  tbvData.Columns.Count = $rData.Fields.Count

  For Each hField In $rData.Fields

    With hField

      Print .Name; ": "; .Type; " "; .Length; " "; .Result[0]

      tbvData.Columns[iInd].Text = .Name
      tbvData.Columns[iInd].Width = WidthFromType(tbvData, .Type, .Length, .Name)
      

    End With

    Inc iInd
  Next

  'tbvData.Rows.Count = $rData.Count
  
  tbvData.Refresh
Finally

  Dec Application.Busy

Catch

  Message.Error("Cannot exec request." & "\n\n" & DConv(Error.Text & ", " & Error.Where))

End

Private Function WidthFromType(hCtrl As Control, iType As Integer, iLength As Integer, sTitle As String) As Integer

  Dim iWidth As Integer

  Select Case iType

    Case gb.Boolean
      iWidth = hCtrl.Font.TextWidth(Str(False)) + 32

    Case gb.Integer
      iWidth = hCtrl.Font.TextWidth("1234567890") + 4

    Case gb.Long
      iWidth = hCtrl.Font.TextWidth("12345678901234567890") + 8

    Case gb.Float
      iWidth = hCtrl.Font.TextWidth(CStr(Pi) & "E+999") + 8

    Case gb.Date
      iWidth = hCtrl.Font.TextWidth(Str(Now)) + 16

    Case gb.String
      If iLength = 0 Then iLength = 64
      iLength = Min(32, iLength)
      iWidth = hCtrl.Font.TextWidth("X") * iLength + 4

  End Select

  iWidth = Max(iWidth, hCtrl.Font.TextWidth(sTitle) + 8)

  Return iWidth

End

Public Sub ShowImage(Row As Integer, picBox As PictureBox)
  
  Dim tempFile As String
  'Dim tempPicture As String
  'tempFile = Temp() & ".jpg"
  '$hClientes.MoveTo(Row)
  picBox.Picture = Null
  tempFile = Temp() & ".jpg"
  tempFile = User.Home &/ ".pictures" &/ CStr(Row + 1) & ".jpg"
  'tempPicture = $hClientes["foto_cliente"] 
  'File.Save(tempFile, tempPicture)
  picBox.Picture = Picture.Load(tempFile)
  
End
