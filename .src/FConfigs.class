' Gambas class file

Private $tempPicFile As String
'para el grid de usuarios
Private $UsersView As Result '
Private WhichColumnClicked As Integer
Private FromAlfa2Zulu As Boolean
Private colName As String

Public Sub RefreshGridUsers()
  
  Dim rData As Result
  'Dim hField As ResultField
  'Dim iInd As Integer 
  Dim queryS As String
  Dim hConn As Connection
  
  'gridUsers.Rows.count = 0
  $UsersView = Null
  'DataBrowser1.r
  hConn = modConn.ConectarDB()
  queryS = "Select * from vw_usuarios_datos"
  
  Try rData = hConn.Exec(queryS)
  If Error Then Print Error.Text
  $UsersView = rData
  
  gridUsers.Children[0].rows.count = 0
  If rData.Available Then
    
    modUtils.ReadData(gridUsers, rData)
    
  Endif
  
End

Public Sub Form_Open()

  'Declara variables
  Dim hConn As Connection
  Dim hResult As Result
  
  Dim iInd As Integer
  Dim iCol As Integer
  Dim iNrElements As Integer
  
  Dim tempString As String
  Dim tempInt As Integer

  'Acomodar los botones
  boxNvoErase.X = 441
  boxNvoErase.Y = 413
  boxCnlGrd.X = 441
  boxCnlGrd.Y = 413
  boxNvoErase.Visible = True
  boxCnlGrd.Visible = False
  VBox6.X = VBox5.X
  VBox6.Visible = False 
  
  cmbCategorias.Add("Elija categoría")
  cmbTipoPrecios.Add("Elija...")
  
  hConn = modConn.ConectarDB()
  hResult = hConn.Exec("Select * FROM vw_categorias")
  
  iInd = 0
  iCol = 0
  iNrElements = 0
  
  RefreshGridUsers
  
  
  
  For Each hResult
    With hResult
      'Print "Start:\n[0]:" & .[0] & ", [1]:" & .[1] & ", iInd:" & iInd & ", iCol:" & iCol & ", iNr:" & iNrElements
     
       'Primero poner label de categoria padre          
      tempString = CStr(.[0] & ", " & .[1])
      cmbCategorias.Add(tempString) ', .[2])
      Print "Elemento a combo: " & tempString & ", index: " & .[2]
      Inc iInd
    End With
  Next
  
  hResult = Null
  hResult = hConn.Exec("Select * FROM tbl_tipos_precios")
  tempString = ""
  
  For Each hResult
    With hResult
      'Print "Start:\n[0]:" & .[0] & ", [1]:" & .[1] & ", iInd:" & iInd & ", iCol:" & iCol & ", iNr:" & iNrElements
     
       'Primero poner label de categoria padre          
      tempString = CStr(.[1])
      tempInt = .[0]
      cmbTipoPrecios.Add(tempString, tempInt)
      Print "Elemento a combo: " & tempString & ", index: " & .[1]
      Inc iInd
    End With
  Next

  
  'Cierra la conexión
  hResult = Null
  hConn = Null

End

Public Sub btnCerrar_Click()

  Me.Close

End


Public Sub btnNuevo_Click()

  txtNombreProd.Enabled = True
  txtDescProd.Enabled = True
  PictureBox1.Enabled = True
  btnCargarFotos.Enabled = True
  
  boxNvoErase.Visible = False
  boxCnlGrd.Visible = True
  
  boxCategorias.Enabled = True  
  lblCategorias.Enabled = True
  cmbCategorias.Enabled = True  
  cmbTipoPrecios.Enabled = True
  lblPrecio.Enabled = True
  txtPrecio.Enabled = True  

End

Public Sub btnCancelar_Click()

  Dim intResp As Integer
  
  intResp = Message.Question("Desea cancelar los cambios hechos?", "Sí", "No")
  
  If (intResp = 1) Then
    'Cancela todo y limpia formula
    cleanForm()
  End If

End

Public Sub btnGuardar_Click()
  'Guarda el producto nuevo en la base de datos
  Dim intResp As Integer
  Dim hConn As Connection
  Dim hResult As Result
  Dim queryString As String
  Dim lastProdId As Integer
  
  intResp = Message.Question("Desea guardar los cambios?", "Sí", "No")
  If (intResp = 1) Then
    
    If (PictureBox1.Picture = Null) Then
      If (Message.Warning("No se ha elegido una fotografia para este producto, proceder?", "Sí, Adelante", "Regresar") = 2) Then btnCargarFotos.SetFocus
    Endif
    
    If (cmbTipoPrecios.Index = 0) Then 
      Message.Warning("Por favor elija un tipo de precio")
      cmbTipoPrecios.SetFocus
    Endif
    
    If (cmbCategorias.Index = 0) Then 
      Message.Warning("Por favor elija una categoria")
      cmbCategorias.SetFocus
    Endif
    'abre conexión con la base de datos
    hConn = modConn.ConectarDB()
    
    queryString = "INSERT INTO `tbl_productos` (`chr_nombre_prod`, `chr_desc_prod`, `chr_pic_prod_path`) VALUES ('" &
      txtNombreProd.Text & "', '" & txtDescProd.Text & "', " & "'/home" &/ "./tacosRoy/" &/ "pictures " &/ $tempPicFile & " ')"
    Print queryString
    Try hResult = hConn.Exec(queryString)
    If Error Then Print Error.Text
    'obtiene ID del producto recién insertado
    lastProdId = hConn.Exec("select last_insert_id() as last")["last"]
    
    queryString = "UPDATE `tbl_productos` SET " & 
     "`chr_pic_prod_path` = '" & lastProdId & ".jpg'" &
     "WHERE `tbl_productos`.`id_producto` = '" & lastProdId & "'"
    
    Print queryString
    Try hResult = hConn.Exec(queryString)
    If Error Then Print Error.Text
    
    'guarda la foto en disco con el ID del producto recién insertado
    Try Shell "mv '" & $tempPicFile & "' '" & User.Home &/ "/.tacosRoy/pictures/" & lastProdId & ".jpg " & "'" 
    If Error Then Print Error.Text
    
    queryString = "INSERT INTO `tbl_precios_productos` (`id_producto`, `dbl_precio`, `int_tipo_precio`) VALUES (" &
      lastProdId & ", " & CFloat(txtPrecio.Text) & ", " & cmbTipoPrecios.Index & ")"
    
    Print queryString
    Try hResult = hConn.Exec(queryString)
    If Error Then Print Error.Text
  
    message("Los datos han sido guardados", "Aceptar")
    'limpia todo
    cleanForm()
  Else
    'Regresa focus al textbox
     txtNombreProd.SetFocus
  End If
  
End

Private Sub cleanForm()
  
  txtNombreProd.Text = ""
  txtNombreProd.Enabled = False
  txtDescProd.Text = ""
  txtDescProd.Enabled = False
  PictureBox1.Picture = Null
  PictureBox1.Enabled = False
  btnCargarFotos.Text = ""
  btnCargarFotos.Enabled = False
  boxNvoErase.Visible = True
  boxCnlGrd.Visible = False
  boxCategorias.Enabled = False
  lblCategorias.Enabled = False 
  cmbTipoPrecios.Enabled = False
  cmbCategorias.Enabled = False
  lblPrecio.Enabled = False
  txtPrecio.Enabled = False
  
End


Public Sub btnCargarFotos_Click()

'    Dim Dialog As Dialog
    Dim myImage As Image
    Dim factor As Float
    Dim imgPath As String
    
    'Dim hFile As File
    
    myImage = New Image
    
    Dialog.Title = "Escoja una foto"
    Dialog.Filter = ["*.jpg", "Archivos JPG", "*.JPG", "Archivos JPG", "*.jpeg", "Archivos JPG", "*.JPEG", "Archivos JPEG", "*.png", "Archivos PNG", "*.gif", "Archivos Gif"]
    'Dialog.Path = "."
    If Dialog.OpenFile() Then
      Return ' User pressed Cancel -
    Else
      imgPath = Dialog.Path
      btnCargarFotos.Text = imgPath
      'hFile = Open Dialog.Path For Read
      
      myImage = myImage.Load(imgPath)
      
      If myImage.Width > myImage.Height Then
        'la imagen es más ancha que alta, procesarla a ancho de 150
        factor = 270 / myImage.Width 
      Else
        factor = 140 / myImage.Height
      Endif
      
      myImage = myImage.Stretch(Round(myImage.Width * factor), Round(myImage.Height * factor))
      
      'If modVariables.$hClientes[0] > 0 Then 
      '  $tempPicFile = User.Home &/ ".tacosRoy" &/ "pictures" &/ modVariables.$hClientes[0] & ".tmp.jpg"
      'Else
        $tempPicFile = Temp() & ".jpg"
      'Endif
        myImage.Save($tempPicFile, 85)
        
        PictureBox1.Picture = Picture.Load($tempPicFile)
 
    Endif
  btnCargarFotos.Text = ""
End
