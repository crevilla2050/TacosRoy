' Gambas class file

'para los grids
Private $UsersView As Result 
Private $gridInsumos As Result
Private $gridProductos As Result
Private $gridInsumosProds As Result

'tab facturacion
Private $sLastLink As String

'tab Insumos
Private myInsumoTxt As TextBox
Private myInsumoLbl As Label
Private myHContainer As HBox

'tab usuarios
Private sUsrOper As String
Private idUserGrid As Integer
Private $gridUsuarios As Result

Private Sub RefreshGridUsers()
  
  Dim rData As Result

  Dim queryS As String
  Dim hConn As Connection
  
  $UsersView = Null

  hConn = modConn.ConectarDB()
  queryS = "Select * from vw_datos_usuarios"
  
  Try rData = modVariables.$hConn.Exec(queryS)
  If Error Then Print Error.Text
  $UsersView = rData
  
  'gridUsers.Children[0].rows.count = 0
  If rData.Available Then
    
    modUtils.ReadData(gridUsers, rData)
    
  Endif
  
End

Public Sub Form_Open()

  'Declara variables
  Dim hResult As Result
  
  Dim iInd As Integer
  Dim iCol As Integer
  Dim iNrElements As Integer
  
  Dim tempInt As Integer
  Dim sQuery As String

  'Acomodar los botones
  'boxNvoErase.X = 441
  'boxNvoErase.Y = 413
  'boxCnlGrd.X = 441
  'boxCnlGrd.Y = 413
  'boxNvoErase.Visible = True
  'boxCnlGrd.Visible = False
  'VBoxBtn2.X = VBoxBtn1.X
  'VBoxBtn2.Visible = False 
  
  iInd = 0
  iCol = 0
  iNrElements = 0
  
  If modVariables.$hConn = Null Then modVariables.$hConn = modConn.ConectarDB()
  
  gridUsers.header = GridView.Horizontal
  gridUsers.grid = True
  gridUsers.Rows.count = 0
  gridUsers.Columns.count = 9
  gridUsers.Columns[0].text = "ID"
  gridUsers.Columns[1].text = "Nombre"
  gridUsers.Columns[2].text = "Apellidos"
  gridUsers.Columns[3].text = "CURP"
  gridUsers.Columns[4].text = "Telefono"
  gridUsers.Columns[5].text = "Puesto"
  gridUsers.Columns[6].text = "Login"
  gridUsers.Columns[7].text = "Tipo"
  gridUsers.Columns[8].text = "Activo"
  
  gridUsers.Columns[0].width = 50
  gridUsers.Columns[1].width = 120
  gridUsers.Columns[2].width = 180
  gridUsers.Columns[3].width = 100
  gridUsers.Columns[4].width = 100
  gridUsers.Columns[5].width = 100
  gridUsers.Columns[6].width = 100
  gridUsers.Columns[6].width = 130
  gridUsers.Columns[6].width = 50
  
 
  'Llena el combo de status
  Try hResult = modVariables.$hConn.Exec("Select * from tbl_status")
  If Error Then Print Error.Text
  
  For Each hResult
    With hResult     
       'Primero poner label de categoria padre
      cmbTipoUsuario.Add(CStr(.[1]), .[0])
      'Print "Elemento a combo: " & tempString & ", index: " & .[2]
      Inc iInd
    End With
  Next
  
  hResult = Null
  
  'Llena el combo de puestos de trabajo
  Try hResult = modVariables.$hConn.Exec("Select * from tbl_puestos")
  If Error Then Print Error.Text
  
  For Each hResult
    With hResult     
       'Primero poner label de categoria padre
      cmbPuesto.Add(CStr(.[1]), .[0])
      'Print "Elemento a combo: " & tempString & ", index: " & .[2]
      Inc iInd
    End With
  Next

  'Tab usuarios =======================
  
  Try $gridUsuarios = modVariables.$hConn.Exec("Select * from vw_datos_personal_logins where Activo = 1")
  If Error Then 
    Print Error.text 
  Else 
    gridUsers.Rows.Count = 0
    gridUsers.Rows.Count = $gridUsuarios.Count
  Endif

  ''==Facturacion =========================
  WebSettings.IconDatabase.Path = File.Dir(File.Dir(Temp$()))
  WebSettings.Fonts.FixedFont = "Monospace"
  WebSettings[WebSettings.PluginsEnabled] = True
  WebSettings[WebSettings.JavascriptEnabled] = True
  WebSettings[WebSettings.JavaEnabled] = True
  WebSettings.Fonts.DefaultFontSize = 12
  WebSettings.Fonts.DefaultFixedFontSize = 12

  CreateView()
  btnZoomNormal_Click
  'txtURL.SetFocus
  tabBrowser_Click
  
  txtURL.Text = "https://fel.blikon.com/CFDI33FP/Presentacion/Usuario/Ingreso.aspx?v2"
  txtURL_Activate
  
  ''== Datos de sucursal
  Try hResult = modVariables.$hConn.Exec("Select * FROM tbl_datos_sucursal")
  If hResult.Available Then
    txtSucNombre.Text = hResult["chr_nombre"]
    txtSucDir1.Text = hResult["chr_dir1"]
    txtSucDir2.Text = hResult["chr_dir2"]
    txtSucDir3.Text = hResult["chr_dir3"]
    txtSucTel1.Text = hResult["chr_telefono1"]
    txtSucTel2.Text = hResult["chr_telefono2"]
  Endif
  
  hResult = Null
  
  Try hResult = modVariables.$hConn.Exec("Select * FROM `tbl_usuarios`")
  If hResult.Available Then
    cmbUsuarios.Add(hResult["chr_login"])
  Endif
  
  ''Insumos por platillos
  'vw_insumos_x_platillo
  
  'gridInsumosProds
  gridInsumosProds.header = GridView.Horizontal
  gridInsumosProds.grid = True
  gridInsumosProds.Rows.count = 0
  gridInsumosProds.Columns.count = 4
  gridInsumosProds.Columns[0].text = "ID"
  gridInsumosProds.Columns[1].text = "Producto"
  gridInsumosProds.Columns[2].text = "Insumo"
  gridInsumosProds.Columns[3].text = "Cantidad"
  
  gridInsumosProds.Columns[0].width = 0
  gridInsumosProds.Columns[1].width = 150
  gridInsumosProds.Columns[2].width = 150
  gridInsumosProds.Columns[3].width = 50
  
  'Llena el grid con insumos por productos
  sQuery = "SELECT * FROM db_tacosRoy.vw_insumos_x_platillo ORDER by Producto, ID Asc"
  Try $gridInsumosProds = modVariables.$hConn.Exec(sQuery)
  If $gridInsumosProds.Available Then
    gridInsumosProds.Rows.Count = $gridInsumosProds.Count
  Endif
  
  'gridInsumosProds
  gridInsumos.header = GridView.Horizontal
  gridInsumos.grid = True
  gridInsumos.Rows.count = 0
  gridInsumos.Columns.count = 3
  gridInsumos.Columns[0].text = "id_insumo"
  gridInsumos.Columns[1].text = "Insumo"
  gridInsumos.Columns[2].text = "Descripcion"

  gridInsumos.Columns[0].width = 0
  gridInsumos.Columns[1].width = 150
  gridInsumos.Columns[2].width = 250
  
  'Llena el grid de Insumos
  sQuery = "SELECT `id_insumo`, `chr_nombre_insumo` as `Insumo`, `chr_descripcion` as `Descripcion` FROM `tbl_insumos` where `bit_activo` = 1;"
  Try $gridInsumos = modVariables.$hConn.Exec(sQuery)
  If $gridInsumos.Available Then
    gridInsumos.Rows.Count = $gridInsumos.Count
  Endif
  
  'gridProductos
  gridProductos.header = GridView.Horizontal
  gridProductos.grid = True
  gridProductos.Rows.count = 0
  gridProductos.Columns.count = 4
  gridProductos.Columns[0].text = "id_producto"
  gridProductos.Columns[1].text = "Producto"
  gridProductos.Columns[2].text = "Categoria"
  gridProductos.Columns[3].text = "Activo"

  gridProductos.Columns[0].width = 0
  gridProductos.Columns[1].width = 150
  gridProductos.Columns[2].width = 250
  gridProductos.Columns[3].width = 0
  
  'Llena el grid de Insumos
  sQuery = "SELECT * from `vw_productos_categoria` where `Activo` = 1 order by `id_producto` Asc;"
  Try $gridProductos = modVariables.$hConn.Exec(sQuery)
  If $gridProductos.Available Then
    gridProductos.Rows.Count = $gridProductos.Count
  Endif
  
  hResult = Null
  sQuery = "SELECT * FROM db_tacosRoy.tbl_categorias where bit_activo = 1 and bit_visible = 1 order by fl_orden ASC;"
  Try hResult = modVariables.$hConn.Exec(sQuery)
  
  If hResult.Available Then
    cmbCategorias.Add("Categoria Filtro...")
    For Each hResult
      With hResult     
         'Primero poner label de categoria padre
        cmbCategorias.Add(CStr(.["chr_nombre_cat"]))
      End With
    Next
  Endif
  
  'RefreshGridUsers()
Catch
  Message.Error(Error.Text)
  
End

Public Sub btnSucursal_Change()
  
  btnGuardaDatos.Enabled = True 
  
End


Public Sub txtInsumoCantidad_KeyPress()
    
  If (Key.Code >= Asc("a") And Key.Code <= Asc("z")) Or (Key.Code >= Asc("A") And Key.Code <= Asc("Z")) Then Stop Event
  
End 


Public Sub btnCerrar_Click()

  Me.Close

End



Public Sub Nuevo_Click()

  'Pregunta si desea agregar un usuario nuevo
  If (Message.Question("Desea agregar un usuario nuevo?", "Sí, agregar", "Cancelar") = 1) Then
   
    modUtils.EnableDisableControls(vBoxCampos1, "Usuarios", True)
    'modUtils.CleanFormControls(vBoxCampos1, "FORMA")
    modUtils.EnableDisableControls(VBoxBtn1, "tagModDel", False)
    VBoxBtn2.X = VBoxBtn1.X
    VBoxBtn2.Visible = True
    VBoxBtn2.Enabled = True
    sUsrOper = "NUE"
    txtPassA.Enabled = False
  Else
   
    modUtils.EnableDisableControls(vBoxCampos1, "Usuarios", False)
    modUtils.EnableDisableControls(VBoxBtn1, "tagModDel", True)
    VBoxBtn2.Visible = False
    VBoxBtn2.Enabled = False
    txtPassA.Enabled = True
  Endif

End


Public Sub btnCancelaUsr_Click()

  If (Message.Question("Desea cancelar los cambios hechos?", "Sí, cancelar", "No, Continuar") = 1) Then
    modUtils.EnableDisableControls(vBoxCampos1, "Usuario", False)
    modUtils.EnableDisableControls(vBoxCampos2, "Usuario", False)
    VBoxBtn2.X = VBoxBtn1.X
    VBoxBtn1.Visible = True
    VBoxBtn2.Visible = False
    'vBoxCampos1.Enabled = False
    btnBorrarUsuario.Enabled = False
  Endif

End


Public Sub btnGuardaUsuario_Click()

  Dim queryString As String
  Dim myControl As Object
  Dim rUserInfo As Result
  
  If (Message.Question("Desea guardar los cambios hechos?", "Sí, Guardar", "No, Cancelar") = 1) Then
    
    For Each myControl In vBoxCampos1.Children
      If Object.Is(myControl, "TextBox") = True Then
        If Object.GetProperty(myControl, "Text") = "" Then 
          Message("Por favor incluya todos los datos")
          myControl.SetFocus
        Endif
      Endif
    Next
    
    Select Case sUsrOper
      Case "NUE"
        txtPassA.Enabled = False
        queryString = "INSERT INTO `tbl_personal` (" &
          "`id_personal`, `chr_nombre`, `chr_apellidos`, `chr_CURP, chr_telefono`, `int_puesto`, `int_activo`) " &
          "VALUES (Null, &1, &2, &3, &4, &5, &6);"
        Try modVariables.$hConn.Exec(queryString, txtNombre.Text, txtApellidos.Text, txtCURP.Text, txtTelefono.Text, CInt(cmbPuesto.Index + 1), 1)
        modVariables.sTime
        modVariables.idUserGrid = modVariables.$hConn.Exec("select last_insert_id() as last")["last"]
        If chkUsuario = True Then 'Es un usuario con acceso al sistema
          For Each myControl In vBoxCampos2.Children 'Checamos que todos los campos hayan sido llenados
            If Object.Is(myControl, "TextBox") = True Then
              If Object.GetProperty(myControl, "Text") = "" Then 
                Message("Por favor llene ambos campos de la contraseña")
                myControl.SetFocus
              Endif
            Endif
          Next
        Endif
        'checar si las contraseñas coinciden
        If txtPass1.Text <> txtPass2.Text Then
          Message.Warning("Las contraseñas no coinciden")
          txtPass1.Text = ""
          txtPass2.Text = ""
          txtPass1.SetFocus
        Endif
        queryString = "INSERT INTO `tbl_usuarios` (" &
          "`id_usuario`, `chr_login`, `chr_password`, `int_status`, `bit_activo`) " &
          "VALUES (Null, &1, MD5(&2), &3, &4, 1);"
        Try modVariables.$hConn.Exec(queryString, txtLogin.Text, txtPass1.Text, CInt(cmbTipoUsuario.Index + 1), 1)
        
      Case "MOD"
        modVariables.idUserGrid = $gridUsuarios!ID
        Print modVariables.idUserGrid
        txtPassA.Enabled = True
        queryString = "UPDATE `tbl_personal` SET "  
        queryString &= "`chr_nombre_persona` = '" & txtNombre.Text & "', " 
        queryString &= "`chr_apellidos` = '" & txtApellidos.Text & "', " 
        queryString &= "`chr_telefono` = '" & txtTelefono.Text & "', " 
        queryString &= "`chr_CURP` = '" & txtCURP.Text & "', " 
        queryString &= "`int_puesto` = '" & CInt(cmbPuesto.Index + 1) & "', " 
        queryString &= "`bit_activo` = 1  WHERE `id_personal` = " & modVariables.idUserGrid
          
        Try modVariables.$hConn.Exec(queryString)
        If Error Then Print Error.Text
        
        If chkUsuario.Value = True Then 'Es un usuario con acceso al sistema
          queryString = "SELECT chr_password from tbl_usuarios where id_usuario = &1"
          Try rUserInfo = modVariables.$hConn.Exec(queryString, $gridUsuarios!ID)
          
          If rUserInfo!chr_password = Crypt.MD5(txtPassA.Text, "tacosroytacos") Then

            For Each myControl In vBoxCampos2.Children 'Checamos que todos los campos hayan sido llenados
              If Object.Is(myControl, "TextBox") = True Then
                If Object.GetProperty(myControl, "Text") = "" Then 
                  Message("Por favor llene ambos campos de la contraseña")
                  myControl.SetFocus
                Endif
              Endif
            Next
            
            'checar si las contraseñas coinciden
            If txtPass1.Text <> txtPass2.Text Then
              Message.Warning("Las contraseñas no coinciden")
              txtPass1.Text = ""
              txtPass2.Text = ""
              txtPass1.SetFocus
            Endif
            queryString = "UPDATE `tbl_usuarios` SET (" &
              "`chr_login` = &1, `chr_password`= MD5(&2), `int_status` = &3, `bit_activo` = 1) "
              "WHERE id_usuario = &4;"
            Try modVariables.$hConn.Exec(queryString, txtLogin.Text, txtPass1.Text, CInt(cmbTipoUsuario.Index + 1), $gridUsuarios!IDS)
            
          Else
            Message.Error("La contraseña no es correcta.\n Introduzca la contraseña correcta para aplicar los cambios")
            txtPassA.Text = ""
            txtPassA.SetFocus
          Endif
        Endif
        
    End Select
    'Se limpia el formulario
    modUtils.EnableDisableControls(vBoxCampos1, "Usuario", False)
    modUtils.EnableDisableControls(vBoxCampos2, "Usuario", False)
    VBoxBtn2.X = VBoxBtn1.X
    VBoxBtn1.Visible = True
    VBoxBtn2.Visible = False
    'vBoxCampos1.Enabled = False
    btnBorrarUsuario.Enabled = False
    
    For Each myControl In vBoxCampos2.Children 'Checamos que todos los campos hayan sido llenados
      If Object.Is(myControl, "TextBox") = True Then
        Object.SetProperty(myControl, "Text", "")
      Endif
      Object.SetProperty(myControl, "Enabled", False)
    Next
    
  Endif

End

'Facturacion ---------------------------------
Private Sub GetView() As WebView
  
  Try Return tabBrowser[tabBrowser.Index].Children[0]
  
End

Private Sub IsLastCurrentView() As Boolean
  
  Dim hView As WebView = GetView()
  Return hView = Last
  
End

Public Sub WebView_Link(Url As String)

  If Not IsLastCurrentView() Then Return
  $sLastLink = Url
  lblStatus.Text = Url

End

Public Sub WebView_Status()

  If Not IsLastCurrentView() Then Return
  lblStatus.Text = GetView().Status

End

Public Sub WebView_Progress()

  GetView().Status = "Cargando..."
  If Not IsLastCurrentView() Then Return

  lblStatus.Text = GetView().Status
  pgbLoad.Value = GetView().Progress
  panLoad.Show

End

Public Sub WebView_Error()

  Dim hView As WebView = GetView()
  Dim sUrl As String
  
  sUrl = $sLastLink
  If Not sUrl Then sUrl = txtURL.Text

  ' If Not (sUrl Begins "www.") Then 
  '   txtURL.Text = "www." & sUrl
  '   btnGo.Value = True
  '   Return
  ' Endif

  hView.Status = "No se puede cargar modulo de facturacion: " & sUrl
  hView.HTML = "<h3>Unable to find the following URL:</h3>" & sUrl
  If Not IsLastCurrentView() Then Return

  lblStatus.Text = GetView().Status
  pgbLoad.Hide

End

Public Sub WebView_Load()

  'Dim iInd As Integer
  Dim hView As WebView = GetView()
  Dim hIcon As Picture

  hView.Status = ""
  hIcon = hView.Icon 'WebSettings.IconDatabase[hView.Url]
  tabBrowser[hView.Tag].Picture = hIcon
  
  If Not IsLastCurrentView() Then Return

  lblStatus.Text = ""
  txtURL.Text = hView.Url
  pgbLoad.Hide
  
  UpdateIcon
  
  ' Debug GetView().Frame
  ' For iInd = 0 To GetView().Frame.Children.Count - 1
  '   Debug "["; iInd; "] "; GetView().Frame.Children[iInd]
  ' Next

End

Public Sub btnGo_Click()

  Dim sText As String = txtURL.Text
  
  If InStr(sText, "://") = 0 Then sText = "http://" & sText
  
  $sLastLink = sText
  GetView().Url = sText

End

Public Sub txtURL_Activate()

  btnGo.Value = True

End

Public Sub btnBack_Click()

  GetView().Back

End

Public Sub btnForward_Click()

  GetView().Forward

End

Public Sub btnStop_Click()

  GetView().Stop

End

Public Sub btnReload_Click()

  Dim hView As WebView = GetView()

  hView.Reload

End

Public Sub btnZoomIn_Click()

  GetView().Zoom = Round(GetView().Zoom * 1.25, -2)

End

Public Sub btnZoomOut_Click()

  GetView().Zoom = Round(GetView().Zoom / 1.25, -2)

End

Public Sub btnZoomNormal_Click()

  GetView().Zoom = 1

End

Public Sub WebView_Title()

  Dim hView As WebView = Last
  tabBrowser[hView.Tag].Text = hView.Title
  If Not IsLastCurrentView() Then Return
  Me.Title = hView.Title & " - Gambas WebKit"

End

Public Sub WebView_Icon()

  Dim hView As WebView = Last
  'hView.Icon.Save("~/icon.png")
  tabBrowser[hView.Tag].Picture = hView.Icon
  UpdateIcon

End

Public Sub btnClear_Click()

  txtURL.Clear
  txtURL.SetFocus

End

Public Sub WebView_NewWindow((Modal) As Boolean)

  CreateView()

  Last.NewView = GetView()
  
End

Private Sub CreateView()
  
  Dim iLast As Integer = tabBrowser.Count - 1
  Dim hView As WebView

  Object.Lock(tabBrowser)
  Inc tabBrowser.Count
  Object.Lock(tabBrowser)
  tabBrowser[iLast + 1].Picture = tabBrowser[iLast].Picture
  tabBrowser[iLast + 1].Text = tabBrowser[iLast].Text
  tabBrowser[iLast].Text = ""
  tabBrowser[iLast].Picture = Null
  tabBrowser[iLast].Closable = True
  Object.Lock(tabBrowser)
  tabBrowser.Index = iLast
  hView = New WebView(tabBrowser) As "WebView"
  hView.Tag = tabBrowser.Index
  hView.Editable = btnEdit.Value
  hView.Resize(1, 1)
  hView.Show
  Print WebSettings.Fonts.FixedFont
  Object.Unlock(tabBrowser)
  Object.Unlock(tabBrowser)
  Object.Unlock(tabBrowser)
  tabBrowser_Click
  txtURL.SetFocus
  
End


Public Sub tabBrowser_Click()

  Dim iLast As Integer = tabBrowser.Count - 1
  Dim hView As WebView

  If tabBrowser.Index = iLast Then 
    CreateView()
  Else
    hView = GetView()
    If hView.Title Then
      Me.Title = hView.Title & " - Tacos Roy"
    Else
      Me.Title = "Tacos Roy - Facturación"
    Endif
    tabBrowser.Text = hView.Title
    UpdateIcon
    tabBrowser.Picture = hView.Icon
    txtURL.Text = hView.Url
    lblStatus.Text = hView.Status
    pgbLoad.Value = hView.Progress
    If hView.Progress > 0 And If hView.Progress < 1 Then
      panLoad.Show
    Else
      panLoad.Hide
    Endif
  Endif
  
End

Public Sub btnDownloadList_Click()

  FDownloadList.Show

End

Public Sub WebView_Auth()
  
  Dim hView As WebView = Last
  
  If Not FAuth.Run(hView.Auth.Url, hView.Auth.Realm) Then
 
    hView.Auth.User = FAuth.User
    hView.Auth.Password = FAuth.Password
    Debug hView.Auth.Url;; hView.Auth.User;; hView.Auth.Password
    
  Endif 
  
End

Public Sub WebView_Click(Frame As WebFrame)
  
  Dim sName As String = Frame.Name
  If sName Then sName &= ": "
  Debug sName; Frame.Url
  
End

Public Sub WebView_NewFrame(Frame As WebFrame)
  
  Debug Frame.Name
  
End

Public Sub WebView_Download(Download As WebDownload)
  
  Dialog.Path = System.User.Home &/ File.Name(Download.Url)
  If Not Dialog.SaveFile() Then 
    Download.Path = Dialog.Path
    FDownloadList.AddDownload(Download)
    FDownloadList.Show
  Endif
  
End

Public Sub WebView_MouseDown()
  
  Dim hView As WebView = Last
  Dim hTest As WebHitTest = hView.HitTest(Mouse.X, Mouse.Y)
  Dim sMsg As String
  
  If hTest.Document Then sMsg &= "DOCUMENTO "
  If hTest.Link Then sMsg &= "LINK "
  If hTest.Image Then sMsg &= "IMAGEN "
  If hTest.Selected Then sMsg &= "SELECCIONADO "
  If hTest.Editable Then sMsg &= "EDITABLE "
  Debug sMsg; hTest.Url
  
End

Public Sub tabBrowser_Close(Index As Integer)

  Dim hView As WebView
  
  Try hView = tabBrowser[Index].Children[0]
  If Not hView Then Return
  
  hView.Delete
  
  Object.Lock(tabBrowser)
  tabBrowser[Index].Delete
  Object.UnLock(tabBrowser)
  If Index = tabBrowser.Index Then
    If tabBrowser.Index = (tabBrowser.Count - 1) And If tabBrowser.Index > 0 Then
      tabBrowser.Index = tabBrowser.Index - 1
    Else
      tabBrowser_Click
    Endif
  Endif  

End


Private Sub UpdateIcon()

  Dim hView As WebView = GetView()
  Dim hIcon As Picture
  
  hIcon = hView.Icon 'WebSettings.IconDatabase[hView.Url]
  
  If hIcon Then
    Me.Icon = hIcon
  Else
    Me.Icon = Picture["icon:/16/internet"]
  Endif

End

Public Sub btnConfig_Click()

  With WebSettings.Proxy
    
    FOption.Type = .Type
    FOption.Host = .Host
    FOption.Port = .Port
    FOption.User = .User
    FOption.Password = .Password
    
    If FOption.Run() Then Return
    
    .Type = FOption.Type
    .Host = FOption.Host
    .Port = FOption.Port
    .User = FOption.User
    .Password = FOption.Password 
    
  End With

End

Public Sub btnEdit_Click()

  Dim hWebView As WebView
  
  For Each hWebView In tabBrowser.Children
    hWebView.Editable = btnEdit.Value
  Next
  
  WebSettings[WebSettings.JavascriptCanAccessClipboard] = btnEdit.Value
'  panEdit.Visible = btnEdit.Value

End

Public Sub btnAction_Click()

  Dim hWebView As WebView = GetView()
  
  Debug "Action " & Last.Tag & ": "; hWebView.Eval(Subst("document.execCommand('&1', false, false)", Last.Tag))

End

Public Sub btnColor_Click()

  Dim hWebView As WebView = GetView()

  If Dialog.SelectColor() Then Return
  hWebView.Eval(Subst("document.execCommand('forecolor', false, '&1')", "#" & Hex$(Dialog.Color, 6)))

End


Public Sub mnuSelectFont_Click()

  Dim hWebView As WebView = GetView()
  Dim sFont As String = Last.Text

  hWebView.Eval(Subst("document.execCommand('fontname', false, '&1')", sFont))

End


Public Sub btnBackground_Click()

  Dim hWebView As WebView = GetView()

  Dialog.Title = "Select a color"
  If Dialog.SelectColor() Then Return
  hWebView.Eval(Subst("document.execCommand('backcolor', false, '&1')", "#" & Hex$(Dialog.Color, 6)))

End

Public Sub mnuSelectSize_Click()

  Dim hWebView As WebView = GetView()
  Dim sSize As String = Last.Text

  hWebView.Eval(Subst("document.execCommand('fontsize', false, '&1')", sSize))

End



Public Sub btnInsertImage_Click()

  Dim hWebView As WebView = GetView()
  
  Dialog.Title = "Seleccione una imagen"
  Dialog.Filter = ["*.jpg;*.jpeg;*.png;*.gif;*.xpm;*.bmp", "Archivos de Imagenes"]
  If Dialog.OpenFile() Then Return

  Print Dialog.Path
  hWebView.Eval(Subst("document.execCommand('insertImage', false, '&1')", "file://" & Replace(Dialog.Path, "'", "\\'")))
  
End



Public Sub btnPassOk_Click()

Dim sQueryString As String
Dim rResult As Result

  Select Case sUsrOper
    Case "NUE"
      txtPassA.Enabled = False
      If (txtPass1.Text = "" Or txtPass2.Text = "") Then 
        Message.Error("Por favor llenar todos los campos")
        Stop Event
        Return
      Endif
    Case "MOD"
      
      txtPassA.Enabled = True
      If (txtPassA.Text = "" Or txtPass1.Text = "" Or txtPass2.Text = "") Then 
        Message.Error("Por favor llenar todos los campos")
        Stop Event
      Endif
      sQueryString = "SELECT * FROM `tbl_usuarios` where `id_usuario` = " & $gridUsuarios!ID & " and `chr_password` = '" & Crypt.MD5(txtPassA.Text, "tacosroy") & "'"
      rResult = modVariables.$hConn.Exec(sQueryString)
      If rResult = Null Then 
        Message.Error("La contraseña no es correcta")
        txtPassA.Text = ""
        txtPassA.SetFocus
        Stop Event
        Return
      Endif
  End Select
  
  If (txtPass1.Text <> txtPass2.Text) Then 
    Message.Warning("Las contraseñas no coinciden")
    txtPass1.Text = ""
    txtPass2.Text = ""
    txtPass1.SetFocus
    Stop Event
    Return
  Endif
  
  sQueryString = "UPDATE `tbl_usuarios` SET " & 
    "`chr_password` = '" & Crypt.MD5(txtPass1.Text, "tacosroy") & "' " &
    " WHERE `id_usuario` = " & idUserGrid
  Try modVariables.$hConn.Exec(sQueryString)
  
  If Error Then Message.Error(Error.Text & ", " & Error.Where) Else Message.Info("La contraseña se ha guardado exitosamente")
  txtPassA.Text = ""
  txtPass1.Text = ""
  txtPass2.Text = ""
  txtPassA.Enabled = False
  vBoxCampos2.Visible = False
  
  txtNombre.Enabled = False
  txtNombre.Text = ""
  txtCURP.Enabled = False
  txtCURP.Text = ""
  txtLogin.Enabled = False
  txtLogin.Text = ""
  txtTelefono.Enabled = False
  txtTelefono.Text = ""
  cmbTipoUsuario.Enabled = False
  chkUsuario.Enabled = False
  vBoxLabels.Enabled = False
  vBoxCampos1.Enabled = False
  VBoxBtn2.Visible = False
  VBoxBtn1.Visible = True

End


Public Sub btnModifUsuario_Click()
Dim myControl As Control
Dim iResp As Integer

iResp = Message.Question("Desea modificar el usuario seleccionado?", "Sí, modificar", "No, Cancelar")

If (iResp = 1) Then
  sUsrOper = "MOD"
  For Each myControl In vBoxCampos1.Children
     'If Object.Is(myControl, "TextBox") = True Then
      If Object.GetProperty(myControl, "Tag") = "Usuarios" Then 
        Object.SetProperty(myControl, "Enabled", True)
      Endif
      'Endif
  Next
  
  For Each myControl In vBoxCampos2.Children
     'If Object.Is(myControl, "TextBox") = True Then
      If Object.GetProperty(myControl, "Tag") = "Usuarios" Then 
        Object.SetProperty(myControl, "Enabled", True)
      Endif
      'Endif
  Next
  
  vBoxLabels.Enabled = True
  vBoxCampos1.Enabled = True
  VBoxBtn2.Visible = True
  VBoxBtn1.Visible = False
  txtPassA.Enabled = True 
Endif
  
End

Public Sub gridUsers_Data(Row As Integer, Column As Integer)

  $gridUsuarios.moveTo(Row)
  gridUsers.Data.text = Str($gridUsuarios[gridUsers.Columns[column].text])

End

Public Sub gridUsers_Click()

  Dim hResultTipo, hResultPuestos As Result
  Dim sQuery As String
   
  sQuery = "SELECT * FROM tbl_status"
  Try hResultTipo = modVariables.$hConn.Exec(sQuery)
  
  sQuery = "SELECT * FROM tbl_puestos"
  Try hResultPuestos = modVariables.$hConn.Exec(sQuery)
  
  $gridUsuarios.MoveTo(gridUsers.Row)
  'Print $gridUsuarios!ID
  modVariables.idUserGrid = $gridUsuarios!ID
  txtNombre.Text = $gridUsuarios!Nombre
  txtApellidos.Text = $gridUsuarios!Apellidos
  txtLogin.Text = $gridUsuarios!Login
  txtTelefono.Text = $gridUsuarios["Telefono"]
  txtCURP.Text = $gridUsuarios!CURP
  chkUsuario.Value = $gridUsuarios!Activo
  
  For Each hResultTipo
    If hResultTipo!chr_status = $gridUsuarios!Tipo Then 
      cmbTipoUsuario.Enabled = True
    cmbTipoUsuario.Index = hResultTipo.Index
    cmbTipoUsuario.Enabled = False
    Endif
  Next
  
  For Each hResultPuestos
    If hResultPuestos!chr_puesto = $gridUsuarios!Puesto Then 
      cmbPuesto.Enabled = True
      cmbPuesto.Index = hResultPuestos.Index
      cmbPuesto.Enabled = False
    Endif
  Next

  btnBorrarUsuario.Enabled = True
  btnModifUsuario.Enabled = True

hResultPuestos = Null
hResultTipo = Null
End



Public Sub txtTelefono_KeyPress()

  If (Key.Code >= Asc("a") And Key.Code <= Asc("z")) Or (Key.Code >= Asc("A") And Key.Code <= Asc("Z")) Then Stop Event

End

Public Sub txtPrecio_KeyPress()

  If (Key.Code >= Asc("a") And Key.Code <= Asc("z")) Or (Key.Code >= Asc("A") And Key.Code <= Asc("Z")) Then Stop Event

End


Public Sub btnGuardaDatos_Click()

Dim sQuery As String

  If (Message.Question("¿Desea guardar los cambios a los datos de la sucursal?", "Sí, Guardar", "NO, Me espero")) = 1 Then
  
    sQuery = "UPDATE `tbl_datos_sucursal` SET " 
    sQuery &= "`chr_nombre` = &1, " 
    sQuery &= "`chr_dir1` = &2, " 
    sQuery &= "`chr_dir2` = &3, " 
    sQuery &= "`chr_dir3` = &4, " 
    sQuery &= "`chr_telefono1` = &5, " 
    sQuery &= "`chr_telefono2` = &6, " 
    sQuery &= "`id_usuario_encargado` = &7 " 
    sQuery &= "where `id_sucursal` = 1"
    
    modVariables.$hConn.Exec(sQuery, txtSucNombre.Text, txtSucDir1.Text, txtSucDir2.Text, txtSucDir3.Text, txtSucTel1.Text, txtSucTel2.Text, cmbUsuarios.Index)
  Endif

End

Public Sub chkUsuario_Click()
Dim myControl As Control

  vBoxCampos2.Enabled = chkUsuario.Value
  For Each myControl In vBoxCampos2.Children
     'If Object.Is(myControl, "TextBox") = True Then
      If Object.GetProperty(myControl, "Tag") = "Usuarios" Then 
        Object.SetProperty(myControl, "Enabled", chkUsuario.Value)
      Endif
      'Endif
  Next

End

Public Sub btnBorrarUsuario_Click()

Dim sQuery As String

  If (Message.Question("Desea borrar al usuario seleccionado?", "Sí, borrar", "No, me espero!")) = 1 Then
    modVariables.idUserGrid = $gridUsuarios!ID
    sQuery = "UPDATE `tbl_personal` SET "  
    sQuery &= "`bit_activo` = 0  WHERE `id_usuario` = " & modVariables.idUserGrid
    Try modVariables.$hConn.Exec(sQuery)
  Endif

End



Public Sub btnImprimeInsumosReporte_Click()

Dim tempContents As String
Dim rsRecords As Result
Dim squery As String

  sQuery = "Select * from vw_insumos_x_platillo order by Producto, ID Asc"
  Try rsRecords = modVariables.$hConn.Exec(sQuery)
  
  'hFile = Open User.Home & "/reporteTemp.xls" For Write Create
  If rsRecords <> Null Then tempContents = modUtils.generaHTMLtoFile(rsRecords, "Reporte de insumos utilizados por Producto")
  
  'Print #hFile, tempContents
  Print tempContents
  
  Dialog.Filter = ["*.xls", "Hoja de Cálculo Excel"]
  
  If Dialog.SaveFile() Then Return
  If Right(Dialog.Path, 4) <> ".xls" Then Dialog.Path &= ".xls"
  File.Save(Dialog.Path, tempContents)
  Catch
    Message.Info(Error.Text & ", " & Error.Where)
  
  'hFile.Close
  rsRecords = Null

End

Public Sub gridInsumosProds_Data(Row As Integer, Column As Integer)

  $gridInsumosProds.moveTo(Row)
  gridInsumosProds.Data.text = Str($gridInsumosProds[gridInsumosProds.Columns[column].text])

End

Public Sub btnRegistraInsumoProd_Click()
Dim sQuery As String

  If Message.Question("Desea registrar este insumo para el producto seleccionado?", "Sí, guardar", "No, Cancelar") = 1 Then
    sQuery = ""
    
  Endif

End

Public Sub gridInsumosProds_Click()
Dim sQuery As String

  Try $gridInsumosProds.MoveTo(gridInsumosProds.Row)
  lblInsumo.Text = $gridInsumosProds["Insumo"]
  lblProducto.Text = $gridInsumosProds["Producto"]

End


Public Sub gridInsumos_Data(Row As Integer, Column As Integer)

  $gridInsumos.moveTo(Row)
  gridInsumos.Data.text = Str($gridInsumos[gridInsumos.Columns[column].text])

End

Public Sub gridProductos_Data(Row As Integer, Column As Integer)

  $gridProductos.moveTo(Row)
  gridProductos.Data.text = Str($gridProductos[gridProductos.Columns[column].text])

End

Public Sub btnFiltrar_Click()

Dim sQuery As String
Dim hResult As Result

'Select * From `vw_products_catprecio` where `Producto` like "%pasto%" and `CatID` = 2 and `Activo`= 1 order by Categoria, ID
  If cmbCategorias.Index > 0 Then
    'Llenar el grid de productos
    Select Case cmbCategorias.index > 0
      Case True
        sQuery = "Select * From `vw_productos_categoria` where `Categoria` = &1 and `Activo`= 1"
        $gridProductos = modVariables.$hConn.Exec(sQuery, cmbCategorias.Text)
      Case False
        sQuery = "Select * From `vw_productos_categoria` where `Activo`= 1" 
        $gridProductos = modVariables.$hConn.Exec(sQuery)
    End Select

    If $gridProductos.Available Then
      gridProductos.Rows.Count = $gridProductos.Count
    Else
      gridProductos.Rows.Count = 0
    Endif
  Endif
  

End

Public Sub chkAddNew_Click()

  panelAddInsumo.Enabled = chkAddNew.Value

End

Public Sub gridInsumos_Click()

  If gridInsumos.row > 0 Then 
    btnDeleteInsumo.Enabled = True
  Else 
    btnDeleteInsumo.Enabled = False
  Endif
  
  $gridInsumos.MoveTo(gridInsumos.row)
  lblInsumo.Text = $gridInsumos["Insumo"]
  

End

Public Sub gridProductos_Click()

  
  $gridProductos.MoveTo(gridProductos.row)
  lblProducto.Text = $gridProductos["Producto"]

End

Public Sub btnAddInsumo_Click()
  
  Dim hResult As Result
  Dim sQuery As String
  
  If Message.Question("Desea agregar el insumo " & txtNombreInsumo.Text & "?", "Si, agregar", "No, me espero...") = 1 Then
    sQuery = "INSERT INTO `db_tacosRoy`.`tbl_insumos` (`chr_nombre_insumo`, `chr_descripcion`, `bit_activo`) VALUES (&1, &2, '1');"
    modVariables.$hConn.Exec(sQuery, txtNombreInsumo.Text, txtNombreInsumo.Text)

    'Llena el grid de Insumos
    sQuery = "SELECT `id_insumo`, `chr_nombre_insumo` as `Insumo`, `chr_descripcion` as `Descripcion` FROM `tbl_insumos` where `bit_activo` = 1;"
    Try $gridInsumos = modVariables.$hConn.Exec(sQuery)
    If $gridInsumos.Available Then
      gridInsumos.Rows.Count = $gridInsumos.Count
    Endif
  Endif

Catch
  Message.Error(Error.Text)
End

Public Sub btnDeleteInsumo_Click()

  Dim sQuery As String
  Dim iTempID As Integer
  
  If Message.Question("Desea eliminar el insumo seleccionado?", "Si, eliminar", "No, me espero...") = 1 Then
    sQuery = "UPDATE `db_tacosRoy`.`tbl_insumos` SET `bit_activo` = '0' WHERE (`id_insumo` = &1);"
    
    $gridInsumos.MoveTo(gridInsumos.Row)
    iTempID = $gridInsumos["id_insumo"]
    
    Try modVariables.$hConn.Exec(sQuery, iTempID)
    
    'Llena el grid de Insumos
    sQuery = "SELECT `id_insumo`, `chr_nombre_insumo` as `Insumo`, `chr_descripcion` as `Descripcion` FROM `tbl_insumos` where `bit_activo` = 1;"
    Try $gridInsumos = modVariables.$hConn.Exec(sQuery)
    If $gridInsumos.Available Then
      gridInsumos.Rows.Count = $gridInsumos.Count
    Endif
  Endif
Catch
  Message.Error(Error.Text)

End



Public Sub btnBorraInsumoProd_Click()

  

End
