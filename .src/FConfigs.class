' Gambas class file

Private $tempPicFile As String

'para los grids
Private $UsersView As Result 
Private $gridProductos As Result
Private $gridInsumosProds As Result

'Productos
Private sOperacionProducto As String
Public chkVariantes As CheckBox
Public vBoxVariantes1 As VBox
Public vBoxVariantes2 As VBox
Public vBoxVariantes3 As VBox

'tab facturacion
Private $sLastLink As String

'tab Insumos
Private myInsumoTxt As TextBox
Private myInsumoLbl As Label
Private myHContainer As HBox

'tab usuarios
Private sUsrOper As String
Private idUserGrid As Integer
Private $gridUsuarios As Result

Private Sub cleanForm()
  
  txtT_NombreProd.Text = ""
  'txtT_NombreProd.Enabled = False 
  txtDescProd.Text = ""
  'txtDescProd.Enabled = False
  picProducto.Picture = Null
  'picProducto.Enabled = False
  btnCargarFotos.Text = ""
  'btnCargarFotos.Enabled = False
  boxNvoErase.Visible = True
  boxCnlGrd.Visible = False
  'boxCategorias.Enabled = False
  'lblCategorias.Enabled = False 
  'cmbTipoPrecios.Enabled = False
  'cmbCategorias.Enabled = False
  'lblPrecio.Enabled = False
  'txtPrecio.Enabled = False
  'lbl_descripcion.Enabled = False
  'lblNombreProd.Enabled = False
  
End

Private Sub RefreshGridUsers()
  
  Dim rData As Result

  Dim queryS As String
  Dim hConn As Connection
  
  $UsersView = Null

  hConn = modConn.ConectarDB()
  queryS = "Select * from vw_datos_usuarios"
  
  Try rData = modVariables.$hConn.Exec(queryS)
  If Error Then Print Error.Text
  $UsersView = rData
  
  'gridUsers.Children[0].rows.count = 0
  If rData.Available Then
    
    modUtils.ReadData(gridUsers, rData)
    
  Endif
  
End

Private Sub RefreshGridProductos()
  
  'Dim hField As ResultField
  'Dim iInd As Integer 
  Dim queryS As String
  
  $gridProductos = Null
  gridProductos.Rows.Count = 0
  
  queryS = "Select * From `vw_products_catprecio` where `Activo`=1 order by Categoria, ID"
  
  
  Try $gridProductos = modVariables.$hConn.Exec(queryS)
  If Error Then Print Error.Text Else gridProductos.Rows.count = $gridProductos.Count
  
End

Public Sub Form_Open()

  'Declara variables
  Dim hConn As Connection
  Dim hResult As Result
  
  Dim iInd As Integer
  Dim iCol As Integer
  Dim iNrElements As Integer
  

  
  Dim tempString As String
  Dim tempInt As Integer
  Dim sQuery As String

  'Acomodar los botones
  boxNvoErase.X = 441
  boxNvoErase.Y = 413
  boxCnlGrd.X = 441
  boxCnlGrd.Y = 413
  boxNvoErase.Visible = True
  boxCnlGrd.Visible = False
  VBoxBtn2.X = VBoxBtn1.X
  VBoxBtn2.Visible = False 
  
  iInd = 0
  iCol = 0
  iNrElements = 0
  
  hConn = modConn.ConectarDB()
  
    'Grid productos
  gridProductos.header = GridView.Horizontal
  gridProductos.grid = True
  gridProductos.Rows.count = 0
  gridProductos.Columns.count = 9
  gridProductos.Columns[0].text = "ID"
  gridProductos.Columns[1].text = "Producto"
  gridProductos.Columns[2].text = "Desc"
  gridProductos.Columns[3].text = "Categoria"
  gridProductos.Columns[4].text = "Tooltip"
  gridProductos.Columns[5].text = "CatID"
  gridProductos.Columns[6].text = "Precio"
  gridProductos.Columns[7].text = "Tipo"
  gridProductos.Columns[8].text = "Activo"
  
  gridProductos.Columns[0].width = 80
  gridProductos.Columns[1].width = 250
  gridProductos.Columns[2].width = 300
  gridProductos.Columns[3].width = 150
  gridProductos.Columns[4].width = 0
  gridProductos.Columns[5].width = 0
  gridProductos.Columns[6].width = 90
  gridProductos.Columns[7].width = 90
  gridProductos.Columns[8].width = 0
  
  'Llenar el grid de productos
  tempString = "Select * From `vw_products_catprecio` where `Activo`= 1 order by Categoria, ID" 
  $gridProductos = modVariables.$hConn.Exec(tempString)
  'If $gridProductos <> Null Then
  If $gridProductos.Available Then
    gridProductos.Rows.Count = $gridProductos.Count
  Endif
  
  gridUsers.header = GridView.Horizontal
  gridUsers.grid = True
  gridUsers.Rows.count = 0
  gridUsers.Columns.count = 9
  gridUsers.Columns[0].text = "ID"
  gridUsers.Columns[1].text = "Nombre"
  gridUsers.Columns[2].text = "Apellidos"
  gridUsers.Columns[3].text = "CURP"
  gridUsers.Columns[4].text = "Telefono"
  gridUsers.Columns[5].text = "Puesto"
  gridUsers.Columns[6].text = "Login"
  gridUsers.Columns[7].text = "Tipo"
  gridUsers.Columns[8].text = "Activo"
  
  gridUsers.Columns[0].width = 50
  gridUsers.Columns[1].width = 120
  gridUsers.Columns[2].width = 180
  gridUsers.Columns[3].width = 100
  gridUsers.Columns[4].width = 100
  gridUsers.Columns[5].width = 100
  gridUsers.Columns[6].width = 100
  gridUsers.Columns[6].width = 130
  gridUsers.Columns[6].width = 50
  
 
  'Llena el combo de status
  Try hResult = modVariables.$hConn.Exec("Select * from tbl_status")
  If Error Then Print Error.Text
  
  For Each hResult
    With hResult     
       'Primero poner label de categoria padre
      tempString = CStr(.[1])
      cmbTipo.Add(tempString, .[0])
      'Print "Elemento a combo: " & tempString & ", index: " & .[2]
      Inc iInd
    End With
  Next
  
  hResult = Null
  
  'Llena el combo de puestos de trabajo
  Try hResult = modVariables.$hConn.Exec("Select * from tbl_puestos")
  If Error Then Print Error.Text
  
  For Each hResult
    With hResult     
       'Primero poner label de categoria padre
      tempString = CStr(.[1])
      cmbPuesto.Add(tempString, .[0])
      'Print "Elemento a combo: " & tempString & ", index: " & .[2]
      Inc iInd
    End With
  Next
  
  hResult = Null
  
  'Llenado de combo de categorías
  cmbCategorias.Add("Elija categoría")
  cmbTipoPrecios.Add("Elija...")

  Try hResult = modVariables.$hConn.Exec("Select * FROM tbl_categorias")
  If Error Then Print Error.Text
  
  For Each hResult
    With hResult     
       'Primero poner label de categoria padre
      tempString = CStr(.[0] & ", " & .[1])
      cmbCategorias.Add(tempString) ', .[2])
      'Print "Elemento a combo: " & tempString & ", index: " & .[2]
      Inc iInd
    End With
  Next
  
  hResult = Null
  hResult = modVariables.$hConn.Exec("Select * FROM tbl_tipos_precios")
  tempString = ""
  
  For Each hResult
    With hResult
      tempString = CStr(.[1])
      tempInt = .[0]
      cmbTipoPrecios.Add(tempString, tempInt)
      Inc iInd
    End With
  Next
  
  'Llenado de las opciones para platillos
  hResult = Null
  hResult = modVariables.$hConn.Exec("Select * FROM tbl_variantes_platillos")
  iInd = 0
  
  'Preparamos cajitas para opciones
  vBoxVariantes1 = New VBox(Me) As "vBoxVariantes1"
  vBoxVariantes2 = New VBox(Me) As "vBoxVariantes2"
  vBoxVariantes3 = New VBox(Me) As "vBoxVariantes3"
  
  vBoxVariantes1.Reparent(HBoxVariantes)
  vBoxVariantes2.Reparent(HBoxVariantes)
  vBoxVariantes3.Reparent(HBoxVariantes)
  
  vBoxVariantes1.Expand = True
  vBoxVariantes2.Expand = True
  vBoxVariantes3.Expand = True
  
  For Each hResult
    With hResult
      chkVariantes = New CheckBox(Me) As "chkVariantePlatillo"
      chkVariantes.Text = hResult["chr_variante_nombre"]
      chkVariantes.AutoResize = True
      chkVariantes.Value = False
      chkVariantes.Enabled = False
      chkVariantes.Tag = hResult[0]
      Inc iInd
      If iInd > 0 And iInd <= 5 Then
        chkVariantes.Reparent(vBoxVariantes1)
      Else If iInd > 5 And iInd <= 10 Then
        chkVariantes.Reparent(vBoxVariantes2)
      Else If iInd > 10 And iInd <= 15 Then
        chkVariantes.Reparent(vBoxVariantes3)
      Endif
    End With
  Next
  
  hResult = Null
  

  'Tab usuarios =======================
  
  Try $gridUsuarios = modVariables.$hConn.Exec("Select * from vw_datos_personal_logins where Activo = 1")
  If Error Then 
    Print Error.text 
  Else 
    gridUsers.Rows.Count = 0
    gridUsers.Rows.Count = $gridUsuarios.Count
  Endif
  
  ''Insumos =========================
  ''TabStrip 4______________________
  
  hResult = Null
  hResult = modVariables.$hConn.Exec("Select * FROM tbl_insumos order by chr_nombre_insumo Asc")
  tempString = ""

  If hResult.Available Then
    For Each hResult
      myInsumoLbl = New Label(Me) As "lblInsumo"
      myHContainer = New HBox(Me) As "insumoHCont"
      myInsumoLbl.Font.Size = 10
      myInsumoLbl.Text = hResult!chr_nombre_insumo & ":"
      myInsumoLbl.ToolTip = hResult!chr_descripcion
      
      myInsumoTxt = New TextBox(Me) As "txtInsumoCantidad"
      myInsumoTxt.Tag = hResult!id_insumo
      myInsumoLbl.Reparent(VBoxLInsumos)
      myInsumoTxt.Reparent(VBoxTInsumos)
      myHContainer.Expand = True  
      myHContainer.Reparent(boxInsumos)
      myInsumoLbl.Expand = True
      myInsumoTxt.Expand = True
      
    Next
  Endif
  dtStart.ReadOnly = True
  dtStart.Value = Now
  boxInsumos.Enabled = False

  ''==Facturacion =========================
  WebSettings.IconDatabase.Path = File.Dir(File.Dir(Temp$()))
  WebSettings.Fonts.FixedFont = "Monospace"
  WebSettings[WebSettings.PluginsEnabled] = True
  WebSettings[WebSettings.JavascriptEnabled] = True
  WebSettings[WebSettings.JavaEnabled] = True
  WebSettings.Fonts.DefaultFontSize = 12
  WebSettings.Fonts.DefaultFixedFontSize = 12

  CreateView()
  btnZoomNormal_Click
  'txtURL.SetFocus
  tabBrowser_Click
  
  txtURL.Text = "https://www.fel.mx/CFDI/Presentacion/Usuario/Ingreso.aspx"
  txtURL_Activate
  
  ''== Datos de sucursal
  Try hResult = modVariables.$hConn.Exec("Select * FROM tbl_datos_sucursal")
  If hResult.Available Then
    txtSucNombre.Text = hResult["chr_nombre"]
    txtSucDir1.Text = hResult["chr_dir1"]
    txtSucDir2.Text = hResult["chr_dir2"]
    txtSucDir3.Text = hResult["chr_dir3"]
    txtSucTel1.Text = hResult["chr_telefono1"]
    txtSucTel2.Text = hResult["chr_telefono2"]
  Endif
  
  hResult = Null
  
  Try hResult = modVariables.$hConn.Exec("Select * FROM `tbl_usuarios`")
  If hResult.Available Then
    cmbUsuarios.Add(hResult["chr_login"])
  Endif
  
  ''Insumos por platillos
  'vw_insumos_x_platillo
  
  gridInsumosProds.header = GridView.Horizontal
  gridInsumosProds.grid = True
  gridInsumosProds.Rows.count = 0
  gridInsumosProds.Columns.count = 4
  gridInsumosProds.Columns[0].text = "ID"
  gridInsumosProds.Columns[1].text = "Producto"
  gridInsumosProds.Columns[2].text = "Insumo"
  gridInsumosProds.Columns[3].text = "Cantidad"
  
  gridInsumosProds.Columns[0].width = 0
  gridInsumosProds.Columns[1].width = 150
  gridInsumosProds.Columns[2].width = 150
  gridInsumosProds.Columns[3].width = 50

  'Llena el grid con los datos actuales
  Try $gridInsumosProds = modVariables.$hConn.Exec("SELECT * FROM db_tacos_roy.vw_insumos_x_platillo ORDER by Producto, ID Asc")
  If $gridInsumosProds.Available Then
    gridInsumosProds.Rows.Count = $gridInsumosProds.Count
  Endif
  
  'Llena el combo de productos
  hResult = Null
  sQuery = "SELECT * FROM tbl_productos order by chr_nombre_prod Asc"
  
  Try hResult = modVariables.$hConn.Exec(sQuery)
  
  If hResult <> Null Then
    For Each hResult
      cmbInsProd.Add(hResult[1], hResult[0])  
    Next
  Endif
  
  'Llena el combo de insumos
  hResult = Null
  sQuery = "SELECT * FROM tbl_insumos order by chr_nombre_insumo Asc"
  
  Try hResult = modVariables.$hConn.Exec(sQuery)
  
  If hResult <> Null Then
    For Each hResult
      cmbInsInsumos.Add(hResult[1], hResult[0])
    Next
  Endif
  
  'Cierra la conexión
  'RefreshGridUsers()
  hResult = Null
  hConn = Null

End

Public Sub btnSucursal_Change()
  
  btnGuardaDatos.Enabled = True 
  
End


Public Sub txtInsumoCantidad_KeyPress()
    
  If (Key.Code >= Asc("a") And Key.Code <= Asc("z")) Or (Key.Code >= Asc("A") And Key.Code <= Asc("Z")) Then Stop Event
  
End 


Public Sub btnCerrar_Click()

  Me.Close

End

Public Sub btnRegistrar_Click()

Dim myControl As Control
Dim sQuery As String

'Primero valida que todos los campos estén llenos
  For Each mycontrol In VBoxTInsumos.Children 
    If Object.Is(myControl, "TextBox") = True Then
      If Object.GetProperty(myControl, "Text") = "" Then 
        Message.Info("Favor de llenar toda la información")
        myControl.SetFocus
        Return
      Endif
    Endif
  Next 

'Inserta uno a uno los valores de insumos en la tabla de inventarios  
  sQuery = "INSERT INTO `tbl_inventario` (`id_insumo_id`, `int_cantidad`, `dt_fecha_insumo`) VALUES (&1, &2, &3)" 
  For Each myControl In VBoxTInsumos.Children
    If Object.Is(myControl, "TextBox") = True Then
      Try modVariables.$hConn.Exec(sQuery, Object.GetProperty(myControl, "Tag"), Object.GetProperty(myControl, "Text"), modUtils.convierteFechaFormato(dtStart.Value))
      If Error Then Message.Error(Error.Text & ", " & Error.Where)
    Endif
  Next

Finally
  Message.Info("Los insumos se han guardad en el inventario con la fecha de:" & CStr(dtStart.Value))
  'boxInsumos.Enabled = False  

Catch
  Message.Error(Error.Text & ",\n" & gb.CrLf & Error.Where)

End


Public Sub btnStart_Click()

Dim mycontrol As Control

  If (Message.Question("Desea abrir la cuenta del día de hoy?", "Sí, abrir", "No, Cerrar")) = 1 Then
  '  FAuth.ShowModal
  'Else
  '  FAuth.$usrAutorizado = False
  '  Message.Error("Autorización incorrecta para realizar esta operación")
  '  Return
  
 '   If FAuth.$usrAutorizado Then
      
      'Habilita los controles para dar de alta el inventario
      btnStart.Enabled = True
      lblStart.Enabled = True
      dtStart.Enabled = True
      boxInsumos.Enabled = True 
      For Each mycontrol In myHContainer.Children 
        If Object.Is(myControl, "TextBox") = True Then
          If Object.GetProperty(myControl, "Enabled") = False Then 
            Object.SetProperty(mycontrol, "Enabled", True)
          Endif
        Endif
      Next 
      'Crea en la base de datos las entradas para los elementos del inventario
      
    Else
      Message.Error("Autorización incorrecta para realizar esta operación")
      Return
    Endif
  'Endif


End


Public Sub btnNuevoProd_Click()
Dim iInd As Integer
Dim myControl As Control

  If (Message.Question("Desea agregar un producto nuevo", "Sí, Agregar", "No, Me espero") = 1) Then

    HBox14.Enabled = True
    VBox12.Enabled = True
    boxCategorias.Enabled = True
    
    sOperacionProducto = "NEU"
  
    txtT_NombreProd.Text = ""
    txtDescProd.Text = ""
    txtPrecio.Text = ""
    txtDescProd.Enabled = True
    picProducto.Enabled = True
    btnCargarFotos.Enabled = True
    boxNvoErase.Visible = False
    boxCnlGrd.Visible = True
    boxCategorias.Enabled = True
    
    For iInd = 0 To 15  
    If iInd <= 5 Then 
      For Each myControl In vBoxVariantes1.Children
        Object.SetProperty(myControl, "Value", False)
      Next
    Endif
    If iInd > 5 And iInd <= 10 Then 
      For Each myControl In vBoxVariantes2.Children
        Object.SetProperty(myControl, "Value", False)
      Next
    Endif
    If iInd > 10 Then 
      For Each myControl In vBoxVariantes3.Children
        Object.SetProperty(myControl, "Value", False)
      Next
    Endif
  Next

  Endif

End

Public Sub btnCancelarProd_Click()

  Dim intResp As Integer
  
  intResp = Message.Question("Desea cancelar los cambios hechos?", "Sí", "No")
  
  If (intResp = 1) Then
    'Cancela todo y limpia formula
    cleanForm()
  End If

End

Public Sub btnGuardarProds_Click()
  'Guarda el producto nuevo en la base de datos
  Dim intResp As Integer
  Dim hConn As Connection
  Dim hResult As Result
  Dim queryString As String
  Dim lastProdId As Integer
  Dim myControl As Control
  Dim iInd As Integer
  
  intResp = Message.Question("Desea guardar los cambios?", "Sí", "No")
  If (intResp = 1) Then
    
    If sOperacionProducto = "NEU" Then  'Es un producto nuevo
        
      If (picProducto.Picture = Null) Then
        If (Message.Warning("No se ha elegido una fotografia para este producto, proceder?", "Sí, Adelante", "Regresar") = 2) Then btnCargarFotos.SetFocus
      Endif
      
      If (cmbTipoPrecios.Index = 0) Then 
        Message.Warning("Por favor elija un tipo de precio")
        cmbTipoPrecios.SetFocus
      Endif
      
      If (cmbCategorias.Index = 0) Then 
        Message.Warning("Por favor elija una categoria")
        cmbCategorias.SetFocus
      Endif
      'abre conexión con la base de datos
      hConn = modConn.ConectarDB()
      
      queryString = "INSERT INTO `tbl_productos` (`chr_nombre_prod`, `chr_desc_prod`, `chr_pic_prod_path`, `id_categoria`, `int_activo`) VALUES ('" &
        txtT_NombreProd.Text & "', '" & txtDescProd.Text & "', " & "'', "
      
      queryString = queryString & cmbCategorias.Index & ", 1)"
      
      Print queryString
      Try hResult = modVariables.$hConn.Exec(queryString)
      If Error Then Print Error.Text
      'obtiene ID del producto recién insertado
      lastProdId = modVariables.$hConn.Exec("select last_insert_id() as last")["last"]
      
      queryString = "UPDATE `tbl_productos` SET " & 
       "`chr_pic_prod_path` = '" & lastProdId & ".jpg'" &
       " WHERE `tbl_productos`.`id_producto` = '" & lastProdId & "'"
      
      Print queryString
      Try hResult = modVariables.$hConn.Exec(queryString)
      If Error Then Print Error.Text
      
      'guarda la foto en disco con el ID del producto recién insertado
      Try Shell "mv '" & $tempPicFile & "' '" & User.Home &/ "/.tacosRoy/pictures/" & lastProdId & ".jpg " & "'" 
      If Error Then Print Error.Text
      
      queryString = "INSERT INTO `tbl_precios_productos` (`id_producto`, `dbl_precio`, `int_tipo_precio`) VALUES (" &
        lastProdId & ", " & CFloat(txtPrecio.Text) & ", " & cmbTipoPrecios.Index & ")"
      
      Print queryString
      Try hResult = modVariables.$hConn.Exec(queryString)
      If Error Then Print Error.Text
      
      message("Los datos han sido guardados", "Aceptar")
      'limpia todo
      cleanForm()
    
    Else 'Es un producto modificado
      
      queryString = "UPDATE `db_tacos_roy`.`tbl_productos` SET " 
      queryString &= "`chr_nombre_prod` = &1, " 
      queryString &= "`chr_desc_prod` = &2, "
      queryString &= "`id_categoria` = &3 "
      queryString &= "where `tbl_productos`.`id_producto` = &4"
      'Message(squery & ", " & modVariables.$currProductoInteger)
      Try modVariables.$hConn.Exec(queryString, txtT_NombreProd.Text, txtDescProd.Text, cmbCategorias.Index, modVariables.$currProductoInteger)
      
      queryString = "UPDATE `tbl_precios_productos` SET " 
      queryString &= "`dbl_precio` = &1, " 
      queryString &= "`int_tipo_precio` = &2 "
      queryString &= " where `id_producto` = &3"
      
      Try modVariables.$hConn.Exec(queryString, txtPrecio.Text, cmbTipoPrecios.Index, modVariables.$currProductoInteger)
      
    Endif
    
    'Llenar tabla de combinaciones dependiendo de los checks activados
    'Primero eliminamos las opciones existentes y llenamos con las nuevas
    queryString = "DELETE FROM `tbl_prods_variantes` where `id_producto` = &1 "
    Try modVariables.$hConn.Exec(queryString, modVariables.$currProductoInteger)
    If Error Then Message.Error(Error.Text & ", " & Error.Where)
    
    'Ahora si guardar los valores de los checks activados
    
    Do While iInd <= (vBoxVariantes1.Children.Count + vBoxVariantes2.Children.Count + vBoxVariantes3.Children.Count) - 1
      
      queryString = ""
      
      If iInd < 5 Then
        For Each myControl In vBoxVariantes1.Children
          If Object.GetProperty(myControl, "Value") = True Then
            queryString = "INSERT INTO tbl_prods_variantes (id_variante, id_producto) VALUES "
            queryString &= "(" & Object.GetProperty(myControl, "Tag") & ", " & modVariables.$currProductoInteger & ")"
            Print queryString
            Try modVariables.$hConn.Exec(queryString)
          Endif
          Inc iInd
        Next
      Endif
      If iInd >= 5 And iInd <= 10 Then
        For Each myControl In vBoxVariantes2.Children
          If Object.GetProperty(myControl, "Value") = True Then
            queryString = "INSERT INTO tbl_prods_variantes (id_variante, id_producto) VALUES "
            queryString &= "(" & Object.GetProperty(myControl, "Tag") & ", " & modVariables.$currProductoInteger & ")"
            Print queryString
            Try modVariables.$hConn.Exec(queryString)
          Endif
          Inc iInd
        Next
      Endif
      If iInd >= 10 Then 
        For Each myControl In vBoxVariantes3.Children
          If Object.GetProperty(myControl, "Value") = True Then
            queryString = "INSERT INTO tbl_prods_variantes (id_variante, id_producto) VALUES "
            queryString &= "(" & Object.GetProperty(myControl, "Tag") & ", " & modVariables.$currProductoInteger & ")"
            Print queryString
            Try modVariables.$hConn.Exec(queryString)
          Endif
          Inc iInd
        Next
      Endif
    Loop
            
    RefreshGridProductos()
    Message.Info("La información ha sido actualizada correctamente")
    'boxCategorias.Enabled = False
    'VBox12.Enabled = False
    'VBox13.Enabled = False
    
    txtT_NombreProd.Text = ""
    txtDescProd.Text = ""
    txtPrecio.Text = ""
    cleanForm()
  
  End If
  
  

Catch
  Message.Error(Error.Text & ", " & Error.Where)   
End


Public Sub btnCargarFotos_Click()

'    Dim Dialog As Dialog
    Dim myImage As Image
    Dim factor As Float
    Dim imgPath As String

    myImage = New Image
    
    Dialog.Title = "Escoja una foto"
    Dialog.Filter = ["*.jpg", "Archivos JPG", "*.JPG", "Archivos JPG", "*.jpeg", "Archivos JPG", "*.JPEG", "Archivos JPEG", "*.png", "Archivos PNG", "*.gif", "Archivos Gif"]
    'Dialog.Path = "."
    If Dialog.OpenFile() Then
      Return ' User pressed Cancel -
    Else
      imgPath = Dialog.Path
      btnCargarFotos.Text = imgPath
      'hFile = Open Dialog.Path For Read
      
      myImage = myImage.Load(imgPath)
      
      If myImage.Width > myImage.Height Then
        'la imagen es más ancha que alta, procesarla a ancho de 150
        factor = 270 / myImage.Width 
      Else
        factor = 140 / myImage.Height
      Endif
      
      myImage = myImage.Stretch(Round(myImage.Width * factor), Round(myImage.Height * factor))
      
      'If modVariables.$hClientes[0] > 0 Then 
      '  $tempPicFile = User.Home &/ ".tacosRoy" &/ "pictures" &/ modVariables.$hClientes[0] & ".tmp.jpg"
      'Else
        $tempPicFile = Temp() & ".jpg"
      'Endif
        myImage.Save($tempPicFile, 85)
        
        picProducto.Picture = Picture.Load($tempPicFile)
 
    Endif
  btnCargarFotos.Text = ""
End

Public Sub Nuevo_Click()

  'Pregunta si desea agregar un usuario nuevo
  If (Message.Question("Desea agregar un usuario nuevo?", "Sí, agregar", "Cancelar") = 1) Then
   
    modUtils.EnableDisableControls(vBoxCampos1, "Usuarios", True)
    'modUtils.CleanFormControls(vBoxCampos1, "FORMA")
    modUtils.EnableDisableControls(VBoxBtn1, "tagModDel", False)
    VBoxBtn2.X = VBoxBtn1.X
    VBoxBtn2.Visible = True
    VBoxBtn2.Enabled = True
    sUsrOper = "NUE"
    txtPassA.Enabled = False
  Else
   
    modUtils.EnableDisableControls(vBoxCampos1, "Usuarios", False)
    modUtils.EnableDisableControls(VBoxBtn1, "tagModDel", True)
    VBoxBtn2.Visible = False
    VBoxBtn2.Enabled = False
    txtPassA.Enabled = True
  Endif

End


Public Sub btnCancelaUsr_Click()

  If (Message.Question("Desea cancelar los cambios hechos?", "Sí, cancelar", "No, Continuar") = 1) Then
    modUtils.EnableDisableControls(vBoxCampos1, "Usuario", False)
    modUtils.EnableDisableControls(vBoxCampos2, "Usuario", False)
    VBoxBtn2.X = VBoxBtn1.X
    VBoxBtn1.Visible = True
    VBoxBtn2.Visible = False
    'vBoxCampos1.Enabled = False
    btnBorrarUsuario.Enabled = False
  Endif

End


Public Sub btnGuardaUsuario_Click()

  Dim queryString As String
  Dim myControl As Object
  Dim rUserInfo As Result
  
  If (Message.Question("Desea guardar los cambios hechos?", "Sí, Guardar", "No, Cancelar") = 1) Then
    
    For Each myControl In vBoxCampos1.Children
      If Object.Is(myControl, "TextBox") = True Then
        If Object.GetProperty(myControl, "Text") = "" Then 
          Message("Por favor incluya todos los datos")
          myControl.SetFocus
        Endif
      Endif
    Next
    
    Select Case sUsrOper
      Case "NUE"
        txtPassA.Enabled = False
        queryString = "INSERT INTO `db_tacosRoy`.`tbl_personal` (" &
          "`id_personal`, `chr_nombre`, `chr_apellidos`, `chr_CURP, chr_telefono`, `int_puesto`, `int_activo`) " &
          "VALUES (Null, &1, &2, &3, &4, &5, &6);"
        Try modVariables.$hConn.Exec(queryString, txtNombre.Text, txtApellidos.Text, txtCURP.Text, txtTelefono.Text, CInt(cmbPuesto.Index + 1), 1)
        modVariables.sTime
        modVariables.idUserGrid = modVariables.$hConn.Exec("select last_insert_id() as last")["last"]
        If chkUsuario = True Then 'Es un usuario con acceso al sistema
          For Each myControl In vBoxCampos2.Children 'Checamos que todos los campos hayan sido llenados
            If Object.Is(myControl, "TextBox") = True Then
              If Object.GetProperty(myControl, "Text") = "" Then 
                Message("Por favor llene ambos campos de la contraseña")
                myControl.SetFocus
              Endif
            Endif
          Next
        Endif
        'checar si las contraseñas coinciden
        If txtPass1.Text <> txtPass2.Text Then
          Message.Warning("Las contraseñas no coinciden")
          txtPass1.Text = ""
          txtPass2.Text = ""
          txtPass1.SetFocus
        Endif
        queryString = "INSERT INTO `db_tacosRoy`.`tbl_usuarios` (" &
          "`id_usuario`, `chr_login`, `chr_password`, `int_status`, `bit_activo`) " &
          "VALUES (Null, &1, MD5(&2), &3, &4, 1);"
        Try modVariables.$hConn.Exec(queryString, txtLogin.Text, txtPass1.Text, CInt(cmbTipo.Index + 1), 1)
        
      Case "MOD"
        modVariables.idUserGrid = $gridUsuarios!ID
        Print modVariables.idUserGrid
        txtPassA.Enabled = True
        queryString = "UPDATE `db_tacos_roy`.`tbl_personal` SET "  
        queryString &= "`chr_nombre_persona` = '" & txtNombre.Text & "', " 
        queryString &= "`chr_apellidos` = '" & txtApellidos.Text & "', " 
        queryString &= "`chr_telefono` = '" & txtTelefono.Text & "', " 
        queryString &= "`chr_CURP` = '" & txtCURP.Text & "', " 
        queryString &= "`int_puesto` = '" & CInt(cmbPuesto.Index + 1) & "', " 
        queryString &= "`bit_activo` = 1  WHERE `id_personal` = " & modVariables.idUserGrid
          
        Try modVariables.$hConn.Exec(queryString)
        If Error Then Print Error.Text
        
        If chkUsuario.Value = True Then 'Es un usuario con acceso al sistema
          queryString = "SELECT chr_password from tbl_usuarios where id_usuario = &1"
          Try rUserInfo = modVariables.$hConn.Exec(queryString, $gridUsuarios!ID)
          
          If rUserInfo!chr_password = Crypt.MD5(txtPassA.Text, "tacosroytacos") Then

            For Each myControl In vBoxCampos2.Children 'Checamos que todos los campos hayan sido llenados
              If Object.Is(myControl, "TextBox") = True Then
                If Object.GetProperty(myControl, "Text") = "" Then 
                  Message("Por favor llene ambos campos de la contraseña")
                  myControl.SetFocus
                Endif
              Endif
            Next
            
            'checar si las contraseñas coinciden
            If txtPass1.Text <> txtPass2.Text Then
              Message.Warning("Las contraseñas no coinciden")
              txtPass1.Text = ""
              txtPass2.Text = ""
              txtPass1.SetFocus
            Endif
            queryString = "UPDATE `db_tacosRoy`.`tbl_usuarios` SET (" &
              "`chr_login` = &1, `chr_password`= MD5(&2), `int_status` = &3, `bit_activo` = 1) "
              "WHERE id_usuario = &4;"
            Try modVariables.$hConn.Exec(queryString, txtLogin.Text, txtPass1.Text, CInt(cmbTipo.Index + 1), $gridUsuarios!IDS)
            
          Else
            Message.Error("La contraseña no es correcta.\n Introduzca la contraseña correcta para aplicar los cambios")
            txtPassA.Text = ""
            txtPassA.SetFocus
          Endif
        Endif
        
    End Select
    'Se limpia el formulario
    modUtils.EnableDisableControls(vBoxCampos1, "Usuario", False)
    modUtils.EnableDisableControls(vBoxCampos2, "Usuario", False)
    VBoxBtn2.X = VBoxBtn1.X
    VBoxBtn1.Visible = True
    VBoxBtn2.Visible = False
    'vBoxCampos1.Enabled = False
    btnBorrarUsuario.Enabled = False
    
    For Each myControl In vBoxCampos2.Children 'Checamos que todos los campos hayan sido llenados
      If Object.Is(myControl, "TextBox") = True Then
        Object.SetProperty(myControl, "Text", "")
      Endif
      Object.SetProperty(myControl, "Enabled", False)
    Next
    
  Endif

End

'Facturacion ---------------------------------
Private Sub GetView() As WebView
  
  Try Return tabBrowser[tabBrowser.Index].Children[0]
  
End

Private Sub IsLastCurrentView() As Boolean
  
  Dim hView As WebView = GetView()
  Return hView = Last
  
End

Public Sub WebView_Link(Url As String)

  If Not IsLastCurrentView() Then Return
  $sLastLink = Url
  lblStatus.Text = Url

End

Public Sub WebView_Status()

  If Not IsLastCurrentView() Then Return
  lblStatus.Text = GetView().Status

End

Public Sub WebView_Progress()

  GetView().Status = "Loading..."
  If Not IsLastCurrentView() Then Return

  lblStatus.Text = GetView().Status
  pgbLoad.Value = GetView().Progress
  panLoad.Show

End

Public Sub WebView_Error()

  Dim hView As WebView = GetView()
  Dim sUrl As String
  
  sUrl = $sLastLink
  If Not sUrl Then sUrl = txtURL.Text

  ' If Not (sUrl Begins "www.") Then 
  '   txtURL.Text = "www." & sUrl
  '   btnGo.Value = True
  '   Return
  ' Endif

  hView.Status = "Unable to load: " & sUrl
  hView.HTML = "<h3>Unable to find the following URL:</h3>" & sUrl
  If Not IsLastCurrentView() Then Return

  lblStatus.Text = GetView().Status
  pgbLoad.Hide

End

Public Sub WebView_Load()

  'Dim iInd As Integer
  Dim hView As WebView = GetView()
  Dim hIcon As Picture

  hView.Status = ""
  hIcon = hView.Icon 'WebSettings.IconDatabase[hView.Url]
  tabBrowser[hView.Tag].Picture = hIcon
  
  If Not IsLastCurrentView() Then Return

  lblStatus.Text = ""
  txtURL.Text = hView.Url
  pgbLoad.Hide
  
  UpdateIcon
  
  ' Debug GetView().Frame
  ' For iInd = 0 To GetView().Frame.Children.Count - 1
  '   Debug "["; iInd; "] "; GetView().Frame.Children[iInd]
  ' Next

End

Public Sub btnGo_Click()

  Dim sText As String = txtURL.Text
  
  If InStr(sText, "://") = 0 Then sText = "http://" & sText
  
  $sLastLink = sText
  GetView().Url = sText

End

Public Sub txtURL_Activate()

  btnGo.Value = True

End

Public Sub btnBack_Click()

  GetView().Back

End

Public Sub btnForward_Click()

  GetView().Forward

End

Public Sub btnStop_Click()

  GetView().Stop

End

Public Sub btnReload_Click()

  Dim hView As WebView = GetView()

  hView.Reload

End

Public Sub btnZoomIn_Click()

  GetView().Zoom = Round(GetView().Zoom * 1.25, -2)

End

Public Sub btnZoomOut_Click()

  GetView().Zoom = Round(GetView().Zoom / 1.25, -2)

End

Public Sub btnZoomNormal_Click()

  GetView().Zoom = 1

End

Public Sub WebView_Title()

  Dim hView As WebView = Last
  tabBrowser[hView.Tag].Text = hView.Title
  If Not IsLastCurrentView() Then Return
  Me.Title = hView.Title & " - Gambas WebKit"

End

Public Sub WebView_Icon()

  Dim hView As WebView = Last
  'hView.Icon.Save("~/icon.png")
  tabBrowser[hView.Tag].Picture = hView.Icon
  UpdateIcon

End

Public Sub btnClear_Click()

  txtURL.Clear
  txtURL.SetFocus

End

Public Sub WebView_NewWindow((Modal) As Boolean)

  CreateView()

  Last.NewView = GetView()
  
End

Private Sub CreateView()
  
  Dim iLast As Integer = tabBrowser.Count - 1
  Dim hView As WebView

  Object.Lock(tabBrowser)
  Inc tabBrowser.Count
  Object.Lock(tabBrowser)
  tabBrowser[iLast + 1].Picture = tabBrowser[iLast].Picture
  tabBrowser[iLast + 1].Text = tabBrowser[iLast].Text
  tabBrowser[iLast].Text = ""
  tabBrowser[iLast].Picture = Null
  tabBrowser[iLast].Closable = True
  Object.Lock(tabBrowser)
  tabBrowser.Index = iLast
  hView = New WebView(tabBrowser) As "WebView"
  hView.Tag = tabBrowser.Index
  hView.Editable = btnEdit.Value
  hView.Resize(1, 1)
  hView.Show
  Print WebSettings.Fonts.FixedFont
  Object.Unlock(tabBrowser)
  Object.Unlock(tabBrowser)
  Object.Unlock(tabBrowser)
  tabBrowser_Click
  txtURL.SetFocus
  
End


Public Sub tabBrowser_Click()

  Dim iLast As Integer = tabBrowser.Count - 1
  Dim hView As WebView

  If tabBrowser.Index = iLast Then 
    CreateView()
  Else
    hView = GetView()
    If hView.Title Then
      Me.Title = hView.Title & " - Tacos Roy"
    Else
      Me.Title = "Tacos Roy - Facturación"
    Endif
    tabBrowser.Text = hView.Title
    UpdateIcon
    tabBrowser.Picture = hView.Icon
    txtURL.Text = hView.Url
    lblStatus.Text = hView.Status
    pgbLoad.Value = hView.Progress
    If hView.Progress > 0 And If hView.Progress < 1 Then
      panLoad.Show
    Else
      panLoad.Hide
    Endif
  Endif
  
End

Public Sub btnDownloadList_Click()

  FDownloadList.Show

End

Public Sub WebView_Auth()
  
  Dim hView As WebView = Last
  
  If Not FAuth.Run(hView.Auth.Url, hView.Auth.Realm) Then
 
    hView.Auth.User = FAuth.User
    hView.Auth.Password = FAuth.Password
    Debug hView.Auth.Url;; hView.Auth.User;; hView.Auth.Password
    
  Endif 
  
End

Public Sub WebView_Click(Frame As WebFrame)
  
  Dim sName As String = Frame.Name
  If sName Then sName &= ": "
  Debug sName; Frame.Url
  
End

Public Sub WebView_NewFrame(Frame As WebFrame)
  
  Debug Frame.Name
  
End

Public Sub WebView_Download(Download As WebDownload)
  
  Dialog.Path = System.User.Home &/ File.Name(Download.Url)
  If Not Dialog.SaveFile() Then 
    Download.Path = Dialog.Path
    FDownloadList.AddDownload(Download)
    FDownloadList.Show
  Endif
  
End

Public Sub WebView_MouseDown()
  
  Dim hView As WebView = Last
  Dim hTest As WebHitTest = hView.HitTest(Mouse.X, Mouse.Y)
  Dim sMsg As String
  
  If hTest.Document Then sMsg &= "DOCUMENT "
  If hTest.Link Then sMsg &= "LINK "
  If hTest.Image Then sMsg &= "IMAGE "
  If hTest.Selected Then sMsg &= "SELECTED "
  If hTest.Editable Then sMsg &= "EDITABLE "
  Debug sMsg; hTest.Url
  
End

Public Sub tabBrowser_Close(Index As Integer)

  Dim hView As WebView
  
  Try hView = tabBrowser[Index].Children[0]
  If Not hView Then Return
  
  hView.Delete
  
  Object.Lock(tabBrowser)
  tabBrowser[Index].Delete
  Object.UnLock(tabBrowser)
  If Index = tabBrowser.Index Then
    If tabBrowser.Index = (tabBrowser.Count - 1) And If tabBrowser.Index > 0 Then
      tabBrowser.Index = tabBrowser.Index - 1
    Else
      tabBrowser_Click
    Endif
  Endif  

End





Private Sub UpdateIcon()

  Dim hView As WebView = GetView()
  Dim hIcon As Picture
  
  hIcon = hView.Icon 'WebSettings.IconDatabase[hView.Url]
  
  If hIcon Then
    Me.Icon = hIcon
  Else
    Me.Icon = Picture["icon:/16/internet"]
  Endif

End

Public Sub btnConfig_Click()

  With WebSettings.Proxy
    
    FOption.Type = .Type
    FOption.Host = .Host
    FOption.Port = .Port
    FOption.User = .User
    FOption.Password = .Password
    
    If FOption.Run() Then Return
    
    .Type = FOption.Type
    .Host = FOption.Host
    .Port = FOption.Port
    .User = FOption.User
    .Password = FOption.Password 
    
  End With

End

Public Sub btnEdit_Click()

  Dim hWebView As WebView
  
  For Each hWebView In tabBrowser.Children
    hWebView.Editable = btnEdit.Value
  Next
  
  WebSettings[WebSettings.JavascriptCanAccessClipboard] = btnEdit.Value
'  panEdit.Visible = btnEdit.Value

End

Public Sub btnAction_Click()

  Dim hWebView As WebView = GetView()
  
  Debug "Action " & Last.Tag & ": "; hWebView.Eval(Subst("document.execCommand('&1', false, false)", Last.Tag))

End

Public Sub btnColor_Click()

  Dim hWebView As WebView = GetView()

  If Dialog.SelectColor() Then Return
  hWebView.Eval(Subst("document.execCommand('forecolor', false, '&1')", "#" & Hex$(Dialog.Color, 6)))

End


Public Sub mnuSelectFont_Click()

  Dim hWebView As WebView = GetView()
  Dim sFont As String = Last.Text

  hWebView.Eval(Subst("document.execCommand('fontname', false, '&1')", sFont))

End


Public Sub btnBackground_Click()

  Dim hWebView As WebView = GetView()

  Dialog.Title = "Select a color"
  If Dialog.SelectColor() Then Return
  hWebView.Eval(Subst("document.execCommand('backcolor', false, '&1')", "#" & Hex$(Dialog.Color, 6)))

End

Public Sub mnuSelectSize_Click()

  Dim hWebView As WebView = GetView()
  Dim sSize As String = Last.Text

  hWebView.Eval(Subst("document.execCommand('fontsize', false, '&1')", sSize))

End



Public Sub btnInsertImage_Click()

  Dim hWebView As WebView = GetView()
  
  Dialog.Title = "Seleccione una imagen"
  Dialog.Filter = ["*.jpg;*.jpeg;*.png;*.gif;*.xpm;*.bmp", "Archivos de Imagenes"]
  If Dialog.OpenFile() Then Return

  Print Dialog.Path
  hWebView.Eval(Subst("document.execCommand('insertImage', false, '&1')", "file://" & Replace(Dialog.Path, "'", "\\'")))
  
End



Public Sub btnPassOk_Click()

Dim sQueryString As String
Dim rResult As Result

  Select Case sUsrOper
    Case "NUE"
      txtPassA.Enabled = False
      If (txtPass1.Text = "" Or txtPass2.Text = "") Then 
        Message.Error("Por favor llenar todos los campos")
        Stop Event
        Return
      Endif
    Case "MOD"
      
      txtPassA.Enabled = True
      If (txtPassA.Text = "" Or txtPass1.Text = "" Or txtPass2.Text = "") Then 
        Message.Error("Por favor llenar todos los campos")
        Stop Event
      Endif
      sQueryString = "SELECT * FROM `tbl_usuarios` where `id_usuario` = " & $gridUsuarios!ID & " and `chr_password` = '" & Crypt.MD5(txtPassA.Text, "tacosroy") & "'"
      rResult = modVariables.$hConn.Exec(sQueryString)
      If rResult = Null Then 
        Message.Error("La contraseña no es correcta")
        txtPassA.Text = ""
        txtPassA.SetFocus
        Stop Event
        Return
      Endif
  End Select
  
  If (txtPass1.Text <> txtPass2.Text) Then 
    Message.Warning("Las contraseñas no coinciden")
    txtPass1.Text = ""
    txtPass2.Text = ""
    txtPass1.SetFocus
    Stop Event
    Return
  Endif
  
  sQueryString = "UPDATE `tbl_usuarios` SET " & 
    "`chr_password` = '" & Crypt.MD5(txtPass1.Text, "tacosroy") & "' " &
    " WHERE `id_usuario` = " & idUserGrid
  Try modVariables.$hConn.Exec(sQueryString)
  
  If Error Then Message.Error(Error.Text & ", " & Error.Where) Else Message.Info("La contraseña se ha guardado exitosamente")
  txtPassA.Text = ""
  txtPass1.Text = ""
  txtPass2.Text = ""
  txtPassA.Enabled = False
  vBoxCampos2.Visible = False
  
  txtNombre.Enabled = False
  txtNombre.Text = ""
  txtCURP.Enabled = False
  txtCURP.Text = ""
  txtLogin.Enabled = False
  txtLogin.Text = ""
  txtTelefono.Enabled = False
  txtTelefono.Text = ""
  cmbTipo.Enabled = False
  chkUsuario.Enabled = False
  vBoxLabels.Enabled = False
  vBoxCampos1.Enabled = False
  VBoxBtn2.Visible = False
  VBoxBtn1.Visible = True

End


Public Sub btnModifUsuario_Click()
Dim myControl As Control
Dim iResp As Integer

iResp = Message.Question("Desea modificar el usuario seleccionado?", "Sí, modificar", "No, Cancelar")

If (iResp = 1) Then
  sUsrOper = "MOD"
  For Each myControl In vBoxCampos1.Children
     'If Object.Is(myControl, "TextBox") = True Then
      If Object.GetProperty(myControl, "Tag") = "Usuarios" Then 
        Object.SetProperty(myControl, "Enabled", True)
      Endif
      'Endif
  Next
  
  For Each myControl In vBoxCampos2.Children
     'If Object.Is(myControl, "TextBox") = True Then
      If Object.GetProperty(myControl, "Tag") = "Usuarios" Then 
        Object.SetProperty(myControl, "Enabled", True)
      Endif
      'Endif
  Next
  
  vBoxLabels.Enabled = True
  vBoxCampos1.Enabled = True
  VBoxBtn2.Visible = True
  VBoxBtn1.Visible = False
  txtPassA.Enabled = True 
Endif
  
End

Public Sub gridUsers_Data(Row As Integer, Column As Integer)

  $gridUsuarios.moveTo(Row)
  gridUsers.Data.text = Str($gridUsuarios[gridUsers.Columns[column].text])

End

Public Sub gridUsers_Click()

  Dim hResultTipo, hResultPuestos As Result
  Dim sQuery As String
   
  sQuery = "SELECT * FROM tbl_status"
  Try hResultTipo = modVariables.$hConn.Exec(sQuery)
  
  sQuery = "SELECT * FROM tbl_puestos"
  Try hResultPuestos = modVariables.$hConn.Exec(sQuery)
  
  $gridUsuarios.MoveTo(gridUsers.Row)
  'Print $gridUsuarios!ID
  modVariables.idUserGrid = $gridUsuarios!ID
  txtNombre.Text = $gridUsuarios!Nombre
  txtApellidos.Text = $gridUsuarios!Apellidos
  txtLogin.Text = $gridUsuarios!Login
  txtTelefono.Text = $gridUsuarios["Telefono"]
  txtCURP.Text = $gridUsuarios!CURP
  chkUsuario.Value = $gridUsuarios!Activo
  
  For Each hResultTipo
    If hResultTipo!chr_status = $gridUsuarios!Tipo Then 
      cmbTipo.Enabled = True
    cmbTipo.Index = hResultTipo.Index
    cmbTipo.Enabled = False
    Endif
  Next
  
  For Each hResultPuestos
    If hResultPuestos!chr_puesto = $gridUsuarios!Puesto Then 
      cmbPuesto.Enabled = True
      cmbPuesto.Index = hResultPuestos.Index
      cmbPuesto.Enabled = False
    Endif
  Next

  btnBorrarUsuario.Enabled = True
  btnModifUsuario.Enabled = True

hResultPuestos = Null
hResultTipo = Null
End

Public Sub btnAddGasto_Click()

  If (Message.Question("Desea agregar un gasto al día de hoy?", "Sí, agregar", "No, Cancelar")) = 1 Then
    txtGastoCantidad.Enabled = True
    HBoxGasto1.Enabled = True
    HBoxGasto2.Enabled = True
    HBoxGasto3.Enabled = True
  Endif

End

Public Sub txtGastoCantidad_KeyPress()

  If (Key.Code >= Asc("a") And Key.Code <= Asc("z")) Or (Key.Code >= Asc("A") And Key.Code <= Asc("Z")) Then Stop Event

End

Public Sub txtTelefono_KeyPress()

  If (Key.Code >= Asc("a") And Key.Code <= Asc("z")) Or (Key.Code >= Asc("A") And Key.Code <= Asc("Z")) Then Stop Event

End

Public Sub txtPrecio_KeyPress()

  If (Key.Code >= Asc("a") And Key.Code <= Asc("z")) Or (Key.Code >= Asc("A") And Key.Code <= Asc("Z")) Then Stop Event

End

Public Sub btnSaveGasto_Click()

Dim sQueryString As String

  If (Message.Question("Desea guardar este gasto?", "Si, Guardar", "No, Cancelar")) = 1 Then
  
   sQueryString = "INSERT INTO `tbl_gastos` (" &
          "`id_gasto`, `dt_horafecha`,`fl_cantidad`, `chr_concepto_gasto`, `id_usuario_auth`) " &
          "VALUES (Null, Null, &1, &2, &3);"
        Try modVariables.$hConn.Exec(sQueryString, txtGastoCantidad.Text, txtAreaGasto.Text, 1) 'Cambiar al usuario loggeado una vez implementado
        If Error Then 
          Message.Error(Error.Text & ", " & Error.Where) 
         Else
          HBoxGasto1.Enabled = False
          txtAreaGasto.Text = ""
          txtGastoCantidad.Text = ""
          HBoxGasto2.Enabled = False
          HBoxGasto3.Enabled = False
        Endif
  Endif

End

Public Sub gridProductos_Data(Row As Integer, Column As Integer)

  $gridProductos.moveTo(Row)
  gridProductos.Data.text = Str($gridProductos[gridProductos.Columns[column].text])

End

Public Sub gridProductos_Click()

Dim sQuery As String
Dim sQueryCat As String
Dim rResult As Result
Dim rResultCat As Result
Dim sPicPath As String
Dim myControl As Control
Dim iInd As Integer

  btnModificar.Enabled = True
  btnBorrar.Enabled = True  

  $gridProductos.MoveTo(gridProductos.Row)
  
  modVariables.$currProductoInteger = $gridProductos!ID
  modVariables.$currCategoriaInteger = $gridProductos!CatID
  
  txtT_NombreProd.Text = $gridProductos!Producto
  txtDescProd.Text = $gridProductos!Desc
  txtPrecio.Text = $gridProductos!Precio
  cmbCategorias.Index = $gridProductos!CatID
  
  sQuery = "SELECT `int_tipo_precio` from `tbl_precios_productos` where `id_producto` = &1" 
  
  Try rResult = modVariables.$hConn.Exec(sQuery, modVariables.$currProductoInteger)
  cmbTipo.Index = rResult[0] + 1

  sQueryCat = "Select * from `vw_variantes_x_categoria` where `IDCAT` = &1 ORDER BY IDCAT, IDVAR ASC" 
  Try rResultCat = modVariables.$hConn.Exec(sQueryCat, modVariables.$currCategoriaInteger)
  
  For iInd = 0 To 15
    If iInd <= 5 Then
      For Each myControl In vBoxVariantes1.Children
        Object.SetProperty(myControl, "Enabled", False)
      Next
    Endif
    If iInd > 5 And iInd <= 10 Then
      For Each myControl In vBoxVariantes2.Children
        Object.SetProperty(myControl, "Enabled", False)
      Next
    Endif
    If iInd > 10 Then 
      For Each myControl In vBoxVariantes3.Children
        Object.SetProperty(myControl, "Enabled", False)
      Next
    Endif
    
  Next
  
  For Each rResultCat
    
     For iInd = 0 To 15  
      If iInd <= 5 Then
        For Each myControl In vBoxVariantes1.Children
          If Object.GetProperty(myControl, "Tag") = rResultCat[3] Then 
            Object.SetProperty(myControl, "Enabled", True)
          Endif
        Next
      Endif
      If iInd > 5 And iInd <= 10 Then
        For Each myControl In vBoxVariantes2.Children
          If Object.GetProperty(myControl, "Tag") = rResultCat[3] Then 
            Object.SetProperty(myControl, "Enabled", True)
          Endif
        Next
      Endif
      If iInd > 10 Then 
        For Each myControl In vBoxVariantes3.Children
          If Object.GetProperty(myControl, "Tag") = rResultCat[3] Then 
            Object.SetProperty(myControl, "Enabled", True)
          Endif
        Next
      Endif
    Next
  Next
  
  sQuery = "SELECT * FROM `tbl_prods_variantes` WHERE `id_producto` = &1"
  Try rResult = modVariables.$hConn.Exec(sQuery, modVariables.$currProductoInteger)
 
  If rResult.Available Then
    For iInd = 0 To 15  
      If iInd <= 5 Then 
        For Each myControl In vBoxVariantes1.Children
          If Object.GetProperty(myControl, "Tag") = rResult[1] Then 
            Object.SetProperty(myControl, "Value", True)
          Endif
        Next
      Endif
      If iInd > 5 And iInd <= 10 Then 
        For Each myControl In vBoxVariantes2.Children
          If Object.GetProperty(myControl, "Tag") = rResult[1] Then 
            Object.SetProperty(myControl, "Value", True)
          Endif
        Next
      Endif
      If iInd > 10 Then 
        For Each myControl In vBoxVariantes3.Children
          If Object.GetProperty(myControl, "Tag") = rResult[1] Then 
            Object.SetProperty(myControl, "Value", True)
          Endif
        Next
      Endif
    Next
  Endif
  
  modUtils.showImage(gridProductos.Row, picProducto)

  Catch
    Print sPicPath
    Print Error.Text

End

Public Sub btnBorrar_Click()

Dim sQuery As String

  If (Message.Question("Desea borrar el artículo seleccionado?", "Sí, eliminar", "No, me espero") = 1) Then
    sQuery = "UPDATE tbl_productos SET int_activo = 0 where id_producto = &1" 
    'Message(squery & ", " & modVariables.$currProductoInteger)
    modVariables.$hConn.Exec(sQuery, modVariables.$currProductoInteger)
  Endif
  
  RefreshGridProductos()

End

Public Sub btnModificar_Click()

Dim iInd As Integer
Dim myControl As Control

  If (Message.Question("Desea modificar el producto seleccionado?", "Sí, modificar", "No, me espero") = 1) Then
  
    sOperacionProducto = "MOD"
    HBox14.Enabled = True
    VBox12.Enabled = True
    VBox13.Enabled = True
    boxCategorias.Enabled = True
    HBoxVariantes.Enabled = True
    
    txtDescProd.Enabled = True
    txtDescProd.Enabled = True
    cmbTipo.Enabled = True
    picProducto.Enabled = True
    btnCargarFotos.Enabled = True
    boxNvoErase.Visible = False
    boxCnlGrd.Visible = True
    boxCategorias.Enabled = True
  Endif
  
  For iInd = 0 To 15  
    If iInd <= 5 Then 
      For Each myControl In vBoxVariantes1.Children
        Object.SetProperty(myControl, "Value", False)
      Next
    Endif
    If iInd > 5 And iInd <= 10 Then 
      For Each myControl In vBoxVariantes2.Children
        Object.SetProperty(myControl, "Value", False)
      Next
    Endif
    If iInd > 10 Then 
      For Each myControl In vBoxVariantes3.Children
        Object.SetProperty(myControl, "Value", False)
      Next
    Endif
  Next

End

Public Sub cmbCategorias_Change()

Dim sQueryCat As String
Dim rResultCat As Result
Dim iInd As Integer
Dim myControl As Control

  sQueryCat = "Select * from `vw_variantes_x_categoria` where `IDCAT` = &1 ORDER BY IDCAT, IDVAR ASC" 
  Try rResultCat = modVariables.$hConn.Exec(sQueryCat, modVariables.$currCategoriaInteger)
  
  For iInd = 0 To 15
    If iInd <= 5 Then
      For Each myControl In vBoxVariantes1.Children
        Object.SetProperty(myControl, "Enabled", False)
      Next
    Endif
    If iInd > 5 And iInd <= 10 Then
      For Each myControl In vBoxVariantes2.Children
        Object.SetProperty(myControl, "Enabled", False)
      Next
    Endif
    If iInd > 10 Then 
      For Each myControl In vBoxVariantes3.Children
        Object.SetProperty(myControl, "Enabled", False)
      Next
    Endif
    
  Next
  
  For Each rResultCat
    
     For iInd = 0 To 15  
      If iInd <= 5 Then
        For Each myControl In vBoxVariantes1.Children
          If Object.GetProperty(myControl, "Tag") = rResultCat[3] Then 
            Object.SetProperty(myControl, "Enabled", True)
          Endif
        Next
      Endif
      If iInd > 5 And iInd <= 10 Then
        For Each myControl In vBoxVariantes2.Children
          If Object.GetProperty(myControl, "Tag") = rResultCat[3] Then 
            Object.SetProperty(myControl, "Enabled", True)
          Endif
        Next
      Endif
      If iInd > 10 Then 
        For Each myControl In vBoxVariantes3.Children
          If Object.GetProperty(myControl, "Tag") = rResultCat[3] Then 
            Object.SetProperty(myControl, "Enabled", True)
          Endif
        Next
      Endif
    Next
  Next

End

Public Sub dtStart_Change()
Dim sQuery As String
Dim rsRecords As Result
Dim myControl As Control
  
  sQuery = "SELECT * FROM `tbl_inventario` where Date(dt_fecha_insumo) = '" & modUtils.convierteFechaFormato(dtStart.Value) & "' order by `dt_fecha_insumo`"
  Print sQuery
  Try rsRecords = modVariables.$hConn.Exec(sQuery)
  
  If rsRecords.Available Then
    For Each rsRecords
      For Each myControl In VBoxTInsumos.Children
        If Object.GetProperty(myControl, "Tag") = rsRecords["id_insumo_id"] Then 
          Object.SetProperty(myControl, "Text", rsRecords["int_cantidad"])
          Object.SetProperty(myControl, "Enabled", False)
        Endif
      Next
    Next
    btnRegistrar.Enabled = False
  Else
    For Each myControl In VBoxTInsumos.Children     
      Object.SetProperty(myControl, "Text", "")
      Object.SetProperty(myControl, "Enabled", True)
    Next
    btnRegistrar.Enabled = True
  Endif
  
  
End


Public Sub btnGuardaDatos_Click()

Dim sQuery As String

  If (Message.Question("¿Desea guardar los cambios a los datos de la sucursal?", "Sí, Guardar", "NO, Me espero")) = 1 Then
  
    sQuery = "UPDATE `tbl_datos_sucursal` SET " 
    sQuery &= "`chr_nombre` = &1, " 
    sQuery &= "`chr_dir1` = &2, " 
    sQuery &= "`chr_dir2` = &3, " 
    sQuery &= "`chr_dir3` = &4, " 
    sQuery &= "`chr_telefono1` = &5, " 
    sQuery &= "`chr_telefono2` = &6, " 
    sQuery &= "`id_usuario_encargado` = &7 " 
    sQuery &= "where `id_sucursal` = 1"
    
    modVariables.$hConn.Exec(sQuery, txtSucNombre.Text, txtSucDir1.Text, txtSucDir2.Text, txtSucDir3.Text, txtSucTel1.Text, txtSucTel2.Text, cmbUsuarios.Index)
  Endif

End

Public Sub chkUsuario_Click()
Dim myControl As Control

  vBoxCampos2.Enabled = chkUsuario.Value
  For Each myControl In vBoxCampos2.Children
     'If Object.Is(myControl, "TextBox") = True Then
      If Object.GetProperty(myControl, "Tag") = "Usuarios" Then 
        Object.SetProperty(myControl, "Enabled", chkUsuario.Value)
      Endif
      'Endif
  Next

End

Public Sub btnBorrarUsuario_Click()

Dim sQuery As String

  If (Message.Question("Desea borrar al usuario seleccionado?", "Sí, borrar", "No, me espero!")) = 1 Then
    modVariables.idUserGrid = $gridUsuarios!ID
    sQuery = "UPDATE `db_tacos_roy`.`tbl_personal` SET "  
    sQuery &= "`bit_activo` = 0  WHERE `id_usuario` = " & modVariables.idUserGrid
    Try modVariables.$hConn.Exec(sQuery)
  Endif

End

Public Sub btnCancelGasto_Click()

  If Message.Question("Desea cancelar la operación", "Sí, Cancelar", "No, Continuar") = 1 Then
    txtGastoCantidad.Text = ""
    txtAreaGasto.Text = ""
    txtGastoCantidad.Enabled = False
    btnSaveGasto.Enabled = False
    btnCancelGasto.Enabled = False  
  Endif

End

Public Sub btnImprimeInsumosReporte_Click()

Dim tempContents As String
Dim rsRecords As Result
Dim squery As String

  sQuery = "Select * from vw_insumos_x_platillo order by Producto, ID Asc"
  Try rsRecords = modVariables.$hConn.Exec(sQuery)
  
  'hFile = Open User.Home & "/reporteTemp.xls" For Write Create
  If rsRecords <> Null Then tempContents = modUtils.generaHTMLtoFile(rsRecords, "Reporte de insumos utilizados por Producto")
  
  'Print #hFile, tempContents
  Print tempContents
  
  Dialog.Filter = ["*.xls", "Hoja de Cálculo Excel"]
  
  If Dialog.SaveFile() Then Return
  If Right(Dialog.Path, 4) <> ".xls" Then Dialog.Path &= ".xls"
  File.Save(Dialog.Path, tempContents)
  Catch
    Message.Info(Error.Text & ", " & Error.Where)
  
  'hFile.Close
  rsRecords = Null

End

Public Sub gridInsumosProds_Data(Row As Integer, Column As Integer)

  $gridInsumosProds.moveTo(Row)
  gridInsumosProds.Data.text = Str($gridInsumosProds[gridInsumosProds.Columns[column].text])

End

Public Sub btnRegistraInsumoProd_Click()
Dim sQuery As String

  If Message.Question("Desea guardar los cambios?", "Sí, guardar", "No, Cancelar") = 1 Then
    
    
  Endif
  

End

Public Sub gridInsumosProds_Click()
Dim sQuery As String

  Try $gridInsumosProds = modVariables.$hConn.Exec("SELECT * FROM db_tacos_roy.vw_insumos_x_platillo ORDER by Producto, ID Asc")
  
  If $gridInsumosProds.Available Then
    $gridInsumosProds.MoveTo(gridInsumosProds.Row)  
  Endif

  

End
