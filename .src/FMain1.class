' Gambas class file

Public hConn As Connection
Public hResultOrdenes As Result
Public qString As String

Private tmpOrden_prods_precio As Result


Public Sub Form_Open()

Dim hResult As Result
  
  Me.Maximized = True 
  
  'Abrimos la conexion que será utilizada en el proyecto
  modVariables.c_Conn = modConn.ConectarDB()
  
  If modVariables.i_UsuarioConectado <= 0 Then
    FAuth.ShowModal
    If modVariables.i_UsuarioConectado <= 0 Then 
      Me.Close
      Return
    Endif
  Endif
  
  lblTimer.Text = modUtils.TimerClk_Timer()
  
  gridMainOrden.header = GridView.Horizontal
  gridMainOrden.grid = True
  gridMainOrden.Rows.count = 0
  gridMainOrden.Columns.count = 5
  gridMainOrden.Columns[0].text = "Orden"
  gridMainOrden.Columns[1].text = "Hora"
  gridMainOrden.Columns[2].text = "Mesa"
  gridMainOrden.Columns[3].text = "Status"
  gridMainOrden.Columns[4].text = "TicketNR"
  
  gridMainOrden.Columns[0].width = 0
  gridMainOrden.Columns[1].width = 230
  gridMainOrden.Columns[2].width = 100
  gridMainOrden.Columns[3].width = 130
  gridMainOrden.Columns[4].width = 50

  gridOrdenDetails.header = GridView.Horizontal
  gridOrdenDetails.grid = True
  gridOrdenDetails.Rows.count = 0
  gridOrdenDetails.Columns.count = 7
  gridOrdenDetails.Columns[0].text = "Orden"
  gridOrdenDetails.Columns[1].text = "IDPO"
  gridOrdenDetails.Columns[2].text = "Producto"
  gridOrdenDetails.Columns[3].text = "ID Prod"
  gridOrdenDetails.Columns[4].text = "Cantidad"
  gridOrdenDetails.Columns[5].text = "Tipo Precio"
  gridOrdenDetails.Columns[6].text = "HoraFecha"
  
  gridOrdenDetails.Columns[0].width = 0
  gridOrdenDetails.Columns[1].width = 0
  gridOrdenDetails.Columns[2].width = 280
  gridOrdenDetails.Columns[3].width = 0
  gridOrdenDetails.Columns[4].width = 40
  gridOrdenDetails.Columns[5].width = 40
  gridOrdenDetails.Columns[6].width = 40
  
  qString = "SELECT * FROM `tbl_control_fechas` where DATE(`dt_fecha_calendario`) = Date(Now()) ORDER BY `dt_fecha_calendario` DESC limit 1;"
  'qString = "SELECT * FROM `tbl_control_fechas` where `dt_fecha_calendario` = CURRENT_DATE();"
  Print qString
  Try hResult = modVariables.c_Conn.Exec(qString)
  If hResult.Available Then
    If hResult["dt_finaliza_labores"] = Null Then
      If Date(hResult["dt_comienzo_labores"]) < Date(Now) Then
        If (Message.Question("La cuenta del dia: " & hResult["dt_comienzo_labores"] & " aun sigue abierta, desea cerrarla o continuar?", "Cerrar Cuenta", "Continuar")) = 1 Then
          qString = "UPDATE `tbl_control_fechas` SET `dt_finaliza_labores` = Now() WHERE (`id_control_fechas` = &1);"
          Try modVariables.c_Conn.Exec(qString, hResult["id_control_fechas"])
        Endif
      Endif
      modVariables.i_idControlFecha = hResult["id_control_fechas"]
      modVariables.s_controlString = hResult["chr_control"]
      btnModifOrden.Enabled = True
      btnCancelOrden.Enabled = True
      btnCerrarOrden.Enabled = True
      btnImrpimeCuenta.Enabled = True
    Endif
  Else
    btnNuevaOrden.Enabled = False
    Message.Info("Debe abrir la cuenta del dia de hoy primero")
    Return
  Endif 
  
  hResult = Null
  
  'Obtiene la lista de órdenes abiertas  
  qString = "SELECT" 
	qstring &= " `tbl_ordenes`.`id_orden_id` as `Orden`," 
	qstring &= " `tbl_ordenes`.`dt_horafecha_orden` as `Hora`," 
	qstring &= " `tbl_ordenes`.`int_mesa` as `Mesa`," 
	qstring &= " `tbl_ordenes`.`chr_status_orden` as `Status`,"
  qstring &= "  `tbl_consecutivo`.`chr_consecutivo` as `TicketNR`"
  qstring &= " From `tbl_ordenes`"
  qstring &= " inner join `tbl_consecutivo` on `tbl_consecutivo`.`id_consecutivo` = `tbl_ordenes`.`int_consecutivo`"
  qstring &= " where `tbl_ordenes`.`chr_status_orden` = 'Abierta' order by Orden ASC"
  
  'qString = "SELECT" 
  Try hResultOrdenes = modVariables.c_Conn.Exec(qString)
  If Error Then 
    Print Error.Text
  Else
    'Llena el grid con las ordenes abiertas
    gridMainOrden.Rows.Count = hResultOrdenes.Count
    'hResultOrdenes = Null
  Endif
  
  
  
  Catch
    Print Error.Text
    Message.Error(Error.Text & ", " & Error.Where)
End

Public Sub Button7_Click()

  modVariables.c_Conn.Close
  Me.Close

Catch
  Print Error.Text
End

Public Sub btnNuevaOrden_Click()

Dim qString As String
Dim hResult As Result

  If (Message.Question("Desea crear una nueva orden?", "Sí, crear", "NO, Cancelar") = 1) Then
    
    'Antes que nada, se debe elegir mesa
    FMesas.ShowModal
    If modVariables.s_strMesaTemp = "" Or modVariables.i_intIDPersonal = 0 Then 
      Return
    Endif
    
    'checamos el consecutivo siguiente
    Try hResult = modVariables.c_Conn.Exec("SELECT * FROM tbl_consecutivo order by id_consecutivo Desc Limit 1")
    modVariables.i_intTicketNR = CInt(hResult[1])
    
    hResult = Null
    
    'Inserta nuevo consecutivo en tabla de consecutivos
    Try modVariables.c_Conn.Begin()
    hResult = modVariables.c_Conn.Create("tbl_consecutivo")
    hResult!chr_consecutivo = CInt(modVariables.i_intTicketNR + 1)
    Try hResult.Update()
    Try modVariables.c_Conn.Commit()
    hResult = Null

    'Una vez obtenido el consecutivo, creamos una orden y guardamos el consecutivo
    Try modVariables.c_Conn.Begin()
    hResult = modVariables.c_Conn.Create("tbl_ordenes")
    hResult!dt_horafecha_orden = Now()
    hResult!int_mesa = modVariables.i_intIDMesaTemp
    hResult!int_consecutivo = modVariables.i_intTicketNR
    hResult!chr_status_orden = "Abierta"
    hResult!id_control_fecha = modVariables.i_idControlFecha
    Try hResult.Update()
    Try modVariables.c_Conn.Commit()

    modVariables.i_intOrdenID = modVariables.c_Conn.Exec("select last_insert_id() as last")["last"]
    hResult = Null
    
    'Le asignamos la orden a un mesero
    Try modVariables.c_Conn.Begin()
    hResult = modVariables.c_Conn.Create("tbl_ordenes_personal")
    hResult!id_orden_id = modVariables.i_intOrdenID
    hResult!id_personal = modVariables.i_intIDPersonal
    Try hResult.Update()
    Try modVariables.c_Conn.Commit()
    hResult = Null
    
    'Definimos el tipo de precios de esta orden
    Try modVariables.c_Conn.Begin()
    hResult = modVariables.c_Conn.Create("tbl_precio_tipo_ordenes")
    hResult!id_orden = modVariables.i_intOrdenID
    hResult!id_tipo_precio = modVariables.i_intTipoPrecio
    Try hResult.Update()
    Try modVariables.c_Conn.Commit()
    hResult = Null
      
    FComandasN.ShowModal

  Endif
  
  Catch
    Print (Error.Text & ", " & Error.Where)
    Message.Error(Error.Text & ", " & Error.Where)
  
End

Public Sub btnCancelOrden_Click()

  Dim sQuery As String

  If (Message.Question("Desea cancelar la orden seleccionada?" & gb.Cr & "Este paso es irreversible", "Sí, Cancelar", "No, Continuar") = 1) Then
    Print gridMainOrden.Row
    
    hResultOrdenes.MoveTo(gridMainOrden.Row)
    sQuery = "UPDATE  `tbl_ordenes` SET  `chr_status_orden` =  'Cancelada', `dt_horafecha_orden` = Now(), `chr_status_orden` = 'Cancelada' WHERE `tbl_ordenes`.`id_orden_id` =&1"
    
    gridMainOrden.Rows.Count = 0
    Try modVariables.c_Conn.Exec(sQuery, hResultOrdenes[0])
    
    'Mostrar pantalla de cobrar con 0 pesos
    FCobrar.txtReferenciaPago.Text = "CANCELADA"
    FCobrar.txtReferenciaPago.Visible = True
    FCobrar.btnAplicaDesc.Visible = False
    FCobrar.lblDescuento.Visible = False
    FCobrar.txtDescuento.Visible = False
    FCobrar.cmbFormaPago.Enabled = False
    FCobrar.btnOK.Enabled = True
    
    FCobrar.ShowModal()
  
    'sQuery = "SELECT `id_orden_id` as 'Orden', `dt_horafecha_orden` as 'Hora', `int_mesa` as 'Mesa', `chr_status_orden` as 'Status' From `tbl_ordenes` where `tbl_ordenes`.`chr_status_orden` = 'Abierta' order by Orden ASC"
    sQuery = "SELECT" 
    sQuery &= " `tbl_ordenes`.`id_orden_id` as `Orden`," 
    sQuery &= " `tbl_ordenes`.`dt_horafecha_orden` as `Hora`," 
    sQuery &= " `tbl_ordenes`.`int_mesa` as `Mesa`," 
    sQuery &= " `tbl_ordenes`.`chr_status_orden` as `Status`,"
    sQuery &= "  `tbl_consecutivo`.`chr_consecutivo` as `TicketNR`"
    sQuery &= " From `tbl_ordenes`"
    sQuery &= " inner join `tbl_consecutivo` on `tbl_consecutivo`.`id_consecutivo` = `tbl_ordenes`.`int_consecutivo`"
    sQuery &= " where `tbl_ordenes`.`chr_status_orden` = 'Abierta' order by Orden ASC"
    
    Try hResultOrdenes = modVariables.c_Conn.Exec(sQuery)
    gridMainOrden.Rows.Count = 0
    gridMainOrden.Rows.Count = hResultOrdenes.Count
 
  Endif
  
  Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)
  
End

Public Sub btnCerrarOrden_Click()
  
  Dim intResp As Integer
  Dim qString As String
  
  intresp = Message.Question("Desea cerrar/cobrar la orden No: " & modVariables.i_intOrdenID & "?", "Cerrar", "Cancelar")
  Select Case intresp
    Case 1
      FCobrar.ShowModal
    Case Else
      Message("No se hara nada")
  End Select
  
  qString = "SELECT" 
	qstring &= " `tbl_ordenes`.`id_orden_id` as `Orden`," 
	qstring &= " `tbl_ordenes`.`dt_horafecha_orden` as `Hora`," 
	qstring &= " `tbl_ordenes`.`int_mesa` as `Mesa`," 
	qstring &= " `tbl_ordenes`.`chr_status_orden` as `Status`,"
  qstring &= "  `tbl_consecutivo`.`chr_consecutivo` as `TicketNR`"
  qstring &= " From `tbl_ordenes`"
  qstring &= " inner join `tbl_consecutivo` on `tbl_consecutivo`.`id_consecutivo` = `tbl_ordenes`.`int_consecutivo`"
  qstring &= " where `tbl_ordenes`.`chr_status_orden` = 'Abierta' order by Orden ASC"
  
  'qString = "SELECT" 
  Try hResultOrdenes = modVariables.c_Conn.Exec(qString)
  If Error Then 
    Print Error.Text
  Else
    'Llena el grid con las ordenes abiertas
    gridMainOrden.Rows.Count = hResultOrdenes.Count
    'hResultOrdenes = Null
  Endif
  
End

Public Sub Button5_Click()

  FConfigs.ShowModal
  
End

Public Sub Timer1_Timer()
Dim sQueryString As String
Dim rResult As Result

  lblTimer.Text = modUtils.TimerClk_Timer()
  
End


Public Sub gridMainOrden_Data(Row As Integer, Column As Integer)

  Try hResultOrdenes.moveTo(Row)
  If Error Then 
    Print Error.Text 
  Else
    If row Mod 2 = 0 Then gridMainOrden.Data.Background = Color.RGB(115, 115, 115)
    gridMainOrden.Data.text = Str(hResultOrdenes[gridMainOrden.Columns[column].text])
  Endif

Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)
  
End

Public Sub gridMainOrden_Click()

Dim qString As String
Dim intTempOrder As Integer
Dim myResult As Result

  If modVariables.i_idControlFecha <> 0 Then
    btnNuevaOrden.Enabled = True
    gridOrdenDetails.Rows.Count = 0
    intTempOrder = hResultOrdenes.MoveTo(gridMainOrden.Row)
    modVariables.i_intOrdenID = hResultOrdenes["Orden"]
    modVariables.i_intTicketNR = hResultOrdenes["TicketNR"]
    modVariables.s_strMesaTemp = hResultOrdenes[2]
    
    qString = "SELECT id_tipo_precio FROM db_tacosRoy.tbl_precio_tipo_ordenes where id_orden = &1;"
    Try myResult = modVariables.c_Conn.Exec(qString, modVariables.i_intOrdenID)
    
    modVariables.i_intTipoPrecio = myResult[0]
    
    myResult = Null
    
    btnCancelOrden.Enabled = True
    btnModifOrden.Enabled = True
    btnCerrarOrden.Enabled = True
  
    qString = "Select * from vw_prods_x_orden where `Orden` = &1 and `Activo` order by `HoraFecha` Asc"  
    
    Try tmpOrden_prods_precio = modVariables.c_Conn.Exec(qString, hResultOrdenes[0]) ' , modVariables.i_intTipoPrecio)
    If Error Then 
      Message.Error(Error.Text & ", " & Error.Where) 
     Else 
      'Message(qString & ", " & hResultOrdenes[0])
      gridOrdenDetails.Rows.Count = tmpOrden_prods_precio.Count
    Endif
  Endif
  
If gridMainOrden.Row > 0 Then btnImrpimeCuenta.Enabled = True


Catch
  Message.Error(Error.Text & ", " & Error.Where)

End

Public Sub gridMainOrden_KeyRelease()

Dim qString As String
Dim intTempOrder As Integer

  gridOrdenDetails.Rows.Count = 0
  intTempOrder = hResultOrdenes.MoveTo(gridMainOrden.Row)
  modVariables.i_intOrdenID = hResultOrdenes["Orden"]
  'modVariables.i_intTicketNR = hResultOrdenes["TicketNR"]
  modVariables.s_strMesaTemp = hResultOrdenes[2]
  
  btnCancelOrden.Enabled = True
  btnModifOrden.Enabled = True
  btnCerrarOrden.Enabled = True

  qString = "Select * from vw_prods_x_orden where `Orden` = &1 and `Activo` = 1 and `Tipo Precio` = &2  order by `HoraFecha` Asc"  
    Try tmpOrden_prods_precio = modVariables.c_Conn.Exec(qString, hResultOrdenes[0], modVariables.i_intTipoPrecio)
    If Error Then 
      Message.Error(Error.Text & ", " & Error.Where) 
     Else 
      'Message(qString & ", " & hResultOrdenes[0])
      gridOrdenDetails.Rows.Count = tmpOrden_prods_precio.Count
    Endif
  
If gridMainOrden.Row > 0 Then btnImrpimeCuenta.Enabled = True

End


Public Sub gridOrdenDetails_Data(Row As Integer, Column As Integer)

  Try tmpOrden_prods_precio.moveTo(Row)
  If Error Then Print Error.text
  
  Try gridOrdenDetails.Data.text = Str(tmpOrden_prods_precio[gridOrdenDetails.Columns[column].text])  
  If Error Then Print Error.text
  
  If row Mod 2 = 0 Then gridOrdenDetails.Data.Background = Color.RGB(115, 115, 115)

End

Public Sub Button4_Click()

 

End

Public Sub btnModifOrden_Click()

  If (Message.Question("Desea modificar la orden seleccionada?", "Sí, Modificar", "No, Cancelar") = 1) Then
    FComandasN.ShowModal
  Endif

End

Public Sub btnImrpimeCuenta_Click()

  Me.Enabled = False
  Inc Application.Busy
  PrinterCuenta.Print()
  PrinterCuenta.OutputFile = User.Home &/ "Tickets/ticketOrden_" & modVariables.i_intTicketNR & "-" & modUtils.convierteFechaFormatoHora(Now) & ".pdf"
  Dec Application.Busy
  Me.Enabled = True

End

Public Sub PrinterCuenta_Draw()

  Dim PRINT_MARGIN As Float
  Dim iInc As Integer
  Dim hImage As Image
  Dim sQuery As String
  Dim hResult, hResult2 As Result
  Dim rYPrint As Integer
  Dim rResultPromos As Result
  Dim fTotal, flTemporal As Float
  Dim myTicket As Integer
  Dim docV As String

  PRINT_MARGIN = 1
  iInc = 1
    
  sQuery = "Select `ID Prod`, Producto, Cantidad, `Tipo Precio` from vw_prods_x_orden where `Orden` = &1 and `Activo` = 1  order by `HoraFecha` Asc"
  
  Try hResult = modVariables.c_Conn.Exec(sQuery, modVariables.i_intOrdenID)
  fTotal = 0
    
  'Try rResult = modVariables.c_Conn.Exec(sQuery, modVariables.$intOrdenI, modVariables.i_intTipoPrecio)
  If Error Then Message.Error(Error.Text & ", " & Error.Where)
  
  hImage = Image.Load(User.Home &/ ".tacosroy/pictures" &/ "logoTicket.png")
  hImage.Opacity(0.3)
  Paint.MoveTo(1, 105)
  Paint.DrawImage(hImage, 12, 200, hImage.Width * 7, hImage.Height * 7)
  
  rYPrint = PRINT_MARGIN - (PrinterCuenta.Page - 1) * (Paint.Height - PRINT_MARGIN * 2)
  
  sQuery = "Select * From `tbl_ticket_cons` ORDER BY id_ticketNrConsecutivo DESC LIMIT 1"
  Try hResult2 = modVariables.c_Conn.Exec(sQuery)
  myTicket = CInt(hResult2[1])
  
  Paint.Font = Font["Helvetica, Bold, 12"]
  docV = "Orden: " & modVariables.i_intOrdenID & ", Ticket Nr.: " & myTicket 
  Paint.DrawRichText(docV, PRINT_MARGIN, 300 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCuenta.Count, Align.TopNormal)
  docV = "Mesa: " & modVariables.s_strMesaTemp
  Paint.DrawRichText(docV, PRINT_MARGIN, 600 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCuenta.Count, Align.TopNormal)
  Paint.Font = Font["Helvetica, Regular, 10"]
  
  Paint.MoveTo(1, 405)
  docV = Format(Now, "dddd dd mmmm yyyy, hh:nn:ss")
  Paint.DrawRichText(docV, 1, rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCuenta.Count, Align.TopNormal)
  docV = Null
  
  Paint.Font = Font["Helvetica, Regular, 10"]
  docV = "Detalle de la orden:\n"
  Paint.DrawRichText(docV, PRINT_MARGIN, 2000 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCuenta.Count, Align.TopNormal)
  
  Paint.Font = Font["Helvetica, Regular, 9"]
  Try hResult = modVariables.c_Conn.Exec("Select * from vw_prods_x_orden where `Orden` = &1 and `Activo` = 1 and `Tipo Precio` = &2  order by `HoraFecha`", modVariables.$intOrderID, modVariables.i_intTipoPrecio)
  If hResult.Available Then
    
    fTotal = 0
    hResult2 = Null
    For Each hResult
      docV = ""
      
'      sQuery = "Select * from tbl_promociones where id_producto = &1 and `bit_activo = 1`"
'        Try rResultPromos = modVariables.c_Conn.Exec(sQuery, rResult!IDPR)
'        
'        If rResultPromos <> Null Then 'Hay una promocion para este producto, checar validez de días.
'          flTemporal = 0
'          If Mid(rResultPromos!chr_dias_valido, WeekDay(Now) + 1, 1) = "1" Then
'            flTemporal = rResult!Precio - (rResult!Precio * rResultPromos!fl_descuento)
'            flTemporal = (flTemporal * rResult!Cantidad)
'            fTotal = ftotal + flTemporal
'          Endif
'        Else
        sQuery = "select `dbl_precio` from `tbl_precios_productos` where `id_producto` = &1 and `int_tipo_precio` = &2"
        Try hResult2 = modVariables.c_Conn.Exec(sQuery, hResult["ID Prod"], hResult["Tipo Precio"])
        flTemporal = CFloat(hResult2[0]) * CFloat(hResult["Cantidad"])

'        flTemporal = (hResult!Precio * hResult!Cantidad)
        fTotal = ftotal + flTemporal
        
'          Endif
'        rResultPromos = Null 

      docV = hResult["Cantidad"] & gb.Tab & gb.Tab & gb.Tab & hResult["Producto"] & gb.Cr & gb.Tab & "$" & CInt(flTemporal)
      Paint.DrawRichText(docV, PRINT_MARGIN, (iInc * 250) + 2200 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCuenta.Count, Align.TopNormal)
      Inc iInc  
    Next
  Endif
  
  Paint.Font = Font["Helvetica, Regular, 12"]
  docV = "Total a Pagar: $" & fTotal & ".00"
  Paint.DrawRichText(docV, PRINT_MARGIN, (iInc * 250) + 2400 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCuenta.Count, Align.TopNormal)
  
Catch
  Message.Error(Error.Text & ", " & Error.Where)

End



Public Sub mnuConfig_Click()

  FConfigs.ShowModal

End

Public Sub mnuTools_Click()

  FReports.Show

End

Public Sub mnuSalir_Click()

  modVariables.c_Conn.Close
  Me.Close

End

Public Sub mnuReTickets_Click()

  FReimpTickets.ShowModal

End

Public Sub mnuABCProds_Click()

  FProductos.ShowModal()

End

Public Sub mnuInsumos_Click()

  FInsumos.ShowModal

End
