' Gambas class file

Public hConn As Connection
Public hResultOrdenes As Result
Public qString As String

Private tmpOrden_prods_precio As Result


Public Sub Form_Open()
  Dim laFecha As String
  
  lblTimer.Text = modUtils.TimerClk_Timer()
  
  'laFecha = Format($dNow, "dddd dd mmmm yyyy, hh:nn:ss")

  gridMainOrden.header = GridView.Horizontal
  gridMainOrden.grid = True
  gridMainOrden.Rows.count = 0
  gridMainOrden.Columns.count = 4
  gridMainOrden.Columns[0].text = "Orden"
  gridMainOrden.Columns[1].text = "Hora"
  gridMainOrden.Columns[2].text = "Mesa"
  gridMainOrden.Columns[3].text = "Status"
  
  gridMainOrden.Columns[0].width = 80
  gridMainOrden.Columns[1].width = 100
  gridMainOrden.Columns[2].width = 80
  gridMainOrden.Columns[3].width = 100
  
  
  
  gridOrdenDetails.header = GridView.Horizontal
  gridOrdenDetails.grid = True
  gridOrdenDetails.Rows.count = 0
  gridOrdenDetails.Columns.count = 4
  gridOrdenDetails.Columns[0].text = "Orden"
  gridOrdenDetails.Columns[1].text = "Producto"
  gridOrdenDetails.Columns[2].text = "Cantidad"
  gridOrdenDetails.Columns[3].text = "Precio"
  
  gridOrdenDetails.Columns[0].width = 50
  gridOrdenDetails.Columns[1].width = 120
  gridOrdenDetails.Columns[2].width = 50
  gridOrdenDetails.Columns[3].width = 80
  
  'Obtiene la lista de órdenes abiertas
  hConn = modConn.ConectarDB()
  
  qString = "SELECT `id_orden_id` as 'Orden', `dt_horafecha_orden` as 'Hora', `int_mesa` as 'Mesa', `chr_status_orden` as 'Status' From `tbl_ordenes` where `tbl_ordenes`.`chr_status_orden` = 'Abierta' order by Orden ASC"
  Try hResultOrdenes = hConn.Exec(qString)
  If Error Then 
    Print Error.Text
  Else
    'Llena el grid con las ordenes abiertas
    gridMainOrden.Rows.Count = hResultOrdenes.Count
    
  Endif
  'hConn.Close
End

Public Sub Button7_Click()

  Me.Close

End

Public Sub brnNuevaOrden_Click()

Dim qString As String
Dim tmpResult As Result

  If (Message.Question("Desea crear una nueva orden?", "Sí, crear", "NO, Cancelar") = 1) Then
    
    'Antes que nada, se debe elegir mesa
    FMesas.ShowModal
    If modVariables.$strMesaTemp = 0 Then Return
    
    'Abrimos conexion a la DB
    Try hConn = modConn.ConectarDB()
    If Error Then 
      Message.Error(Error.Text) 
    Else
      'Primero checamos el consecutivo siguiente
      Try tmpResult = hConn.Exec("SELECT * FROM tbl_consecutivo order by id_ticketNrConsecutivo Desc Limit 1")
      If Error Then Print Error.Text
      modVariables.$intOrdenTmp = CInt(tmpResult[1])
      
      'Inserta nuevo consecutivo en tabla de consecutivos
      qString = "INSERT INTO `db_tacos_roy`.`tbl_consecutivo` (`chr_consecutivo`) VALUES (&1)"
      Try hConn.Exec(qString, CInt(modVariables.$intOrdenTmp + 1))
      If Error Then Print Error.Text
      
      'Una vez obtenido el consecutivo, lo guardamos en la tabla de ordenes
      qString = "INSERT INTO `db_tacos_roy`.`tbl_ordenes` (`int_mesa`, `int_consecutivo`, `chr_status_orden`) VALUES (&1, &2, &3)"
      Try hConn.Exec(qString, modVariables.$strMesaTemp, modVariables.$intOrdenTmp, "Abierta")
      If Error Then Print Error.Text
      
    Endif
    FComandas.ShowModal  
  Endif
  

End

Public Sub btnModifOrden_Click()

  FComandas.ShowModal

End

Public Sub btnCerrarOrden_Click()
  
  Dim intResp As Integer
  
  intresp = Message.Question("Desea cerrar la orden seleccionada?", "Cerrar", "Cancelar")
  Select Case intresp
    Case 1
      Message("Orden será cerrada")
    Case Else
      Message("No se hara nada")
  End Select

End

Public Sub Button5_Click()

  FConfigs.ShowModal
  
End

Public Sub Timer1_Timer()

  lblTimer.Text = modUtils.TimerClk_Timer()

End


Public Sub gridMainOrden_Data(Row As Integer, Column As Integer)

  hResultOrdenes.moveTo(Row)
  gridMainOrden.Data.text = Str(hResultOrdenes[gridMainOrden.Columns[column].text])

End

Public Sub gridMainOrden_Click()

Dim qString As String
Dim intTempOrder As Integer


  intTempOrder = hResultOrdenes.MoveTo(gridMainOrden.Row)

  qString = "SELECT * FROM vw_orden_prods_precio where Orden = &1"  
    Try tmpOrden_prods_precio = hConn.Exec(qString, hResultOrdenes[0])
    If Error Then 
      Message.Error(Error.text) 
     Else 
      Message(qString & ", " & hResultOrdenes[0])
      gridOrdenDetails.Rows.Count = tmpOrden_prods_precio.Count
    Endif

End

Public Sub gridOrdenDetails_Data(Row As Integer, Column As Integer)

  Try tmpOrden_prods_precio.moveTo(Row)
  If Error Then Print Error.text
  
  Try gridOrdenDetails.Data.text = Str(tmpOrden_prods_precio[gridOrdenDetails.Columns[column].text])  
  If Error Then Print Error.text

End
