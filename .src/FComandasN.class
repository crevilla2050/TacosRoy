' Gambas class file

Private hResultXComanda As Result
Private hResultDetalle As Result

Public Sub Form_Open()


End 

Public Sub gridComanda_Data(Row As Integer, Column As Integer)

  hResultXComanda.moveTo(Row)
  gridComanda.Data.text = Str(hResultXComanda[gridComanda.Columns[column].text])
  If row Mod 2 = 0 Then gridComanda.Data.Background = Color.RGB(115, 115, 115)
Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)
End

Public Sub Timer1_Timer()

  lblTimer.Text = modUtils.TimerClk_Timer()

End


Public Sub btnBuscar_Click()
Dim sQuery As String
Dim iInc, iJnc As Integer

  hResultXComanda = Null
  
  sQuery = "  SELECT  "
  sQuery &= "    `tbl_ordenes_cerradas`.`id_orden_id`, "
  sQuery &= "      `tbl_ordenes_cerradas`.`fl_total`, "
  sQuery &= "      `tbl_ordenes_cerradas`.`bool_factura`, "
  sQuery &= "      `tbl_ordenes_cerradas`.`chr_referencia_notas`, "
  sQuery &= "      `tbl_ticket_cons`.`chr_ticketConsecutivo` AS `Consecutivo`, "
  sQuery &= "      `tbl_ordenes`.`int_nr_comanda` as `Comanda`,"
  sQuery &= "      `tbl_ordenes_cerradas`.`id_control_fecha` "
  sQuery &= "      From `tbl_ordenes_cerradas`  "
  sQuery &= "      left join `tbl_ordenes` on `tbl_ordenes`.`id_orden_id` = `tbl_ordenes_cerradas`.`id_orden_id` "
  sQuery &= "      left join `tbl_ticket_cons` on `tbl_ticket_cons`.`id_ticketNrConsecutivo` = `tbl_ordenes`.`int_consecutivo` "
  sQuery &= "      where `tbl_ordenes`.`int_nr_comanda` = &1"
    
  Try hResultXComanda = modVariables.c_Conn.Exec(sQuery, txtComanda.Text)
  
  If (hResultXComanda <> Null) And hResultXComanda.Available Then 
    Inc Application.Busy
    gridComanda.Rows.Count = 0
    gridComanda.Columns.Count = 0
    
    gridComanda.Header = GridView.Horizontal
    gridComanda.Grid = True
    gridComanda.Columns.Count = hResultXComanda.Fields.Count
    
    For iInc = 0 To hResultXComanda.Fields.Count - 1
      iJnc = 1
      Do While Mid(hResultXComanda.Fields[iInc].Name, iJnc, 1) <> "."
        iJnc += 1
      Loop
      gridComanda.Columns[iInc].Text = Right(hResultXComanda.Fields[iInc].Name, Len(hResultXComanda.Fields[iInc].Name) - iJnc)
      gridComanda.Columns[iInc].Width = 50 + 5 * Len(Right(hResultXComanda.Fields[iInc].Name, Len(hResultXComanda.Fields[iInc].Name) - iJnc))
    Next
     'iLastIndex = 0
    'display some data from the CSV file
    gridComanda.Rows.Count = hResultXComanda.Count 
    
     
    Dec Application.Busy
  Else 
      gridComanda.Rows.Count = 0
      'btnInject.Enabled = False
  Endif

Catch 
  Print Error.Text
  Dec Application.Busy
  Message.Error(Error.Where & ", " & Error.Text)
End


Public Sub btnVolver_Click()

  Me.Close

End

Public Sub btnBuscaCantidad_Click()
Dim sQuery As String
Dim iInc, iJnc As Integer

  hResultXComanda = Null
  
  sQuery = "  SELECT distinct"
  sQuery &= "    `tbl_ordenes_cerradas`.`id_orden_cerrada` as `ID ORC`, "
  sQuery &= "    `tbl_prods_x_orden`.`int_orden_id` as `ID Orden`,"
  sQuery &= "    `tbl_ordenes`.`int_nr_comanda` as `Comanda`,"
  sQuery &= "    `tbl_ordenes_cerradas`.`fl_total` as `Total`,"
  sQuery &= "    `tbl_ordenes_cerradas`.`dt_horafecha_cierre_orden` as `Fecha-Hora`"
  sQuery &= "    From `tbl_prods_x_orden`"
  sQuery &= "    left join `tbl_ordenes` on `tbl_ordenes`.`id_orden_id` = `tbl_prods_x_orden`.`int_orden_id`"
  sQuery &= "    left join `tbl_ordenes_cerradas` on `tbl_ordenes_cerradas`.`id_orden_id` = `tbl_ordenes`.`id_orden_id`"
  sQuery &= "    where `tbl_ordenes_cerradas`.`fl_total` = &1"
  
  If txtCantidad.Text <> "" Then Try hResultXComanda = modVariables.c_Conn.Exec(sQuery, CFloat(txtCantidad.Text))
  
  If (hResultXComanda <> Null) And hResultXComanda.Available Then 
    Inc Application.Busy
    gridComanda.Rows.Count = 0
    gridComanda.Columns.Count = 0
    
    gridComanda.Header = GridView.Horizontal
    gridComanda.Grid = True
    gridComanda.Columns.Count = hResultXComanda.Fields.Count
    
    For iInc = 0 To hResultXComanda.Fields.Count - 1
      iJnc = 1
      Do While Mid(hResultXComanda.Fields[iInc].Name, iJnc, 1) <> "."
        iJnc += 1
      Loop
      gridComanda.Columns[iInc].Text = Right(hResultXComanda.Fields[iInc].Name, Len(hResultXComanda.Fields[iInc].Name) - iJnc)
      gridComanda.Columns[iInc].Width = 50 + 5 * Len(Right(hResultXComanda.Fields[iInc].Name, Len(hResultXComanda.Fields[iInc].Name) - iJnc))
    Next

    gridComanda.Rows.Count = hResultXComanda.Count 

    Dec Application.Busy
  Else 
      gridComanda.Rows.Count = 0
      'btnInject.Enabled = False
  Endif

Catch 
  Print Error.Text
  Dec Application.Busy
  Message.Error(Error.Where & ", " & Error.Text)
  

End

Public Sub txtComanda_KeyPress()

  If (Key.Code >= Asc("a") And Key.Code <= Asc("z")) Or (Key.Code >= Asc("A") And Key.Code <= Asc("Z")) Then Stop Event

End

Public Sub txtCantidad_KeyPress()

  If (Key.Code >= Asc("a") And Key.Code <= Asc("z")) Or (Key.Code >= Asc("A") And Key.Code <= Asc("Z")) Then Stop Event

End

Public Sub txtFolioFactura_KeyPress()

  If (Key.Code >= Asc("a") And Key.Code <= Asc("z")) Or (Key.Code >= Asc("A") And Key.Code <= Asc("Z")) Then Stop Event

End

Public Sub gridComanda_Click()
Dim sQuery As String
Dim iInc, iJnc As Integer
  
  hResultDetalle = Null
  hResultXComanda.MoveTo(gridComanda.Row)
  
  sQuery = "  SELECT "
  sQuery &= "  `tbl_ordenes_cerradas`.`id_orden_cerrada` as `ID ORC`, "
  sQuery &= "  `tbl_prods_x_orden`.`int_orden_id` as `ID Orden`,"
  sQuery &= "  `tbl_productos`.`chr_nombre_prod` as `Producto`,"
  sQuery &= "  `tbl_prods_x_orden`.`int_cantidad` as `Cantidad`,"
  sQuery &= "  `tbl_ordenes`.`int_nr_comanda` as `Comanda`,"
  sQuery &= "  `tbl_ordenes_cerradas`.`fl_total` as `Total`"
  sQuery &= "   From `tbl_prods_x_orden`"
  sQuery &= "  left join `tbl_ordenes` on `tbl_ordenes`.`id_orden_id` = `tbl_prods_x_orden`.`int_orden_id`"
  sQuery &= "  left join `tbl_ordenes_cerradas` on `tbl_ordenes_cerradas`.`id_orden_id` = `tbl_ordenes`.`id_orden_id`"
  sQuery &= "  left join `tbl_productos` on `tbl_productos`.`id_producto` = `tbl_prods_x_orden`.`int_producto_id`"
  sQuery &= "  where `tbl_ordenes`.`int_nr_comanda` = &1"
  
  Try hResultDetalle = modVariables.c_Conn.Exec(sQuery, hResultXComanda["Comanda"])
  
  If (hResultDetalle <> Null) And hResultDetalle.Available Then 
    Inc Application.Busy
    gridOrdenDetails.Rows.Count = 0
    gridOrdenDetails.Columns.Count = 0
    
    gridOrdenDetails.Header = GridView.Horizontal
    gridOrdenDetails.Grid = True
    gridOrdenDetails.Columns.Count = hResultDetalle.Fields.Count
    
    For iInc = 0 To hResultDetalle.Fields.Count - 1
      iJnc = 1
      Do While Mid(hResultDetalle.Fields[iInc].Name, iJnc, 1) <> "."
        iJnc += 1
      Loop
      gridOrdenDetails.Columns[iInc].Text = Right(hResultDetalle.Fields[iInc].Name, Len(hResultDetalle.Fields[iInc].Name) - iJnc)
      gridOrdenDetails.Columns[iInc].Width = 50 + 5 * Len(Right(hResultDetalle.Fields[iInc].Name, Len(hResultDetalle.Fields[iInc].Name) - iJnc))
    Next
    gridOrdenDetails.Rows.Count = hResultDetalle.Count 

    Dec Application.Busy
  Else 
      gridOrdenDetails.Rows.Count = 0
      'btnInject.Enabled = False
  Endif

Catch 
  Print Error.Text
  Dec Application.Busy
  Message.Error(Error.Where & ", " & Error.Text)
End

Public Sub gridOrdenDetails_Data(Row As Integer, Column As Integer)

  If (hResultDetalle <> Null) Then
    hResultDetalle.moveTo(Row)
    gridOrdenDetails.Data.text = Str(hResultDetalle[gridOrdenDetails.Columns[column].text])
    If row Mod 2 = 0 Then gridOrdenDetails.Data.Background = Color.RGB(115, 115, 115)
  Endif 
Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)

End
