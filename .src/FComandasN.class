' Gambas class file

Public $idCategoriaTemp As Integer
Private hResult As Result
Private qString As String
Private tmpOrden_prods_precio As Result

Private iTipoPrintJob As Integer


Public Sub btnVolver_Click()
  
  Dim sQString As String
  'Dim hResultOrdenes As Result
  
  'Antes de cerrar, refrescar el grid en la pantalla principal
  sQString = "SELECT `id_orden_id` as 'Orden', `dt_horafecha_orden` as 'Hora', `int_mesa` as 'Mesa', `chr_status_orden` as 'Status' From `tbl_ordenes` where `tbl_ordenes`.`chr_status_orden` = 'Abierta' order by Orden ASC"
  Try hResult = modVariables.$hConn.Exec(sQString)
  If Error Then 
    Print Error.Text
  Else
    'Llena el grid con las ordenes abiertas
    FMain1.hResultOrdenes = hResult
    FMain1.gridMainOrden.Rows.Count = 0
    FMain1.gridMainOrden.Rows.Count = FMain1.hResultOrdenes.Count
  Endif
  Me.Close
Catch
  Print Error.Text
  'Message.Error(Error.Text & ", " & Error.Where)
End

Public Sub Form_Open()

  'Dim myControl As Control
  Dim myButtons As Button
  Dim myResult As Result
  
  btnVolver.Enabled = False
  lblTimer.Text = modUtils.TimerClk_Timer()
  lblInfo.Text = "Orden: " & modVariables.$intOrdenID & ", Mesa: " & modVariables.$strMesaTemp
  
  qString = "SELECT id_tipo_precio FROM db_tacosRoy.tbl_precio_tipo_ordenes where id_orden = &1;"
  Try myResult = modVariables.$hConn.Exec(qString, modVariables.$intOrdenID)
  
  modVariables.$intTipoPrecio = myResult[0]
  
  'define the gridview layout
  gridComanda.header = GridView.Horizontal
  gridComanda.grid = True
  gridComanda.Rows.count = 0
  gridComanda.Columns.count = 6
  gridComanda.Columns[0].text = "Orden"
  gridComanda.Columns[1].text = "IDPO"
  gridComanda.Columns[2].text = "Producto"
  gridComanda.Columns[3].text = "ID Prod"
  gridComanda.Columns[4].text = "Cantidad"
  gridComanda.Columns[5].text = "Tipo Precio"
  
  gridComanda.Columns[0].width = 40
  gridComanda.Columns[1].width = 0
  gridComanda.Columns[2].width = 200
  gridComanda.Columns[3].width = 0
  gridComanda.Columns[4].width = 60
  gridComanda.Columns[5].width = 60
  
  qString = "Select * from tbl_categorias where bit_visible = 1 order by fl_orden"
  
  Try hResult = modVariables.$hConn.Exec(qString)
  If Error Then Print Error.Text
  
  If hResult.Available Then
    For Each hResult
      myButtons = New Button(Me) As "KeyButton"
      myButtons.Font.Size = 11
      myButtons.Picture = Button1.Picture
      myButtons.Text = hResult!chr_nombre_cat
      myButtons.Tag = hResult!id_categoria
      myButtons.ToolTip = hResult!chr_desc_cat
      myButtons.Reparent(boxCategorias)
      myButtons.Expand = True 
      
    Next
    
    Button1.Visible = False
  Endif
  
  tmpOrden_prods_precio = Null
  gridComanda.Rows.Count = 0
  
  Try tmpOrden_prods_precio = modVariables.$hConn.Exec("Select * from vw_prods_x_orden where `Orden` = &1 and `Activo` = 1 and `Tipo Precio` = &2 order by `HoraFecha` Asc", modVariables.$intOrdenID, modVariables.$intTipoPrecio)
  
  If tmpOrden_prods_precio.Available Then
    gridComanda.Rows.Count = 0
    gridComanda.Rows.Count = tmpOrden_prods_precio.Count
    btnVolver.Enabled = True
  Else
    btnVolver.Enabled = False
  Endif
  
Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)
End

Public Sub KeyButton_Click()
  'Message.Info("Button Tag: " & Last.Tag & "\nButton Text: " & Last.Text)
  'modVariables.$idCategoriaTemp = 0
  modVariables.$idCategoriaTemp = Last.Tag
  modVariables.$currCategoriaInteger = Last.Tag
  FsAMProds.ShowModal()
  
  If (modVariables.$FsAMProdsReturn = True) Then
    qString = "SELECT * from vw_prods_x_orden where `Orden` = &1 and `Activo` = 1 and `Tipo Precio` = &2 order by `HoraFecha` Asc"  
    Try tmpOrden_prods_precio = modVariables.$hConn.Exec(qString, modVariables.$intOrdenID, modVariables.$intTipoPrecio)
    If Error Then 
      Print Error.Text & ", " & Error.Where
      'Message.Error(Error.Text & ", " & Error.Where) 
    Else 
      gridComanda.Rows.Count = tmpOrden_prods_precio.Count
      btnVolver.Enabled = True
    Endif
    
  Endif

Catch
  Print Error.Text
  'Message.Error(Error.Text & ", " & Error.Where)
  
End

Public Sub gridComanda_Data(Row As Integer, Column As Integer)

Dim tmpString As String

  tmpOrden_prods_precio.moveTo(Row)
  
  gridComanda.Data.text = Str(tmpOrden_prods_precio[gridComanda.Columns[column].text])    
  
  If row Mod 2 = 0 Then gridComanda.Data.Background = Color.RGB(115, 115, 115)
  
Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)
End

Public Sub Timer1_Timer()

  lblTimer.Text = modUtils.TimerClk_Timer()

End


Public Sub gridComanda_Click()
Dim sQueryString As String
Dim rResult As Result

  sQueryString = "SELECT * FROM db_tacosRoy.vw_opciones_platillos_ticket WHERE IDPO = &1"
  lblMessage2.Text = ""

  tmpOrden_prods_precio.MoveTo(gridComanda.Row)
  lblMessage.Text = tmpOrden_prods_precio[2] & ", Cantidad: " & tmpOrden_prods_precio[4]
  gridComanda.Rows.Select(tmpOrden_prods_precio.Index)
  
  Try rResult = modVariables.$hConn.Exec(sQueryString, tmpOrden_prods_precio[1])
  
  If rResult <> Null Then
    For Each rResult
      lblMessage2.Text &= rResult[2] & "--"  
    Next
  Endif
  
  rResult = Null

Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)
  
End

Public Sub btnEliminar_Click()

  Dim sQuery As String
  Dim hResult1 As Result
  Dim idComboTemp As Integer
  Dim hResult2 As Result
  'Dim rRecordOrder As Result

  If (Message.Question("Desea Eliminar el producto: " & gb.Cr & tmpOrden_prods_precio[1] & ", " & tmpOrden_prods_precio[2] & gb.Cr & " de la orden? ", " Sí, Eliminar", "No, Cancelar") = 1) Then
    
    tmpOrden_prods_precio.MoveTo(gridComanda.Row)
    
    sQuery = "UPDATE `tbl_prods_x_orden` SET `bool_activo` = 0 WHERE `tbl_prods_x_orden`.`id_prod_x_orden` = &1"
    'Print sQuery & ", " & tmpOrden_prods_precio["IDPO"]
    Try modVariables.$hConn.Exec(sQuery, tmpOrden_prods_precio["IDPO"])
    
    'ver si es un combo, eliminar productos relacionados
    sQuery = "SELECT * FROM db_tacosRoy.tbl_prods_x_orden WHERE `tbl_prods_x_orden`.`id_prod_x_orden` = &1;"
    Try hResult1 = modVariables.$hConn.Exec(sQuery, tmpOrden_prods_precio["IDPO"])
    If hResult1.Available Then
      For Each hResult1
        sQuery = "SELECT * FROM db_tacosRoy.tbl_combos where `id_producto_relacionado` = &1"
        Try hResult2 = modVariables.$hConn.Exec(sQuery, tmpOrden_prods_precio["ID Prod"])
        If hResult2.Available Then 'se trata de un combo
          idComboTemp = hResult2["id_producto_relacionado"]
          hResult2 = Null
          sQuery = "SELECT `id_producto` FROM db_tacosRoy.tbl_prods_x_combo where `id_combo` = &1;"
          Try hResult2 = modVariables.$hConn.Exec(sQuery, idComboTemp)
            For Each hResult2
              sQuery = "UPDATE `tbl_prods_x_orden` SET `bool_activo` = 0 WHERE `int_orden_id` = &1 `and int_producto_id` = &2"
              Try modVariables.$hConn.Exec(sQuery, tmpOrden_prods_precio["Orden"], hResult2[0])
            Next
        Endif
      Next
      
    Endif
    
    gridComanda.Rows.Count = 0
    tmpOrden_prods_precio = Null
    sQuery = "Select * from vw_prods_x_orden where `Orden` = &1 and `Activo` = 1 and `Activo` = 1  and `Tipo Precio` = &2 order by `HoraFecha` Asc"
    
    Print squery & ", Orden: " & modVariables.$intTicketNR
    Try tmpOrden_prods_precio = modVariables.$hConn.Exec(sQuery, modVariables.$intOrdenID, modVariables.$intTipoPrecio)
    gridComanda.Rows.Count = tmpOrden_prods_precio.Count
  Endif

Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)
End

Public Sub btnImprimir_Click()

  iTipoPrintJob = Message.Question("Desea imprimir:\n", "&ULTIMOS agregados", "&TODA la Orden", "&Cancelar impresión")

  If iTipoPrintJob <= 2 Then
    Me.Enabled = False
    Inc Application.Busy
    iTipoPrintJob = iTipoPrintJob - 1
    PrinterOrden.OutputFile = User.Home &/ "Tickets/ticketOrden_" & modVariables.$intTicketNR & "-" & modUtils.convierteFechaFormatoHora(Now) & ".pdf"
    PrinterOrden.Print
    Dec Application.Busy
    Me.Enabled = True
  Endif

End

Public Sub PrinterOrden_Draw()

Dim PRINT_MARGIN As Float 
Dim docV As String
Dim hImage As Image

Dim tmpMesa As Integer
Dim rResult As Result
Dim iInc As Integer

Dim rResultOpciones As Result
Dim myResult As Result


  PRINT_MARGIN = 2
  iInc = 1
  hImage = Image.Load(User.Home &/ ".tacosroy/pictures" &/ "logoTicket.png")
  hImage.Opacity(0.3)
  Paint.MoveTo(1, 105)
  Paint.DrawImage(hImage, 12, 1, hImage.Width * 7, hImage.Height * 7)
  
  Try rResult = modVariables.$hConn.Exec("Select int_mesa from tbl_ordenes where id_orden_id = &1", modVariables.$intOrdenID)
  
  tmpMesa = rResult[0]
  
  rResult = Null
  
  Paint.Font = Font["Helvetica, Regular, 10"]
  Paint.MoveTo(1, 405)
  docV = Format(Now, "dddd dd mmmm yyyy, hh:nn:ss")
  Paint.DrawRichText(docV, 1, PRINT_MARGIN - (PrinterOrden.Page - 1) * (Paint.Height - PRINT_MARGIN * 2), Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterOrden.Count, Align.TopNormal)
  Paint.Font = Font["Helvetica, Bold, 20"]
  docV = "Orden: " & modVariables.$intOrdenID
  Paint.DrawRichText(docV, PRINT_MARGIN, 300 + PRINT_MARGIN - (PrinterOrden.Page - 1) * (Paint.Height - PRINT_MARGIN * 2), Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterOrden.Count, Align.TopNormal)
  docV = "Mesa: " & tmpMesa
  Paint.DrawRichText(docV, PRINT_MARGIN, 600 + PRINT_MARGIN - (PrinterOrden.Page - 1) * (Paint.Height - PRINT_MARGIN * 2), Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterOrden.Count, Align.TopNormal)
  
  Select Case iTipoPrintJob
    Case 0
      Try rResult = modVariables.$hConn.Exec("Select * from vw_prods_x_orden where `Orden` = &1 and `Activo` = 1 and `Impreso` = &2  and `Tipo Precio` = &3 order by `HoraFecha` Asc", modVariables.$intOrdenID, 0, modVariables.$intTipoPrecio)
      Try modVariables.$hConn.Exec("UPDATE `tbl_prods_x_orden` SET `bool_impreso` = 1 WHERE `tbl_prods_x_orden`.`int_orden_id` = &1", modVariables.$intOrdenID)
      If rResult.Count = 0 Then
        rResult = modVariables.$hConn.Exec("Select * from vw_prods_x_orden where `Orden` = &1 and `Activo` = 1 and `Impreso` = &2  and `Tipo Precio` = &3 order by `HoraFecha` Asc", modVariables.$intOrdenID, 1, modVariables.$intTipoPrecio)
      Endif
    Case 1
      Try modVariables.$hConn.Exec("UPDATE `tbl_prods_x_orden` SET `bool_impreso` = 1 WHERE `tbl_prods_x_orden`.`int_orden_id` = &1", modVariables.$intOrdenID)
      Try rResult = modVariables.$hConn.Exec("Select * from vw_prods_x_orden where `Orden` = &1 and `Activo` = 1  and `Tipo Precio` = &2 order by `HoraFecha` Asc", modVariables.$intOrdenID, modVariables.$intTipoPrecio)
  End Select
 
  If rResult <> Null Then
    For Each rResult
      docV = rResult["Cantidad"] & "\t" & rResult["Producto"]
      Paint.Font = Font["Helvetica, Bold, 12"]
      Paint.DrawRichText(docV, PRINT_MARGIN, (iInc * 350) + 900 + PRINT_MARGIN - (PrinterOrden.Page - 1) * (Paint.Height - PRINT_MARGIN * 2), Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterOrden.Count, Align.TopNormal)
      Try myResult = modVariables.$hConn.Exec("SELECT * FROM `vw_opciones_platillos_ticket` WHERE `IDPO` = &1", rResult["IDPO"])
      If myResult <> Null Then
        If myResult.Available Then 'Este producto tiene opciones, a imprimirlas iTipoPrintJob
          docV = ""
          For Each myResult
            docV &= myResult["TxtTicket"] & " -- "
          Next
        Paint.Font = Font["Helvetica, Bold, 8"]
        Paint.DrawRichText(docV, PRINT_MARGIN, (iInc * 350) + 1100 + PRINT_MARGIN - (PrinterOrden.Page - 1) * (Paint.Height - PRINT_MARGIN * 2), Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterOrden.Count, Align.TopNormal)  
        Endif
      Endif
    
      Inc iInc  
    Next
  Endif
    

Catch
  Paint.Font = Font["Helvetica, Bold, 9"]
  docV = "ERROR: YA SE HAN IMPRESO TODA LA ORDEN"
  Paint.DrawRichText(docV, PRINT_MARGIN, (iInc * 350) + 1100 + PRINT_MARGIN - (PrinterOrden.Page - 1) * (Paint.Height - PRINT_MARGIN * 2), Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterOrden.Count, Align.TopNormal)  
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)

End
