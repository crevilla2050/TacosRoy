' Gambas class file

Public myCSVfile As CsvFile
Private iRecords As Integer
Private colRecords As New Collection
Private aFields As String[]
Private myiComanda As Integer
Private myDate As Date
Private myfTotal As Float
Private myImporte As Float

Private myIConsecutivo As String
Private myHora As String

'Impresion de tickets y  reportes
Private rYPrint As Integer
Private Const PRINT_MARGIN As Float = 1


Public Sub Form_Open()

  
End

Public Sub Button2_Click()

  Me.Close

End

Public Sub btnImprimeT_Click()

Dim iInc As Integer
Dim sTempFile, scommand As String
Dim iRecordsCount As Integer
Dim myField, myColName, myValue As Variant
Dim sYear, sMonth, sDay As Integer
Dim sQuery As String
Dim hResult As Result
Dim ConsecutivoFound, bComandaFound, bDateFound As Boolean

  iInc = 0
  Me.Enabled = False
  Inc Application.Busy
  'If gridFacturas.Rows.Selection.Count > 0 Then 
    'For Each iInc In gridFacturas.Rows.Selection
      PrinterCuenta.PaperWidth = 80
      'For iRecordsCount = 0 To colRecords.Count
      'Print iRecordsCount
      For Each myField In colRecords
        If (myField <> Null) Then
          For Each myColName In aFields
            Select Case myColName
              Case "cons_impresion"
                If (myField["cons_impresion"] <> Null) Then 
                  myiConsecutivo = CStr(myField["cons_impresion"])
                  'modVariables.i_intTicketNR = myiConsecutivo
                  ConsecutivoFound = True
                Endif
              Case "comanda" 
                If (myField["comanda"] <> Null) Then 
                  myiComanda = CInt(myField["comanda"])
                  bComandaFound = True
                Endif
              Case "fecha2"
                'Hay que corregir la fecha, pues el sistema me da un dia de menos
                If (myField["fecha2"] <> Null) Then 
                  myValue = myField["fecha2"]
                  sYear = CInt(Left(myValue, 4))
                  sMonth = CInt(Mid(myValue, 6, 2))
                  sDay = CInt(Right(myValue, 2))
                  myDate = CDate("01/01/1980 00:00:00")
                  myDate = DateAdd(myDate, gb.Year, sYear - 1980)
                  myDate = DateAdd(myDate, gb.Month, sMonth - 1)
                  myDate = DateAdd(myDate, gb.Day, sDay)
                  myDate = DateAdd(myDate, gb.Hour, -18)
                  'myDate = DateAdd(myDate, gb.Minute, -59)
                  bDateFound = True
                Endif
              Case "importe"
                myImporte = myField["importe"]
              Default 
            End Select
            If ConsecutivoFound And bComandaFound And bDateFound Then 
              hResult = Null
              sQuery = "SELECT * FROM vw_prods_x_orden where `Comanda` = &1 and Date(`HoraFecha`) >= Date(&2) and `Activo` = 1;"
              Try hResult = modVariables.c_Conn.Exec(sQuery, myiComanda, myDate)
              If (hResult <> Null) And hResult.Available Then 
                modVariables.i_intOrdenID = hResult["Orden"]
                modVariables.s_strMesaTemp = hResult["Mesa"]
                'modVariables.i_intTicketNR = myiConsecutivo
                'modVariables.i_intNrComanda = hResult["Comanda"]
                'myDate = hResult["HoraFecha"]
              Endif
              ConsecutivoFound = False
              bComandaFound = False
              bDateFound = False
            Endif
          Next 
        Endif
      
        If Exist(User.Home &/ "Tickets" &/ modVariables.sPrefijoDB &/ Format(Now, "yyyy") &/ Format(Now, "mm") &/ Format(Now, "dd")) = False Then
          modUtils.CreateDirTree(User.Home &/ "Tickets" &/ modVariables.sPrefijoDB &/ Format(Now, "yyyy") &/ Format(Now, "mm") &/ Format(Now, "dd"))
        Endif
        sTempFile = User.Home &/ "Tickets" &/ modVariables.sPrefijoDB &/ Format(Now, "yyyy") &/ Format(Now, "mm") &/ Format(Now, "dd") &/ "ticket_copia_" & myiConsecutivo
        sTempFile = Replace(sTempFile, " ", "-")
        
        PrinterCuenta.OutputFile = sTempFile & ".pdf"
        PrinterCuenta.Print()
        Wait 1.0
      Next
    'Next
    
    'sCommand = "for FILE in *.pdf ; do lpr \"$FILE\" ; done"
    'Shell sCommand Wait
        
    Me.Enabled = True
    Dec Application.Busy
    
  'Endif 
Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)
End

Public Sub PrinterCuenta_Draw()

  Dim sQuery As String
  Dim hResult As Result
  Dim sTemporal As String[]
  Dim hImage As Image
  
  Dim sArray As String[] = Split(File.Load("Templates/ticketreporte-" & modVariables.sPrefijoDB & ".html"), gb.Newline, "", True)
  Dim sHTML As String
  
  sHTML = sArray.Join(gb.Newline)
  PrinterCuenta.PaperWidth = 80
  hImage = Image.Load("Imagenes" &/ "logoTicket.png")
  hImage.Opacity(0.3)
  Paint.MoveTo(19, 105)
  Paint.DrawImage(hImage, 12, 600, hImage.Width * 7, hImage.Height * 7)
  rYPrint = PRINT_MARGIN - (PrinterCuenta.Page - 1) * (Paint.Height - PRINT_MARGIN * 2)
  
  Paint.Font = Font["Helvetica"]

  sHTML = Replace(sHTML, "@@DateTime@@", Format(myDate, "yyyy-mm-dd"))
  sHTML = Replace(sHTML, "@@OrdenNr@@", CStr(modVariables.i_intOrdenID))
  sHTML = Replace(sHTML, "@@TicketNr@@", CStr(myiConsecutivo))
  sHTML = Replace(sHTML, "@@NrMesa@@", modVariables.s_strMesaTemp)
  'sHTML = Replace(sHTML, "@@FormaPago@@", colRecords["Forma Pago"])
  
  hResult = Null
  sQuery = "SELECT * FROM tbl_datos_sucursal where id_sucursal = 1"
  Try hResult = modVariables.c_Conn.Exec(sQuery)
  
  sHTML = Replace(sHTML, "@@NombreSucursal@@", CStr(hResult["chr_nombre"]))
  sHTML = Replace(sHTML, "@@DatosSuc1@@", CStr(hResult["chr_dir1"]))
  sHTML = Replace(sHTML, "@@DatosSuc2@@", CStr(hResult["chr_dir2"]))
  sHTML = Replace(sHTML, "@@DatosSuc3@@", CStr(hResult["chr_dir3"]))
  sHTML = Replace(sHTML, "@@TelefonoSuc@@", CStr(hResult["chr_telefono1"]))
  '
  'aqui va el calculo con print true
  sTemporal = FCobrar.sCalculaCosto(modVariables.i_intOrdenID)
  sHTML = Replace(sHTML, "@@DetalleOrden@@", sTemporal[0])
  'rYPrint = sTemporal[3]
  'tLetra = 
  sHTML = Replace(sHTML, "@@Total@@", "Total: " & sTemporal[1] & ".00")
  sHTML = Replace(sHTML, "@@Recibido@@", sTemporal[1] & ".00")
  sHTML = Replace(sHTML, "@@Cambio@@", "0.00")
  sHTML = Replace(sHTML, "@@TotalLetra@@", modNumeros.EnLetras(CStr(sTemporal[1])))
  'tbl_ordenes_cerradas
  
  Paint.Font = Font["Helvetica"]
  PrinterCuenta.PaperWidth = 80
  Paint.DrawRichText(sHTML, PRINT_MARGIN, rYPrint + 20, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCuenta.Count, Align.TopNormal)
  

Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)

End

Public Sub Button4_Click()
Dim iInt As Integer
Dim myPath As String

  FFilePick.ShowDialog
  myPath = modVariables.sFilePath
  
  If myPath <> "" Then 
    myCSVfile = New CsvFile(myPath)
    Do Until myCSVfile.Eof
      colRecords[myCSVfile.Line] = myCSVfile.Read()   'read every line into a collection
      Inc iRecords                                    'count the number of records
    Loop
    aFields = myCSVfile.Fields      'get the field headers (i.e. "name", "rank" & "serialNo"
    
    gridFacturas.Rows.Count = 0
    gridFacturas.Columns.Count = 0
    
    gridFacturas.Header = GridView.Horizontal
    gridFacturas.Grid = True
    gridFacturas.Columns.Count = aFields.Count
    
    For iInt = 0 To aFields.Count - 1
      gridFacturas.Columns[iInt].Text = myCSVfile.Fields[iInt]
    Next
    'display some data from the CSV file
    If colRecords.Count > 0 Then 
      gridFacturas.Rows.Count = colRecords.Count 
      btnImprimeT.Enabled = True
      lblSubTotal.Text = "Columnas: " & aFields.Count & ", Comandas encontradas: " & colRecords.Count 
    Else 
      gridFacturas.Rows.Count = 0
      btnImprimeT.Enabled = False
      lblSubTotal.Text = "0 Registros"
    Endif 
  Else 
    btnImprimeT.Enabled = False
  Endif

Catch 
  Print Error.Text
  Dec Application.Busy
  Message.Error(Error.Where & ", " & Error.Text)
  
End

Public Sub gridFacturas_Data(Row As Integer, Column As Integer)
  
  If Row Mod 2 = 0 Then gridFacturas.Data.Background = Color.RGB(115, 115, 115)
  gridFacturas.Data.text = colRecords[Row + 2][CStr(aFields[Column])]
  
Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)
End
