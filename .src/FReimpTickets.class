' Gambas class file

Private sQueryString As String
Private rsRecords As Result
Private tmpOrden_prods_precio As Result


Public Sub btnImrpimeCuenta_Click()

  Me.Enabled = False
  Inc Application.Busy
  PrinterCuenta.Print
  Dec Application.Busy
  Me.Enabled = True
  

End

Public Sub PrinterCuenta_Draw()

  Dim PRINT_MARGIN As Float
  Dim iInc As Integer
  Dim hImage As Image
  Dim sQuery As String
  Dim rResult, rResult2 As Result
  Dim rYPrint As Integer
  Dim rResultPromos As Result
  Dim fTotal, flTemporal As Float
  Dim myTicket As Integer
  Dim docV As String

  PRINT_MARGIN = 1
  iInc = 1
  
  sQuery = "Select Producto, Cantidad, Precio, (Cantidad * Precio) as Subtotal from vw_orden_prods_precio where `Orden` = &1 and `Activo` = 1 order by `HoraFecha` Asc"
  
  Try rResult = modVariables.$hConn.Exec(sQuery, modVariables.$intOrdenID)
  If Error Then Message.Error(Error.Text & ", " & Error.Where)
  
  hImage = Image.Load(User.Home &/ ".tacosroy/pictures" &/ "logoTicket.png")
  hImage.Opacity(0.3)
  Paint.MoveTo(1, 105)
  Paint.DrawImage(hImage, 12, 200, hImage.Width * 7, hImage.Height * 7)
  
  rYPrint = PRINT_MARGIN - (PrinterCuenta.Page - 1) * (Paint.Height - PRINT_MARGIN * 2)
  
  sQuery = "Select * From `tbl_ticket_cons` ORDER BY id_ticketNrConsecutivo DESC LIMIT 1"
  Try rResult2 = modVariables.$hConn.Exec(sQuery)
  myTicket = CInt(rResult2[1])
  
  Paint.Font = Font["Helvetica, Bold, 12"]
  docV = "Orden: " & modVariables.$intOrdenID & ", Ticket Nr.: " & myTicket 
  Paint.DrawRichText(docV, PRINT_MARGIN, 300 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCuenta.Count, Align.TopNormal)
  docV = "Mesa: " & modVariables.$strMesaTemp
  Paint.DrawRichText(docV, PRINT_MARGIN, 600 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCuenta.Count, Align.TopNormal)
  Paint.Font = Font["Helvetica, Regular, 10"]
  
  Paint.MoveTo(1, 405)
  docV = Format(Now, "dddd dd mmmm yyyy, hh:nn:ss")
  Paint.DrawRichText(docV, 1, rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCuenta.Count, Align.TopNormal)
  docV = Null
  
  Paint.Font = Font["Helvetica, Regular, 10"]
  docV = "Detalle de la orden:\n"
  Paint.DrawRichText(docV, PRINT_MARGIN, 2000 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCuenta.Count, Align.TopNormal)
  
  Paint.Font = Font["Helvetica, Regular, 9"]
  Try rResult = modVariables.$hConn.Exec("Select * from vw_orden_prods_precio where `Orden` = &1 and `Activo` = 1 order by `HoraFecha`", modVariables.$intOrderID)
  If rResult <> Null Then
    
    fTotal = 0
    For Each rResult
      docV = ""
      
      sQuery = "Select * from tbl_promociones where id_producto = &1"
        Try rResultPromos = modVariables.$hConn.Exec(sQuery, rResult!IDPR)
        
        If rResultPromos <> Null Then 'Hay una promocion para este producto, checar validez de días.
          flTemporal = 0
          If Mid(rResultPromos!chr_dias_valido, WeekDay(Now) + 1, 1) = "1" Then
            flTemporal = rResult!Precio - (rResult!Precio * rResultPromos!fl_descuento)
            flTemporal = (flTemporal * rResult!Cantidad)
            fTotal = ftotal + flTemporal
          Endif
        Else
          flTemporal = (rResult!Precio * rResult!Cantidad)
          fTotal = ftotal + flTemporal
          Endif
        rResultPromos = Null 

      docV = rResult["Cantidad"] & gb.Tab & gb.Tab & gb.Tab & rResult["Producto"] & gb.Cr & gb.Tab & "$" & CInt(flTemporal)
      Paint.DrawRichText(docV, PRINT_MARGIN, (iInc * 250) + 2200 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCuenta.Count, Align.TopNormal)
      Inc iInc  
    Next
  Endif
  
  Paint.Font = Font["Helvetica, Regular, 12"]
  docV = "Total a Pagar: $" & fTotal & ".00"
  Paint.DrawRichText(docV, PRINT_MARGIN, (iInc * 250) + 2400 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCuenta.Count, Align.TopNormal)
  

End


Public Sub Form_Open()

  'Abrimos la conexion que será utilizada en el proyecto
  modVariables.$hConn = modConn.ConectarDB()
  
  gridMainOrden.header = GridView.Horizontal
  gridMainOrden.grid = True
  gridMainOrden.Rows.count = 0
  gridMainOrden.Columns.count = 4
  gridMainOrden.Columns[0].text = "Orden"
  gridMainOrden.Columns[1].text = "Hora"
  gridMainOrden.Columns[2].text = "Mesa"
  gridMainOrden.Columns[3].text = "Status"
  
  gridMainOrden.Columns[0].width = 80
  gridMainOrden.Columns[1].width = 100
  gridMainOrden.Columns[2].width = 80
  gridMainOrden.Columns[3].width = 100

  gridOrdenDetails.header = GridView.Horizontal
  gridOrdenDetails.grid = True
  gridOrdenDetails.Rows.count = 0
  gridOrdenDetails.Columns.count = 6
  gridOrdenDetails.Columns[0].text = "Orden"
  gridOrdenDetails.Columns[1].text = "IDPO"
  gridOrdenDetails.Columns[2].text = "Producto"
  gridOrdenDetails.Columns[3].text = "IDPR"
  gridOrdenDetails.Columns[4].text = "Cantidad"
  gridOrdenDetails.Columns[5].text = "Precio"
  'gridOrdenDetails.Columns[6].text = "OrdenNR"
  
  gridOrdenDetails.Columns[0].width = 0
  gridOrdenDetails.Columns[1].width = 0
  gridOrdenDetails.Columns[2].width = 180
  gridOrdenDetails.Columns[3].width = 0
  gridOrdenDetails.Columns[4].width = 40
  gridOrdenDetails.Columns[5].width = 40

End

Public Sub btnFindTicket_MouseUp()

  'SELECT * FROM db_tacosRoy.tbl_ordenes_cerradas;
  
    modVariables._cnnFechaInicio = DtBPickDateStart.Value
    modVariables._cnnFechaFinal = DtBPickDateEnd.Value
    If Mouse.Control Then
      sQueryString = "SELECT id_orden_id, dt_horafecha_cierre_orden, fl_total, bool_factura, chr_referencia_notas From tbl_ordenes_cerradas where Date(dt_horafecha_cierre_orden) >= '" & modUtils.convierteFechaFormato(modVariables._cnnFechaInicio) & "' AND Date(dt_horafecha_cierre_orden) <= '" & modUtils.convierteFechaFormato(modVariables._cnnFechaFinal) & "' order by dt_horafecha_cierre_orden, id_orden_id ASC"
    Else
      sQueryString = "SELECT id_orden_id, dt_horafecha_cierre_orden, fl_total, bool_factura, chr_referencia_notas From tbl_ordenes_cerradas where Date(dt_horafecha_cierre_orden) >= '" & modUtils.convierteFechaFormato(modVariables._cnnFechaInicio) & "' AND Date(dt_horafecha_cierre_orden) <= '" & modUtils.convierteFechaFormato(modVariables._cnnFechaFinal) & "' and int_lvl_report = 1 order by dt_horafecha_cierre_orden, id_orden_id ASC"
    Endif
    
    Try rsRecords = modVariables.$hConn.Exec(sQueryString)
    
    If rsRecords.Available Then
    gridMainOrden.Rows.Count = 0
    gridMainOrden.Rows.Count = rsRecords.Count
   
    Label1.Text = "Se han encontrado \n" & rsRecords.Count & " movimientos"
    'GridView1.Refresh
    'btnGeneraUnica.Enabled = True
  Else
    'GridView1.Clear
    gridMainOrden.Rows.Count = 0
    'btnGeneraUnica.Enabled = False
    Label1.Text = "No existen movimientos\npara la fecha seleccionada"
  Endif

End

Public Sub gridMainOrden_Data(Row As Integer, Column As Integer)
  
  If Row >= 0 Then
    rsRecords.moveTo(Row)
    Try gridMainOrden.Data.Text = Str(rsRecords[Column])
    If Error Then Print Error.Text & ", " & Error.Where
  Endif
  If row Mod 2 = 0 Then gridMainOrden.Data.Background = Color.RGB(105, 105, 105)
End

Public Sub gridMainOrden_Click()

  Dim qString As String
  Dim intTempOrder As Integer

  gridOrdenDetails.Rows.Count = 0
  intTempOrder = rsRecords.MoveTo(gridMainOrden.Row)
  modVariables.$intOrdenID = rsRecords["id_orden_id"]
  'modVariables.$intOrdenTmp = hResultOrdenes["OrdenNR"]
  modVariables.$strMesaTemp = rsRecords[2]
  
  'btnCancelOrden.Enabled = True
  'btnModifOrden.Enabled = True
  'btnCerrarOrden.Enabled = True

  qString = "Select * from vw_orden_prods_precio where `Orden` = &1 and `Activo` = 1 order by `HoraFecha` Asc"  
    Try tmpOrden_prods_precio = modVariables.$hConn.Exec(qString, rsRecords[0])
    If Error Then 
      Message.Error(Error.Text & ", " & Error.Where) 
     Else 
      'Message(qString & ", " & hResultOrdenes[0])
      gridOrdenDetails.Rows.Count = tmpOrden_prods_precio.Count
    Endif
  
If gridMainOrden.Row > 0 Then btnImrpimeCuenta.Enabled = True

End

Public Sub gridOrdenDetails_Data(Row As Integer, Column As Integer)

  Try tmpOrden_prods_precio.moveTo(Row)
  If Error Then Print Error.text
  
  Try gridOrdenDetails.Data.text = Str(tmpOrden_prods_precio[gridOrdenDetails.Columns[column].text])  
  If Error Then Print Error.text
  
  If row Mod 2 = 0 Then gridOrdenDetails.Data.Background = Color.RGB(115, 115, 115)

End
