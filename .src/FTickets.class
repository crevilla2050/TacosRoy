' Gambas class file

Private sQueryString As String
Public rsRecords As Result
Public rsInsumos As Result
Public rsInventario As Result
Private iControlFechaStart As Integer
Private iControlFechaEnd As Integer

'Impresion de tickets y  reportes
Private rYPrint As Integer
Private Const PRINT_MARGIN As Float = 1
Private fSelected As Float
Public iSelected As New Integer[]

Private Sub searchNDestroy(iControlFechaStart As Integer, iControlFechaEnd As Integer, Optional msControl As Integer)

Dim sQuery As String
Dim iInc, iJnc As Integer

  rsRecords = Null
  If Not msControl Then msControl = 0
  
  sQuery = "SELECT "
  If msControl = 1 Then
    sQuery &= " `tbl_orcon`.`id_orcon` as `Orcon`,"
    sQuery &= " `tbl_orcon`.`id_orden` as `ID Orden`, "
    sQuery &= "  `tbl_ordenes_cerradas`.`id_orden_cerrada` as `ID ORC`, "
    sQuery &= " `tbl_orcon`.`id_cons` as `ID Cons`, "
  Else
    sQuery &= "   `tbl_ordenes_cerradas`.`id_orden_id` as `ID Orden`,"
    sQuery &= "  `tbl_ordenes_cerradas`.`id_orden_cerrada` as `ID ORC`, "
    sQuery &= "   `tbl_consecutivo`.`chr_consecutivo` as `Consecutivo`,"
  Endif 
  sQuery &= "   `tbl_ordenes`.`int_nr_comanda` as `Comanda`, "
  sQuery &= "   `tbl_ordenes_cerradas`.`dt_horafecha_cierre_orden` as `Fecha Hora`,"
  sQuery &= "   `tbl_ordenes_cerradas`.`fl_total` as `Total`,"
  sQuery &= "   `tbl_mesas`.`chr_mesa` as `Mesa`,"
  sQuery &= "   `tbl_ordenes_cerradas`.`bool_factura` as `Factura`,"
  sQuery &= "   `tbl_ordenes_cerradas`.`chr_referencia_notas` as `Referencia`,"
  sQuery &= "   `tbl_ordenes_cerradas`.`id_control_fecha` as `Control Fecha`,"
  sQuery &= "   `tbl_formas_pago`.`chr_forma_pago` as `Forma Pago`"
  If msControl = 1 Then
    sQuery &= "   From `tbl_orcon`"
    sQuery &= "   left join `tbl_ordenes_cerradas` on `tbl_orcon`.`id_orden` = `tbl_ordenes_cerradas`.`id_orden_cerrada`"
    sQuery &= "   left join `tbl_ordenes` on `tbl_ordenes`.`id_orden_id` = `tbl_ordenes_cerradas`.`id_orden_id`"
    sQuery &= "   left join `tbl_consecutivo` on `tbl_consecutivo`.`id_consecutivo` = `tbl_orcon`.`id_cons`"
  Else 
    sQuery &= "   From `tbl_ordenes_cerradas`"
    sQuery &= "   left join `tbl_ordenes` on `tbl_ordenes`.`id_orden_id` = `tbl_ordenes_cerradas`.`id_orden_id`"
    sQuery &= "   left join `tbl_consecutivo` on `tbl_consecutivo`.`id_consecutivo` = `tbl_ordenes`.`int_consecutivo`"
  Endif
  sQuery &= "   left join `tbl_mesas` on `tbl_mesas`.`id_mesa_id` = `tbl_ordenes`.`int_mesa`"
  sQuery &= "   left join `tbl_formas_pago` on `tbl_formas_pago`.`id_forma_pago` = `tbl_ordenes_cerradas`.`int_forma_pago`"
  sQuery &= "   Where `tbl_ordenes_cerradas`.`id_control_fecha` >= &1 and `tbl_ordenes_cerradas`.`id_control_fecha` <= &2"
  If msControl = 1 Then
    sQuery &= " and `tbl_ordenes_cerradas`.`int_lvl_report` = 1 "
    sQuery &= "  order by `tbl_orcon`.`id_orcon` ASC"
  Else 
    'sQuery &= "  order by `tbl_ordenes_cerradas`.`dt_horafecha_cierre_orden` ASC"
    sQuery &= "  order by `tbl_ordenes`.`int_nr_comanda` ASC"
  Endif
  Print "======" & gb.cr & sQuery
  Try rsRecords = modVariables.c_Conn.Exec(sQuery, iControlFechaStart, iControlFechaEnd)
  If ((rsRecords <> Null) = True) And rsRecords.Available = True Then 
    gridReportIzq.Rows.count = 0
    gridReportIzq.header = GridView.Horizontal
    gridReportIzq.grid = True
    gridReportIzq.Columns.count = rsRecords.Fields.Count
    For iInc = 0 To rsRecords.Fields.Count - 1
      iJnc = 1
      Do While Mid(rsRecords.Fields[iInc].Name, iJnc, 1) <> "."
        iJnc += 1
      Loop
      gridReportIzq.Columns[iInc].Text = Right(rsRecords.Fields[iInc].Name, Len(rsRecords.Fields[iInc].Name) - iJnc)
      gridReportIzq.Columns[iInc].Width = 5 * Len(Right(rsRecords.Fields[iInc].Name, Len(rsRecords.Fields[iInc].Name) - iJnc))
    Next
    gridReportIzq.Rows.Count = rsRecords.Count
    btnGeneraCuenta.Enabled = True
  Else 
    gridReportIzq.Rows.Count = 0
    btnGeneraCuenta.Enabled = False
  Endif

Catch
  Print Error.Text & ", " & Error.Where
  Message.Error(Error.Text & ", " & Error.Where)
  
End


Public Sub Form_Open()

Dim squery As String
Dim hResult As Result

  DateChooser1.MinValue = modVariables._cnnComienzoLabores
  DateChooser2.MinValue = modVariables._cnnComienzoLabores
  DateChooser3.MinValue = modVariables._cnnComienzoLabores
  
  sQuery = "SELECT * from `tbl_control_fechas` where DATE(`dt_fecha_calendario`) = Date(&1) or DATE(`dt_fecha_calendario`) = Date(Now())"
  hResult = modVariables.c_Conn.Exec(sQuery, modVariables._cnnComienzoLabores)
  
  iControlFechaStart = hResult["id_control_fechas"]
  hResult.MoveNext
  iControlFechaEnd = hResult["id_control_fechas"]
  
  searchNDestroy(iControlFechaStart, iControlFechaEnd)

Catch
  Print Error.Text & ", " & Error.Where
  Message.Error(Error.Text & ", " & Error.Where)
  
End


Public Sub radioFechaUnica_Click()

  frmFechaUnica.Visible = radioFechaUnica.Value
  frmFechaRango.Visible = Not radioFechaUnica.Value

End

Public Sub radioFechaRango_Click()

  frmFechaRango.Visible = radioFechaRango.Value
  frmFechaUnica.Visible = Not radioFechaRango.Value

End

Public Sub btnGeneraUnica_Click()

  Dim tempContents As String
  
  'hFile = Open User.Home & "/reporteTemp.xls" For Write Create
  tempContents = generaHTMLVentas(rsRecords)
  
  'Print #hFile, tempContents
  'Print tempContents
  
  Dialog.Filter = ["*.xls", "Hoja de CÃ¡lculo Excel"]
  
  If Dialog.SaveFile() Then Return
  If Right(Dialog.Path, 4) <> ".xls" Then Dialog.Path &= ".xls"
  File.Save(Dialog.Path, tempContents)
  'hFile.Close
  
  
  
Catch
  Print Error.Text & ", " & Error.Where
  Message.Error(Error.Text & ", " & Error.Where)
  btnGeneraUnica.Enabled = False
End

Public Function generaHTMLVentas(rsRecorset As Result) As String
  
  Dim tempHTML As String
  Dim iInt As Integer
  Dim jInt As Integer
  Dim myVariant As Variant
  Dim fTotal As Float
  Dim iIndexTotal As Integer
  
  tempHTML = "<body><table>" 
  tempHTML &= "<Tr><td colspan=6>Reporte de ventas</td>"
  tempHTML &= "</tr><tr>"
  iInt = 2
  'Get headers
  For iInt = 0 To gridReportIzq.Columns.count - 1
    tempHTML &= "<td>" & gridReportIzq.Columns[iInt].text & "</td>"
    If gridReportIzq.Columns[iInt].text = "Total" Then iIndexTotal = iInt
  Next
  
  rsRecorset.MoveFirst
  
  For Each rsRecorset
    tempHTML &= "<tr>"
    For jInt = 0 To rsRecorset.Fields.Count - 1
      myVariant = rsRecorset[jInt]
      If (TypeOf(myVariant) = gb.Date) Then
        myVariant = CStr(Format(CDate(rsRecorset[jInt]), "yyyy-mm-dd hh:nn:ss"))
      Endif
      tempHTML &= "<td>" & CStr(myVariant) & "</td>"
      If jInt = iIndexTotal Then fTotal += CFloat(myVariant)
    Next
    tempHTML &= "</tr>"
    Inc iInt
  Next
  
  tempHTML &= "<Tr><td>Registros:</td>"
  tempHTML &= "<td>" & iInt & "</td>"
  tempHTML &= "<td>&nbsp;</td></tr>"
  tempHTML &= "<td>&nbsp;</td></tr>"
  tempHTML &= "<td>Total:</td>"
  tempHTML &= "<td>" & fTotal & "</td>"
  tempHTML &= "<td>&nbsp;</td></tr>"
  tempHTML &= "</table></body>"
  
  'Print tempHTML
  Return tempHTML

Catch
  Print Error.Text & ", " & Error.Where
  Message.Error(Error.Text & ", " & Error.Where)

End

Public Sub gridReportIzq_Data(Row As Integer, Column As Integer)
  
  If (rsRecords <> Null) Then
    If Row >= 0 Then
      rsRecords.moveTo(Row)
      Try gridReportIzq.Data.Text = Str(rsRecords[Column])
      If Error Then Print Error.Text & ", " & Error.Where
    Endif
  Endif

End

Public Sub btnBuscar_MouseUp()

Dim hResult As Result
'Dim iControlF As Integer
'Dim iInc As Integer

  rsRecords = Null
  rsInsumos = Null
  rsInventario = Null
    
  If radioFechaUnica.Value = True Then
    modVariables._cnnFechaInicio = DateChooser1.Value
    modVariables._cnnFechaFinal = DateChooser1.Value
  Else
    modVariables._cnnFechaInicio = DateChooser2.Value
    modVariables._cnnFechaFinal = DateChooser3.Value
  Endif
  
    
  sQueryString = "SELECT * FROM `tbl_control_fechas` where Date(`dt_fecha_calendario`) >= DATE(&1) and Date(`dt_fecha_calendario`) <= DATE(&2);"
  Try hResult = modVariables.c_Conn.Exec(sQueryString, Format(modVariables._cnnFechaInicio, "yyyy-mm-dd"), Format(modVariables._cnnFechaFinal, "yyyy-mm-dd"))

  If (hResult <> Null) And hResult.Available Then
    iControlFechaStart = hResult["id_control_fechas"]
    hResult.MoveLast
    iControlFechaEnd = hResult["id_control_fechas"]
  Else
    Message.Info("No se han encontrado registros")
    Return
  Endif
  
  If Mouse.Control Then 
    searchNDestroy(iControlFechaStart, iControlFechaEnd)
  Else 
    searchNDestroy(iControlFechaStart, iControlFechaEnd, 1)
  Endif
  
  
Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)
End

Public Sub btnGeneraCuenta_Click()

Dim hResult, hResultCons As Result
Dim sQuery, sFileName As String
Dim iConst, chrNewConst As Integer
Dim iInc As Integer

  If Message.Question("Esta seguro de asegurar estos records?\n" & gb.CrLf & "Este paso es irreversible!", "Si, procesar", "No, me espero") = 1 Then
    Inc Application.Busy
    rsRecords.MoveFirst
    For Each rsRecords
      hResult = Null
      sQuery = "id_orden_cerrada = &1"
      modVariables.c_Conn.Begin()
      hResult = modVariables.c_Conn.Edit("tbl_ordenes_cerradas", sQuery, rsRecords["ID ORC"])
      hResult!int_lvl_report = 0
      hResult.Update()
      modVariables.c_Conn.Commit()
    Next
    
    hResultCons = Null
    sQuery = "Select * from tbl_orcon order by id_cons Desc Limit 1"
    Try hResultCons = modVariables.c_Conn.Exec(sQuery)
    
    If (hResultCons <> Null) And hResultCons.Available Then
      iConst = hResultCons["id_cons"]
    Endif
    
    hResultCons = Null
    
    For Each iInc In gridReportIzq.Rows.Selection
      iConst += 1
      FTickets.rsRecords.MoveTo(iInc)
      sQuery = "id_orden_id = &1"
      modVariables.c_Conn.Begin()
      hResult = modVariables.c_Conn.Edit("tbl_ordenes_cerradas", sQuery, FTickets.rsRecords["ID Orden"])
      hResult!int_lvl_report = 1
      hResult.Update()
      modVariables.c_Conn.Commit()
      hResult = Null

      modVariables.c_Conn.Begin()
      hResult = modVariables.c_Conn.Create("tbl_orcon")
      hResult!id_orden = FTickets.rsRecords["ID ORC"]
      hResult!id_cons = iConst
      hResult.Update()
      modVariables.c_Conn.Commit()
      hResult = Null
    Next
    
    'Update const table
    sQuery = "Select * from tbl_consecutivo order by id_consecutivo Asc"
    Try hResultCons = modVariables.c_Conn.Exec(sQuery)
    
    'last const 
    hResultCons.MoveTo(iConst) 
    chrNewConst = hResultCons["chr_consecutivo"]
    hResultCons.MoveLast()
    
    'n const
    sQuery = "id_consecutivo = &1"
    modVariables.c_Conn.Begin()
    hResult = modVariables.c_Conn.Edit("tbl_consecutivo", sQuery, hResultCons["id_consecutivo"])
    hResult!chr_consecutivo = chrNewConst
    hResult.Update()
    modVariables.c_Conn.Commit()
    hResult = Null
    hResultCons = Null
    
    'export DB and put on place
    sFileName = User.Home &/ "Dropbox/2020/TRdumps" &/ modVariables.sPrefijoDB &/ "orcon_db_tacosroy_" & modVariables.sPrefijoDB & "-" & CStr(Format(Now(), "yyyy-mm-dd_hh_nn_ss"))
    
    modVariables.cnfDBUpdates["Updates/file_" & modVariables.sPrefijoDB] = sFileName
    
    sQuery = "mysqldump --host=127.0.0.1 --port=3306 --default-character-set=utf8 --user=usr_tacosroy -p.tacos1965. --protocol=tcp --skip-triggers \"db_tacosroy_" & modVariables.sPrefijoDB & "\" tbl_orcon tbl_consecutivo > " & sFileName & ".sql"
    
    'Print sQuery
    Shell sQuery Wait
    
    'tell program to update on next start
    modVariables.cnfDBUpdates["Updates/update_" & modVariables.sPrefijoDB] = "True"
  
    Dec Application.Busy
  Endif 

Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)
End


Public Sub gridReportIzq_Click()

Dim iInc As Integer

  iInc = 0
  fSelected = 0
  lblSubTotal.Text = ""
  
  For Each iInc In gridReportIzq.Rows.Selection
    rsRecords.MoveTo(iInc)
    Try fSelected += rsRecords["Total"]
  Next

  lblSubTotal.Text = fSelected
  modVariables.i_intOrdenID = rsRecords["ID Orden"]

Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)

End



Public Sub Button2_Click()

  Me.Close

End

Public Sub btnImprimeT_Click()

Dim iInc As Integer
Dim sTempFile, scommand As String

  iInc = 0
  rsRecords.MoveFirst
  Me.Enabled = False
  Inc Application.Busy
  For Each iInc In gridReportIzq.Rows.Selection

    PrinterCuenta.PaperWidth = 80
    rsRecords.MoveTo(iInc)
    modVariables.i_intOrdenID = rsRecords["ID Orden"]
    modVariables.i_intTicketNR = rsRecords["Consecutivo"]
    modVariables.s_strMesaTemp = rsRecords["Mesa"]
    
    Print modVariables.i_intOrdenID & ", " & modVariables.s_strMesaTemp
    sTempFile = User.Home &/ "Tickets/ticket_" & modVariables.i_intTicketNR & "-" & modUtils.convierteFechaFormatoHora(Now) & ".pdf"
    sTempFile = Replace(sTempFile, " ", "-")
    
    PrinterCuenta.OutputFile = User.Home &/ "Tickets/ticket_" & modVariables.i_intTicketNR & "-" & modUtils.convierteFechaFormatoHora(Now) & ".pdf"
    PrinterCuenta.Print()
    'Wait 0.25
    sCommand = "lp " & sTempFile
    Shell sCommand Wait 
    rsRecords.MoveFirst

  Next
  Me.Enabled = True
  Dec Application.Busy

Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)
End

Public Sub PrinterCuenta_Draw()

  Dim sQuery As String
  Dim hResult As Result
  Dim sTemporal As String[]
  Dim hImage As Image
  
  Dim sArray As String[] = Split(File.Load("Templates/ticketventa-" & modVariables.sPrefijoDB & ".html"), gb.Newline, "", True)
  Dim sHTML As String
  
  sHTML = sArray.Join(gb.Newline)
  PrinterCuenta.PaperWidth = 80
  hImage = Image.Load("Imagenes" &/ "logoTicket.png")
  hImage.Opacity(0.3)
  Paint.MoveTo(19, 105)
  Paint.DrawImage(hImage, 12, 600, hImage.Width * 7, hImage.Height * 7)
  
  rYPrint = PRINT_MARGIN - (PrinterCuenta.Page - 1) * (Paint.Height - PRINT_MARGIN * 2)
  
  Paint.Font = Font["Helvetica"]

  sHTML = Replace(sHTML, "@@DateTime@@", Format(rsRecords["Fecha Hora"], "dddd, yyyy-mm-dd hh:nn"))
  sHTML = Replace(sHTML, "@@OrdenNr@@", CStr(modVariables.i_intTicketNR))
  sHTML = Replace(sHTML, "@@TicketNr@@", CStr(modVariables.i_intTicketNR))
  sHTML = Replace(sHTML, "@@NrMesa@@", modVariables.s_strMesaTemp)
  
  hResult = Null
  sQuery = "SELECT * FROM `tbl_ordenes` where `id_orden_id` = " & modVariables.i_intOrdenID 
  
  If (hResult <> Null) And hResult.Available Then 
    sHTML = Replace(sHTML, "@@NrComanda@@", CStr(hResult["int_nr_comanda"]))
  Else 
    sHTML = Replace(sHTML, "@@NrComanda@@", "No Disponible")
  Endif
    
  hResult = Null
  sQuery = "SELECT * FROM tbl_datos_sucursal where id_sucursal = 1"
  Try hResult = modVariables.c_Conn.Exec(sQuery)
  
  sHTML = Replace(sHTML, "@@NombreSucursal@@", CStr(hResult["chr_nombre"]))
  sHTML = Replace(sHTML, "@@DatosSuc1@@", CStr(hResult["chr_dir1"]))
  sHTML = Replace(sHTML, "@@DatosSuc2@@", CStr(hResult["chr_dir2"]))
  sHTML = Replace(sHTML, "@@DatosSuc3@@", CStr(hResult["chr_dir3"]))
  sHTML = Replace(sHTML, "@@TelefonoSuc@@", CStr(hResult["chr_telefono1"]))
  '
  
  'aqui va el calculo con print true
  sTemporal = FCobrar.sCalculaCosto(modVariables.i_intOrdenID)
  sHTML = Replace(sHTML, "@@DetalleOrden@@", sTemporal[0])
  'rYPrint = sTemporal[3]
  'tLetra = 
  sHTML = Replace(sHTML, "@@Total@@", "Total: " & sTemporal[1] & ".00")
  sHTML = Replace(sHTML, "@@Recibido@@", sTemporal[1] & ".00")
  sHTML = Replace(sHTML, "@@Cambio@@", "0.00")
  sHTML = Replace(sHTML, "@@TotalLetra@@", modNumeros.EnLetras(CStr(sTemporal[1])))
  'tbl_ordenes_cerradas
  
  Paint.Font = Font["Helvetica"]
  PrinterCuenta.PaperWidth = 80
  Paint.DrawRichText(sHTML, PRINT_MARGIN, rYPrint + 20, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCuenta.Count, Align.TopNormal)
  

Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)

End


Public Sub btnFracturas_Click()
Dim iNrRecords, iInt As Integer
Dim bAdded As Boolean
Dim iSel As Integer

  If Message.Question("Cargar archivo CVS?", "Cargar Archivo", "Sin Cargar") = 1 Then 
    FGridFacturas.ShowModal()
  Endif

  rsRecords.MoveFirst
  For iNrRecords = 0 To rsRecords.Count - 1 'read total and date from records, one at the time
    rsRecords.MoveTo(iNrRecords)
    bAdded = False
    If CFloat(rsRecords["Total"]) = 0 Or rsRecords["Referencia"] <> "Efectivo" Then 
      For iInt = 0 To iSelected.Count - 1
        If iSelected[iInt] = iNrRecords Then bAdded = True
      Next
      If Not bAdded Then 
        iSelected.Add(iNrRecords)
        bAdded = False 'reset bfound
      Endif 
    Endif
  Next

  gridReportIzq.Mode = Select.Multiple
  If (iSelected <> Null) Then 
    For Each iSel In iSelected
      gridReportIzq.Select(iSel, 1)
    Next
  Endif 
  

End

