' Gambas class file

'Productos
Private sOperacionProducto As String
Public chkVariantes As CheckBox
Public vBoxVariantes1 As VBox
Public vBoxVariantes2 As VBox
Public vBoxVariantes3 As VBox

Private $gridProductos As Result

Private $tempPicFile As String


Private Sub cleanForm()
  
  txtTNombreProd.Text = ""
  txtTNombreProd.Enabled = False 
  txtDescProd.Text = ""
  'txtDescProd.Enabled = False
  'picProducto.Picture = Null
  'picProducto.Enabled = False
  'btnCargarFotos.Text = ""
  'btnCargarFotos.Enabled = False
  boxNvoErase.Visible = True
  boxCnlGrd.Visible = False
  
  HBox14.Enabled = False
  VBox12.Enabled = False
  'VBox13.Enabled = False
  boxCategorias.Enabled = False
  HBoxVariantes.Enabled = False
  
  txtDescProd.Enabled = False
  txtDescProd.Enabled = False
  'cmbTipo.Enabled = False
  'picProducto.Enabled = False

  boxNvoErase.Visible = True
  boxCnlGrd.Visible = False
  boxCategorias.Enabled = False
    
End

Private Sub RefreshGridProductos()
  
  'Dim hField As ResultField
  'Dim iInd As Integer 
  Dim queryS As String
  
  $gridProductos = Null
  gridProductos.Rows.Count = 0
  
  queryS = "Select * From `vw_products_catprecio` where `Activo`=1 order by Categoria, ID"
  
  
  Try $gridProductos = modVariables.$hConn.Exec(queryS)
  If Error Then Print Error.Text Else gridProductos.Rows.count = $gridProductos.Count
  
End



Public Sub Form_Open()

  'Declara variables
  Dim hConn As Connection
  Dim hResult As Result
  
  Dim iInd As Integer
  Dim iCol As Integer
  Dim iNrElements As Integer
  
  Dim tempInt As Integer
  Dim sQuery As String
  Dim tempString As String

  'Acomodar los botones
  boxNvoErase.X = 441
  boxNvoErase.Y = 413
  boxCnlGrd.X = 441
  boxCnlGrd.Y = 413
  boxNvoErase.Visible = True
  boxCnlGrd.Visible = False
  
  iInd = 0
  iCol = 0
  iNrElements = 0
  
  hConn = modConn.ConectarDB()
  
   sQuery = "SELECT chr_var_value FROM db_tacosRoy.tbl_configs where chr_var_name = 'CombosCategory';"
  
  Try hResult = modVariables.$hConn.Exec(sQuery)
  modVariables.$CatCombos = hResult[0]
  
  hResult = Null
  
  'Grid productos
  gridProductos.header = GridView.Horizontal
  gridProductos.grid = True
  gridProductos.Rows.count = 0
  gridProductos.Columns.count = 9
  gridProductos.Columns[0].text = "ID"
  gridProductos.Columns[1].text = "Producto"
  gridProductos.Columns[2].text = "Desc"
  gridProductos.Columns[3].text = "Categoria"
  gridProductos.Columns[4].text = "Tooltip"
  gridProductos.Columns[5].text = "CatID"
  gridProductos.Columns[6].text = "Precio"
  gridProductos.Columns[7].text = "Tipo"
  gridProductos.Columns[8].text = "Activo"
  
  gridProductos.Columns[0].width = 80
  gridProductos.Columns[1].width = 250
  gridProductos.Columns[2].width = 300
  gridProductos.Columns[3].width = 150
  gridProductos.Columns[4].width = 0
  gridProductos.Columns[5].width = 0
  gridProductos.Columns[6].width = 90
  gridProductos.Columns[7].width = 90
  gridProductos.Columns[8].width = 0
  
  'Llenar el grid de productos
  sQuery = "Select * From `vw_products_catprecio` where `Activo`= 1 order by Categoria, ID" 
  $gridProductos = modVariables.$hConn.Exec(sQuery)
  'If $gridProductos <> Null Then
  If $gridProductos.Available Then
    gridProductos.Rows.Count = $gridProductos.Count
  Endif
  
  hResult = Null
  
  'Llenado de combo de categorías
  cmbCategorias.Add("Elija categoría...")
  cmbTipoPrecios.Add("Elija...")
  cmbCombos.Add("Elija Combo...")

  Try hResult = modVariables.$hConn.Exec("Select * FROM tbl_categorias")
  If Error Then Print Error.Text
  
  For Each hResult
    With hResult     
       'Primero poner label de categoria padre
      tempString = CStr(.[0] & ", " & .[1])
      cmbCategorias.Add(tempString) ', .[2])
      'Print "Elemento a combo: " & tempString & ", index: " & .[2]
    End With
  Next
  
  hResult = Null
  Try hResult = modVariables.$hConn.Exec("Select * FROM tbl_tipos_precios")
  tempString = ""
  
  For Each hResult
    With hResult
      tempString = CStr(.[1])
      tempInt = .[0]
      cmbTipoPrecios.Add(tempString, tempInt)
    End With
  Next
  
  hResult = Null
  
  Try hResult = modVariables.$hConn.Exec("SELECT * FROM db_tacosRoy.tbl_combos;")
  tempString = ""
  
  For Each hResult
    With hResult
      tempString = CStr(.[1])
      tempInt = .[0]
      cmbCombos.Add(tempString, tempInt)
    End With
  Next
  
  hResult = Null
  'Llenado de las opciones para platillos
  hResult = modVariables.$hConn.Exec("Select * FROM tbl_variantes_platillos")
  iInd = 0
  
  'Preparamos cajitas para opciones
  vBoxVariantes1 = New VBox(Me) As "vBoxVariantes1"
  vBoxVariantes2 = New VBox(Me) As "vBoxVariantes2"
  vBoxVariantes3 = New VBox(Me) As "vBoxVariantes3"
  
  vBoxVariantes1.Reparent(HBoxVariantes)
  vBoxVariantes2.Reparent(HBoxVariantes)
  vBoxVariantes3.Reparent(HBoxVariantes)
  
  vBoxVariantes1.Expand = True
  vBoxVariantes2.Expand = True
  vBoxVariantes3.Expand = True
  
  For Each hResult
    With hResult
      chkVariantes = New CheckBox(Me) As "chkVariantePlatillo"
      chkVariantes.Text = hResult["chr_variante_nombre"]
      chkVariantes.AutoResize = True
      chkVariantes.Value = False
      chkVariantes.Enabled = False
      chkVariantes.Tag = hResult[0]
      Inc iInd
      If iInd > 0 And iInd <= 8 Then
        chkVariantes.Reparent(vBoxVariantes1)
      Else If iInd > 8 And iInd <= 16 Then
        chkVariantes.Reparent(vBoxVariantes2)
      Else If iInd > 16 Then
        chkVariantes.Reparent(vBoxVariantes3)
      Endif
    End With
  Next
  
  hResult = Null
End

Public Sub gridProductos_Data(Row As Integer, Column As Integer)

  $gridProductos.moveTo(Row)
  gridProductos.Data.text = Str($gridProductos[gridProductos.Columns[column].text])

End

Public Sub gridProductos_Click()

Dim sQuery As String
Dim sQueryCat As String
Dim rResult As Result
Dim rResultCat As Result
'Dim sPicPath As String
Dim myControl As Control
Dim iInd As Integer

  btnModificar.Enabled = True
  btnBorrar.Enabled = True  

  $gridProductos.MoveTo(gridProductos.Row)
  
  modVariables.$currProductoInteger = $gridProductos!ID
  modVariables.$currCategoriaInteger = $gridProductos!CatID
  
  txtTNombreProd.Text = $gridProductos!Producto
  txtDescProd.Text = $gridProductos!Desc
  txtPrecio.Text = $gridProductos!Precio
  cmbCategorias.Index = $gridProductos!CatID
  
  'get index of price type
  sQuery = "SELECT `int_tipo_precio` from `tbl_precios_productos` where `id_producto` = &1 and bit_activo = 1" 
  
  Try rResult = modVariables.$hConn.Exec(sQuery, modVariables.$currProductoInteger)
  cmbTipoPrecios.Index = rResult[0]

  For Each myControl In vBoxVariantes1.Children
    Object.SetProperty(myControl, "Enabled", False)
    Object.SetProperty(myControl, "Value", False)
  Next
  For Each myControl In vBoxVariantes2.Children
    Object.SetProperty(myControl, "Enabled", False)
    Object.SetProperty(myControl, "Value", False)
  Next
  For Each myControl In vBoxVariantes3.Children
    Object.SetProperty(myControl, "Enabled", False)
    Object.SetProperty(myControl, "Value", False)
  Next

  sQueryCat = "Select * from `vw_variantes_x_categoria` where `IDCAT` = &1 ORDER BY IDCAT, IDVAR ASC" 
  Try rResultCat = modVariables.$hConn.Exec(sQueryCat, modVariables.$currCategoriaInteger)
  
  For Each rResultCat
    For Each myControl In vBoxVariantes1.Children
      If Object.GetProperty(myControl, "Tag") = rResultCat["IDVAR"] Then 
        'Object.SetProperty(myControl, "Enabled", True)
        Object.SetProperty(myControl, "Value", True)
      Endif
    Next
    For Each myControl In vBoxVariantes2.Children
      If Object.GetProperty(myControl, "Tag") = rResultCat["IDVAR"] Then 
        'Object.SetProperty(myControl, "Enabled", True)
        Object.SetProperty(myControl, "Value", True)
      Endif
    Next
    For Each myControl In vBoxVariantes3.Children
      If Object.GetProperty(myControl, "Tag") = rResultCat["IDVAR"] Then 
        'Object.SetProperty(myControl, "Enabled", True)
        Object.SetProperty(myControl, "Value", True)
      Endif
    Next
  Next
  
  sQuery = "SELECT * FROM `tbl_prods_variantes` WHERE `id_producto` = &1"
  Try rResult = modVariables.$hConn.Exec(sQuery, modVariables.$currProductoInteger)
 
  If rResult.Available Then
    For Each rResult 
      For Each myControl In vBoxVariantes1.Children
        If Object.GetProperty(myControl, "Tag") = rResult[1] Then 
          Object.SetProperty(myControl, "Value", True)
        Endif
      Next
      For Each myControl In vBoxVariantes2.Children
        If Object.GetProperty(myControl, "Tag") = rResult[1] Then 
          Object.SetProperty(myControl, "Value", True)
        Endif
      Next
      For Each myControl In vBoxVariantes3.Children
        If Object.GetProperty(myControl, "Tag") = rResult[1] Then 
          Object.SetProperty(myControl, "Value", True)
        Endif
      Next
    Next
  Endif
  
  rResult = Null
  'See if product is a regular product or a combo
  sQuery = "SELECT * FROM db_tacosRoy.tbl_combos WHERE `id_producto_relacionado` = &1 and bit_activo = 1"
  Try rResult = modVariables.$hConn.Exec(sQuery, modVariables.$currProductoInteger)
  If rResult.Available Then
    cmbCategorias.Index = modVariables.$CatCombos
  Endif
  
  rResult = Null
  
  'modUtils.showImage(gridProductos.Row, picProducto)

  Catch
    'Print sPicPath
    Print Error.Text

End

Public Sub btnModificar_Click()

Dim iInd As Integer
Dim myControl As Control

  If (Message.Question("Desea modificar el producto seleccionado?", "Sí, modificar", "No, me espero") = 1) Then
  
    sOperacionProducto = "MOD"
    HBox14.Enabled = True
    VBox12.Enabled = True
    'VBox13.Enabled = True
    boxCategorias.Enabled = True
    HBoxVariantes.Enabled = True
    
    txtDescProd.Enabled = True
    txtDescProd.Enabled = True
    cmbTipoPrecios.Enabled = True
    'picProducto.Enabled = True
    'btnCargarFotos.Enabled = True
    boxNvoErase.Visible = False
    boxCnlGrd.Visible = True
    boxCategorias.Enabled = True
  Endif
  
  For Each myControl In vBoxVariantes1.Children
    Object.SetProperty(myControl, "Enabled", True)
  Next
  For Each myControl In vBoxVariantes2.Children
    Object.SetProperty(myControl, "Enabled", True)
  Next
  For Each myControl In vBoxVariantes3.Children
    Object.SetProperty(myControl, "Enabled", True)
  Next

End

Public Sub btnBorrar_Click()

Dim sQuery As String

  If (Message.Question("Desea borrar el artículo seleccionado?", "Sí, eliminar", "No, me espero") = 1) Then
    sQuery = "UPDATE tbl_productos SET int_activo = 0 where id_producto = &1" 
    'Message(squery & ", " & modVariables.$currProductoInteger)
    modVariables.$hConn.Exec(sQuery, modVariables.$currProductoInteger)
  Endif
  
  RefreshGridProductos()

End

Public Sub btnNuevoProd_Click()
Dim iInd As Integer
Dim myControl As Control

  If (Message.Question("Desea agregar un producto nuevo", "Sí, Agregar", "No, Me espero") = 1) Then

    HBox14.Enabled = True
    VBox12.Enabled = True
    boxCategorias.Enabled = True
    
    sOperacionProducto = "NEU"
  
    txtTNombreProd.Text = ""
    txtDescProd.Text = ""
    txtPrecio.Text = ""
    txtDescProd.Enabled = True
    'picProducto.Enabled = True
    'btnCargarFotos.Enabled = True
    boxNvoErase.Visible = False
    boxCnlGrd.Visible = True
    boxCategorias.Enabled = True
    HBoxVariantes.Enabled = True
    
    For Each myControl In vBoxVariantes1.Children
      Object.SetProperty(myControl, "Value", False)
      Object.SetProperty(myControl, "Enabled", True)
    Next
    For Each myControl In vBoxVariantes2.Children
      Object.SetProperty(myControl, "Value", False)
      Object.SetProperty(myControl, "Enabled", True)
    Next
    For Each myControl In vBoxVariantes3.Children
      Object.SetProperty(myControl, "Value", False)
      Object.SetProperty(myControl, "Enabled", True)
    Next

  Endif

End

Public Sub btnCancelarProd_Click()

  Dim intResp As Integer
  
  intResp = Message.Question("Desea cancelar los cambios hechos?", "Sí", "No")
  
  If (intResp = 1) Then
    'Cancela todo y limpia formula
    cleanForm()
  End If

End

Public Sub btnGuardarProds_Click()
  'Guarda el producto nuevo en la base de datos
  Dim intResp As Integer
  Dim hConn As Connection
  Dim hResult As Result
  Dim queryString As String
  Dim lastProdId As Integer
  Dim myControl As Control
  Dim iInd As Integer
  
  intResp = Message.Question("Desea guardar los cambios?", "Sí", "No")
  If (intResp = 1) Then
    
    If (cmbTipoPrecios.Index = 0) Then 
      Message.Warning("Por favor elija un tipo de precio")
      cmbTipoPrecios.SetFocus
    Endif
    
    If (cmbCategorias.Index = 0) Then 
      Message.Warning("Por favor elija una categoria")
      cmbCategorias.SetFocus
    Endif
    
    If sOperacionProducto = "NEU" Then  'Es un producto nuevo
        
      'If (picProducto.Picture = Null) Then
      '  If (Message.Warning("No se ha elegido una fotografia para este producto, proceder?", "Sí, Adelante", "Regresar") = 2) Then btnCargarFotos.SetFocus
      'Endif
      
      queryString = "INSERT INTO `tbl_productos` (`chr_nombre_prod`, `chr_desc_prod`, `chr_pic_prod_path`, `id_categoria`, `int_activo`) VALUES ('" &
        txtTNombreProd.Text & "', '" & txtDescProd.Text & "', " & "'', "
      
      queryString = queryString & cmbCategorias.Index & ", 1)"
      
      Print queryString
      Try hResult = modVariables.$hConn.Exec(queryString)
      If Error Then Print Error.Text
      'obtiene ID del producto recién insertado
      lastProdId = modVariables.$hConn.Exec("select last_insert_id() as last")["last"]
      
      'queryString = "UPDATE `tbl_productos` SET " & 
      ' "`chr_pic_prod_path` = '" & lastProdId & ".jpg'" &
      ' " WHERE `tbl_productos`.`id_producto` = '" & lastProdId & "'"
      
      'Print queryString
      'Try hResult = modVariables.$hConn.Exec(queryString)
      'If Error Then Print Error.Text
      
      'guarda la foto en disco con el ID del producto recién insertado
      'Try Shell "mv '" & $tempPicFile & "' '" & User.Home &/ "/.tacosroy/pictures/" & lastProdId & ".jpg " & "'" 
      'If Error Then Print Error.Text
      
      queryString = "INSERT INTO `tbl_precios_productos` (`id_producto`, `dbl_precio`, `int_tipo_precio`, `dat_fecha_precio_activo`) VALUES ("
      queryString &= "&1, &2, &3, &4)" 
      
      Try modVariables.$hConn.Exec(queryString, lastProdId, txtPrecio.Text, cmbTipoPrecios.Index, modUtils.convierteFechaFormatoHora(Now))
      
      Print queryString
      Try hResult = modVariables.$hConn.Exec(queryString)
      If Error Then Print Error.Text
      
      If cmbCategorias.Index = modVariables.$CatCombos Then
        queryString = "INSERT INTO `db_tacosRoy`.`tbl_combos` (`id_producto_relacionado`, `bit_activo`) VALUES (&1, '1');"
        Try modVariables.$hConn.Exec(queryString, lastProdId)
        chkIsCombo.Value = False
      Endif
      
      If chkIsCombo.Value = True Then
        If Message.Warning("Se agregaran " & txtCantidad.Text & " Pz.(s) de este producto al combo " & cmbCombos.Text, "Si, agregar", "No, corregir") = 1 Then
          'hResultCombos
          queryString = "INSERT INTO `db_tacosRoy`.`tbl_prods_x_combo` (`id_combo`, `id_producto`, `int_cantidad`, `bol_activo`) VALUES (&1, &2, &3, '1');"
          Try modVariables.$hConn.Exec(queryString, cmbCombos.Index, lastProdId, txtCantidad.Text)
        Else
          chkIsCombo.SetFocus()
        Endif
      Endif
      
      message("Los datos han sido guardados", "Aceptar")
      'limpia todo
      cleanForm()
    
    Else 'Es un producto modificado
      
      queryString = "UPDATE `tbl_productos` SET " 
      queryString &= "`chr_nombre_prod` = &1, " 
      queryString &= "`chr_desc_prod` = &2, "
      queryString &= "`id_categoria` = &3 "
      queryString &= "where `tbl_productos`.`id_producto` = &4"
      'Message(squery & ", " & modVariables.$currProductoInteger)
      Try modVariables.$hConn.Exec(queryString, txtTNombreProd.Text, txtDescProd.Text, cmbCategorias.Index, modVariables.$currProductoInteger)
      
      'let's check in prices tables if there is one already existing
      hResult = Null
      queryString = "SELECT * FROM db_tacosRoy.tbl_precios_productos where int_tipo_precio = &1 and id_producto = &2 and bit_activo = 1;"
      Try hResult = modVariables.$hConn.Exec(queryString, cmbTipoPrecios.Index, modVariables.$currProductoInteger)
      
      'deactivate previously active prices for this product
      If hResult.Available Then
        For Each hResult
          queryString = "UPDATE `tbl_precios_productos` SET "
          queryString &= "`bit_activo` = 0 "
          queryString &= "where `id_producto` = &1 And `int_tipo_precio` = &2;"
          'Print queryString
          modVariables.$hConn.Exec(queryString, hResult["id_producto"], hResult["int_tipo_precio"])
        Next
      Endif
      
      'clear results
      hResult = Null
      
      'once cleared, insert new price for this product
      queryString = "INSERT INTO `tbl_precios_productos` (`id_producto`, `dbl_precio`, `int_tipo_precio`, `dat_fecha_precio_activo`) VALUES ("
      queryString &= "&1, &2, &3, &4)" 
      
      Try modVariables.$hConn.Exec(queryString, modVariables.$currProductoInteger, txtPrecio.Text, cmbTipoPrecios.Index, modUtils.convierteFechaFormatoHora(Now))
      
      'See if product is a regular product or a combo
      
      'First see if exists in table and check value
      queryString = "SELECT * FROM db_tacosRoy.tbl_combos where `id_producto_relacionado` = &1 and `bit_activo` = 1;"
      Try hResult = modVariables.$hConn.Exec(queryString, modVariables.$currProductoInteger)
      
      If hResult.Available Then 'In combos table
        Select Case chkIsCombo.Value
          Case True
            queryString = " UPDATE `db_tacosRoy`.`tbl_combos` SET `bit_activo` = '1' WHERE (`id_producto_relacionado` = &1)"
          Case False
            queryString = "DELETE FROM `db_tacosRoy`.`tbl_combos` WHERE (`id_combo_relacionado` = &1);"
        End Select
        Try modVariables.$hConn.Exec(queryString, modVariables.$currProductoInteger)
      Else 'Not in combos table
        Select Case chkIsCombo.Value
          Case True
            queryString = "INSERT INTO `db_tacosRoy`.`tbl_combos` (`id_producto_relacionado`, `bit_activo`) VALUES (&1, '1');"
          Case False
            chkIsCombo.Value = False
        End Select
        Try modVariables.$hConn.Exec(queryString, modVariables.$currProductoInteger)
      Endif
    Endif

  End If
  
  'Llenar tabla de combinaciones dependiendo de los checks activados
  'Primero eliminamos las opciones existentes y llenamos con las nuevas
  queryString = "DELETE FROM `tbl_prods_variantes` where `id_producto` = &1 "
  Try modVariables.$hConn.Exec(queryString, modVariables.$currProductoInteger)
  If Error Then Message.Error(Error.Text & ", " & Error.Where)
  
  'Borrar opciones por platillo existentes
  queryString = "DELETE FROM `db_tacosRoy`.`tbl_prods_variantes` WHERE (`id_producto` = &1);"
  Try modVariables.$hConn.Exec(queryString, modVariables.$currProductoInteger)
  
  'Ahora si guardar los valores de los checks activados
  Do While iInd <= (vBoxVariantes1.Children.Count + vBoxVariantes2.Children.Count + vBoxVariantes3.Children.Count) - 1
      
    queryString = ""

    For Each myControl In vBoxVariantes1.Children
      If Object.GetProperty(myControl, "Value") = True Then
        queryString = "INSERT INTO tbl_prods_variantes (id_variante, id_producto) VALUES "
        queryString &= "(" & Object.GetProperty(myControl, "Tag") & ", " & modVariables.$currProductoInteger & ")"
        Print queryString
        Try modVariables.$hConn.Exec(queryString)
      Endif
      Inc iInd
    Next
    For Each myControl In vBoxVariantes2.Children
      If Object.GetProperty(myControl, "Value") = True Then
        queryString = "INSERT INTO tbl_prods_variantes (id_variante, id_producto) VALUES "
        queryString &= "(" & Object.GetProperty(myControl, "Tag") & ", " & modVariables.$currProductoInteger & ")"
        Print queryString
        Try modVariables.$hConn.Exec(queryString)
      Endif
      Inc iInd
    Next
    For Each myControl In vBoxVariantes3.Children
      If Object.GetProperty(myControl, "Value") = True Then
        queryString = "INSERT INTO tbl_prods_variantes (id_variante, id_producto) VALUES "
        queryString &= "(" & Object.GetProperty(myControl, "Tag") & ", " & modVariables.$currProductoInteger & ")"
        Print queryString
        Try modVariables.$hConn.Exec(queryString)
      Endif
      Inc iInd
    Next
  Loop
  
  RefreshGridProductos()
  
  Message.Info("La información ha sido actualizada correctamente")
  'boxCategorias.Enabled = False
  'VBox12.Enabled = False
  'VBox13.Enabled = False
  
  txtTNombreProd.Text = ""
  txtDescProd.Text = ""
  txtPrecio.Text = ""
  cleanForm()
  
Catch
  Message.Error(Error.Text & ", " & Error.Where)   
End


Public Sub btnCargarFotos_Click()

'    Dim Dialog As Dialog
    Dim myImage As Image
    Dim factor As Float
    Dim imgPath As String

    myImage = New Image
    
    Dialog.Title = "Escoja una foto"
    Dialog.Filter = ["*.jpg", "Archivos JPG", "*.JPG", "Archivos JPG", "*.jpeg", "Archivos JPG", "*.JPEG", "Archivos JPEG", "*.png", "Archivos PNG", "*.gif", "Archivos Gif"]
    'Dialog.Path = "."
    If Dialog.OpenFile() Then
      Return ' User pressed Cancel -
    Else
      imgPath = Dialog.Path
      'btnCargarFotos.Text = imgPath
      'hFile = Open Dialog.Path For Read
      
      myImage = myImage.Load(imgPath)
      
      If myImage.Width > myImage.Height Then
        'la imagen es más ancha que alta, procesarla a ancho de 150
        factor = 270 / myImage.Width 
      Else
        factor = 140 / myImage.Height
      Endif
      
      myImage = myImage.Stretch(Round(myImage.Width * factor), Round(myImage.Height * factor))
      
      'If modVariables.$hClientes[0] > 0 Then 
      '  $tempPicFile = User.Home &/ ".tacosRoy" &/ "pictures" &/ modVariables.$hClientes[0] & ".tmp.jpg"
      'Else
        $tempPicFile = Temp() & ".jpg"
      'Endif
        myImage.Save($tempPicFile, 85)
        
        'picProducto.Picture = Picture.Load($tempPicFile)
 
    Endif
 'btnCargarFotos.Text = ""
End

Public Sub cmbCategorias_Click()

Dim sQueryCat As String
Dim rResultCat As Result
Dim iInd As Integer
Dim myControl As Control

  For Each myControl In vBoxVariantes1.Children
    'Object.SetProperty(myControl, "Enabled", False)
    Object.SetProperty(myControl, "Value", False)
  Next
  For Each myControl In vBoxVariantes2.Children
    'Object.SetProperty(myControl, "Enabled", False)
    Object.SetProperty(myControl, "Value", False)
  Next
  For Each myControl In vBoxVariantes3.Children
    'Object.SetProperty(myControl, "Enabled", False)
    Object.SetProperty(myControl, "Value", False)
  Next

  sQueryCat = "Select * from `vw_variantes_x_categoria` where `IDCAT` = &1 ORDER BY IDCAT, IDVAR ASC" 
  Print sQueryCat
  Try rResultCat = modVariables.$hConn.Exec(sQueryCat, cmbCategorias.Index)

  For Each rResultCat
    For Each myControl In vBoxVariantes1.Children
      If Object.GetProperty(myControl, "Tag") = rResultCat["IDVAR"] Then 
        'Object.SetProperty(myControl, "Enabled", True)
        Object.SetProperty(myControl, "Value", True)
      Endif
    Next
    For Each myControl In vBoxVariantes2.Children
      If Object.GetProperty(myControl, "Tag") = rResultCat["IDVAR"] Then 
        'Object.SetProperty(myControl, "Enabled", True)
        Object.SetProperty(myControl, "Value", True)
      Endif
    Next
    For Each myControl In vBoxVariantes3.Children
      If Object.GetProperty(myControl, "Tag") = rResultCat["IDVAR"] Then 
        'Object.SetProperty(myControl, "Enabled", True)
        Object.SetProperty(myControl, "Value", True)
      Endif
    Next
  Next
End

Public Sub chkIsCombo_Click()

  cmbCombos.Enabled = chkIsCombo.Value

End
