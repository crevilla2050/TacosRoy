' Gambas class file

'Productos
Private sOperacionProducto As String
Public chkVariantes As CheckBox
Public vBoxVariantes1 As VBox
Public vBoxVariantes2 As VBox
Public vBoxVariantes3 As VBox

Private $gridProductos As Result

Private $tempPicFile As String
Private rResultVariantes As Result


Private Sub cleanForm()
  
  txtTNombreProd.Text = ""
  txtTNombreProd.Enabled = False 
  txtDescProd.Text = ""

  boxNvoErase.Visible = True
  boxCnlGrd.Visible = False
  
  HBox14.Enabled = False
  VBox12.Enabled = False
  'VBox13.Enabled = False
  boxCategorias.Enabled = False
  HBoxVariantes.Enabled = False
  
  txtDescProd.Enabled = False
  txtDescProd.Enabled = False
  'cmbTipo.Enabled = False
  'picProducto.Enabled = False

  boxNvoErase.Visible = True
  boxCnlGrd.Visible = False
  boxCategorias.Enabled = False
  panelVarCostoExtra.Enabled = False
  gridProductos.Enabled = True
  txtVarCostoExtra.Text = ""
  
    
End

Private Sub RefreshGridProductos()
  
  'Dim hField As ResultField
  'Dim iInd As Integer 
  Dim queryS As String
  
  $gridProductos = Null
  gridProductos.Rows.Count = 0
  
  Select Case cmbFiltraCategorias.index > 0
    Case True
      queryS = "Select * From `vw_products_catprecio` where `Activo` = 1 and `CatID` = &1 order by `Categoria`, `ID`"
      Try $gridProductos = modVariables.c_Conn.Exec(queryS, cmbFiltraCategorias.Index)
    Case False
      queryS = "Select * From `vw_products_catprecio` where `Activo`=1 order by Categoria, ID"
      Try $gridProductos = modVariables.c_Conn.Exec(queryS)
  End Select
  
  
  If $gridProductos.Available Then 
    gridProductos.Rows.count = $gridProductos.Count
  Else
    gridProductos.Rows.Count = 0
  Endif

Catch
  Message.Error(Error.Text & ", " & Error.Where)

End


Public Sub Form_Open()

  'Declara variables
  Dim hConn As Connection
  Dim hResult As Result
  
  Dim iInd As Integer
  Dim iCol As Integer
  Dim iNrElements As Integer
  
  Dim tempInt As Integer
  Dim sQuery As String
  Dim tempString As String

  'Acomodar los botones
  boxNvoErase.X = 441
  boxNvoErase.Y = 413
  boxCnlGrd.X = 441
  boxCnlGrd.Y = 413
  boxNvoErase.Visible = True
  boxCnlGrd.Visible = False
  
  iInd = 0
  iCol = 0
  iNrElements = 0
  
  If modVariables.c_Conn = Null Then modVariables.c_Conn = modConn.ConectarDB()
  
  sQuery = "SELECT `chr_var_value` FROM `tbl_configs` where `chr_var_name` = 'CombosCategory';"
  
  Try hResult = modVariables.c_Conn.Exec(sQuery)
  modVariables.i_CatCombos = hResult[0]
  
  hResult = Null
  
  'Grid productos
  gridProductos.header = GridView.Horizontal
  gridProductos.grid = True
  gridProductos.Rows.count = 0
  gridProductos.Columns.count = 9
  gridProductos.Columns[0].text = "ID"
  gridProductos.Columns[1].text = "Producto"
  gridProductos.Columns[2].text = "Desc"
  gridProductos.Columns[3].text = "Categoria"
  gridProductos.Columns[4].text = "Tooltip"
  gridProductos.Columns[5].text = "CatID"
  gridProductos.Columns[6].text = "Precio"
  gridProductos.Columns[7].text = "Tipo"
  gridProductos.Columns[8].text = "Activo"
  
  gridProductos.Columns[0].width = 80
  gridProductos.Columns[1].width = 250
  gridProductos.Columns[2].width = 300
  gridProductos.Columns[3].width = 150
  gridProductos.Columns[4].width = 0
  gridProductos.Columns[5].width = 0
  gridProductos.Columns[6].width = 90
  gridProductos.Columns[7].width = 90
  gridProductos.Columns[8].width = 0
  
  'Llenar el grid de productos
  sQuery = "Select * From `vw_products_catprecio` where `Activo`= 1 order by `Categoria`, `ID`" 
  $gridProductos = modVariables.c_Conn.Exec(sQuery)
  'If $gridProductos <> Null Then
  If $gridProductos.Available Then
    gridProductos.Rows.Count = $gridProductos.Count
  Endif
  
  hResult = Null
  
  'Llenado de combo de categorías
  cmbCategorias.Add("Elija categoría...")
  cmbFiltraCategorias.Add("Elija categoria...")
  cmbTipoPrecios.Add("Elija...")
  cmbCombos.Add("Elija Combo...")

  Try hResult = modVariables.c_Conn.Exec("SELECT * FROM `tbl_categorias` where `bit_activo` = 1 order by `fl_orden` ASC;")
  If Error Then Print Error.Text
  
  For Each hResult
    With hResult
      cmbCategorias.Add(CStr(.["chr_nombre_cat"]), .[0])
      cmbFiltraCategorias.Add(.["chr_nombre_cat"], .[0])
    End With
  Next
  
  hResult = Null
  Try hResult = modVariables.c_Conn.Exec("Select * FROM `tbl_tipos_precios` where `bit_activo` = 1")
  tempString = ""
  
  For Each hResult
    With hResult
      tempString = CStr(.[1])
      tempInt = .[0]
      cmbTipoPrecios.Add(tempString, tempInt)
    End With
  Next
  
  hResult = Null
  
  Try hResult = modVariables.c_Conn.Exec("SELECT * FROM `tbl_combos`;")
  tempString = ""
  
  For Each hResult
    With hResult
      tempString = CStr(.[1])
      tempInt = .[0]
      cmbCombos.Add(tempString, tempInt)
    End With
  Next
  
  hResult = Null
  'Llenado de las opciones para platillos
  hResult = modVariables.c_Conn.Exec("Select * FROM `tbl_variantes_platillos` where `bit_activo` = 1 order by `fl_ordenar`")
  
  iInd = 0
  
  'Preparamos cajitas para opciones
  vBoxVariantes1 = New VBox(Me) As "vBoxVariantes1"
  vBoxVariantes2 = New VBox(Me) As "vBoxVariantes2"
  vBoxVariantes3 = New VBox(Me) As "vBoxVariantes3"
  
  vBoxVariantes1.Reparent(HBoxVariantes)
  vBoxVariantes2.Reparent(HBoxVariantes)
  vBoxVariantes3.Reparent(HBoxVariantes)
  
  vBoxVariantes1.Expand = True
  vBoxVariantes2.Expand = True
  vBoxVariantes3.Expand = True
  
  For Each hResult
    With hResult
      chkVariantes = New CheckBox(Me) As "chkVariantePlatillo"
      chkVariantes.Text = hResult["chr_variante_nombre"]
      chkVariantes.AutoResize = True
      chkVariantes.Value = False
      chkVariantes.Enabled = False
      chkVariantes.Tag = hResult[0]
      Inc iInd
      If iInd > 0 And iInd <= 10 Then
        chkVariantes.Reparent(vBoxVariantes1)
      Else If iInd > 10 And iInd <= 20 Then
        chkVariantes.Reparent(vBoxVariantes2)
      Else If iInd > 20 Then
        chkVariantes.Reparent(vBoxVariantes3)
      Endif
    End With
  Next
  
  hResult = Null
End

Public Sub gridProductos_Data(Row As Integer, Column As Integer)

  $gridProductos.moveTo(Row)
  gridProductos.Data.text = Str($gridProductos[gridProductos.Columns[column].text])

End

Public Sub gridProductos_Click()

Dim sQuery As String
Dim sQueryCat As String
Dim rResult As Result
Dim rResultCat As Result
'Dim sPicPath As String
Dim myControl As Control
Dim iInd As Integer

  btnModificar.Enabled = True
  btnBorrar.Enabled = True
  btnClonar.Enabled = True

  $gridProductos.MoveTo(gridProductos.Row)
  
  modVariables.i_currProductoInteger = $gridProductos!ID
  modVariables.i_currCategoriaInteger = $gridProductos!CatID
  
  txtTNombreProd.Text = $gridProductos!Producto
  txtDescProd.Text = $gridProductos!Desc
  txtPrecio.Text = $gridProductos!Precio
  cmbCategorias.Index = $gridProductos!CatID
  modVariables.i_intTipoPrecio = $gridProductos!IDTipo
  cmbTipoPrecios.Index = $gridProductos!IDTipo
  
  'get index of price type
  sQuery = "SELECT `int_tipo_precio` from `tbl_precios_productos` where `id_producto` = &1 and bit_activo = 1" 
  
  Try rResult = modVariables.c_Conn.Exec(sQuery, modVariables.i_currProductoInteger)
  

  cmbTipoPrecios.Index = CInt(rResult["int_tipo_precio"])

  For Each myControl In vBoxVariantes1.Children
    Object.SetProperty(myControl, "Enabled", False)
    Object.SetProperty(myControl, "Value", False)
  Next
  For Each myControl In vBoxVariantes2.Children
    Object.SetProperty(myControl, "Enabled", False)
    Object.SetProperty(myControl, "Value", False)
  Next
  For Each myControl In vBoxVariantes3.Children
    Object.SetProperty(myControl, "Enabled", False)
    Object.SetProperty(myControl, "Value", False)
  Next

  sQueryCat = "Select * from `tbl_prods_variantes` where `id_producto` = &1 and int_activo = 1" 
  Try rResultCat = modVariables.c_Conn.Exec(sQueryCat, modVariables.i_currProductoInteger)
  If rResultCat.Available Then
    rResultVariantes = Null
    rResultVariantes = rResultCat
    
    For Each myControl In vBoxVariantes1.Children
      Object.SetProperty(myControl, "Value", False)
    Next
    
    For Each myControl In vBoxVariantes2.Children
      Object.SetProperty(myControl, "Value", False)
    Next
    
    For Each myControl In vBoxVariantes3.Children
      Object.SetProperty(myControl, "Value", False)
    Next
    
    For Each rResultCat
      For Each myControl In vBoxVariantes1.Children
        If Object.GetProperty(myControl, "Tag") = rResultCat["id_variante"] Then 
          Object.SetProperty(myControl, "Value", True)
        Endif
      Next
      For Each myControl In vBoxVariantes2.Children
        If Object.GetProperty(myControl, "Tag") = rResultCat["id_variante"] Then 
          Object.SetProperty(myControl, "Value", True)
        Endif
      Next
      For Each myControl In vBoxVariantes3.Children
        If Object.GetProperty(myControl, "Tag") = rResultCat["id_variante"] Then 
          Object.SetProperty(myControl, "Value", True)
        Endif
      Next
    Next
  Endif
  'See if product is a regular product or a combo
  sQuery = "SELECT * FROM tbl_combos WHERE `id_producto_relacionado` = &1 and bit_activo = 1"
  Try rResult = modVariables.c_Conn.Exec(sQuery, modVariables.i_currProductoInteger)
  If rResult.Available Then
    cmbCategorias.Index = modVariables.i_CatCombos
  Endif
  
  rResult = Null
  
  'modUtils.showImage(gridProductos.Row, picProducto)

  Catch
    'Print sPicPath
    Print Error.Text

End

Public Sub btnModificar_Click()

Dim iInd As Integer
Dim myControl As Control

  If (Message.Question("Desea modificar el producto seleccionado?", "Sí, modificar", "No, me espero") = 1) Then
  
    sOperacionProducto = "MOD"
    HBox14.Enabled = True
    VBox12.Enabled = True
    'VBox13.Enabled = True
    boxCategorias.Enabled = True
    HBoxVariantes.Enabled = True
    
    txtDescProd.Enabled = True
    txtDescProd.Enabled = True
    cmbTipoPrecios.Enabled = True
    txtTNombreProd.Enabled = True
    'picProducto.Enabled = True
    'btnCargarFotos.Enabled = True
    boxNvoErase.Visible = False
    boxCnlGrd.Visible = True
    boxCategorias.Enabled = True

    For Each myControl In vBoxVariantes1.Children
      Object.SetProperty(myControl, "Enabled", True)
    Next
    For Each myControl In vBoxVariantes2.Children
      Object.SetProperty(myControl, "Enabled", True)
    Next
    For Each myControl In vBoxVariantes3.Children
      Object.SetProperty(myControl, "Enabled", True)
    Next
    
    panelVarCostoExtra.Enabled = True
    gridProductos.Enabled = False

  Endif
End

Public Sub btnBorrar_Click()

Dim sQuery As String

  If (Message.Question("Desea borrar el artículo seleccionado?", "Sí, eliminar", "No, me espero") = 1) Then
    sQuery = "UPDATE tbl_productos SET int_activo = 0 where id_producto = &1" 
    'Message(squery & ", " & modVariables.i_currProductoInteger)
    modVariables.c_Conn.Exec(sQuery, modVariables.i_currProductoInteger)
  Endif
  
  RefreshGridProductos()

End

Public Sub btnNuevoProd_Click()

Dim iInd As Integer
Dim myControl As Control

  If (Message.Question("Desea agregar un producto nuevo", "Sí, Agregar", "No, Me espero") = 1) Then

    HBox14.Enabled = True
    VBox12.Enabled = True
    boxCategorias.Enabled = True
    
    sOperacionProducto = "NEU"
  
    txtTNombreProd.Text = ""
    txtTNombreProd.Enabled = True
    txtDescProd.Text = ""
    txtPrecio.Text = ""
    txtDescProd.Enabled = True
    'picProducto.Enabled = True
    'btnCargarFotos.Enabled = True
    boxNvoErase.Visible = False
    boxCnlGrd.Visible = True
    boxCategorias.Enabled = True
    HBoxVariantes.Enabled = True
    
    For Each myControl In vBoxVariantes1.Children
      Object.SetProperty(myControl, "Value", False)
      Object.SetProperty(myControl, "Enabled", True)
    Next
    For Each myControl In vBoxVariantes2.Children
      Object.SetProperty(myControl, "Value", False)
      Object.SetProperty(myControl, "Enabled", True)
    Next
    For Each myControl In vBoxVariantes3.Children
      Object.SetProperty(myControl, "Value", False)
      Object.SetProperty(myControl, "Enabled", True)
    Next
  panelVarCostoExtra.Enabled = True
  gridProductos.Enabled = False
  Endif

End

Public Sub btnCancelarProd_Click()

  Dim intResp As Integer
  
  intResp = Message.Question("Desea cancelar los cambios hechos?", "Sí", "No")
  
  If (intResp = 1) Then
    'Cancela todo y limpia formula
    cleanForm()
  End If

End

Public Sub btnGuardarProds_Click()
  'Guarda el producto nuevo en la base de datos
  Dim intResp As Integer
  Dim hResult As Result
  Dim sQuery As String
  Dim lastProdId As Integer
  Dim myControl As Control
  Dim iInd, iCatTemp As Integer
  Dim hResultOper As Result
  Dim iTempVarID As Integer
  
  'hola a atodos
  
  intResp = Message.Question("Desea guardar los cambios?", "Sí", "No")
  If (intResp = 1) Then
    
    If (cmbTipoPrecios.Index = 0) Then 
      Message.Warning("Por favor elija un tipo de precio")
      cmbTipoPrecios.SetFocus
    Endif
    
    If (cmbCategorias.Index = 0) Then 
      Message.Warning("Por favor elija una categoria")
      cmbCategorias.SetFocus
    Endif
    
    sQuery = "SELECT * FROM `tbl_categorias` where `chr_nombre_cat` = &1"
    Print cmbCategorias.Text
      Try hResultOper = modVariables.c_Conn.Exec(sQuery, cmbCategorias.Text)
    iCatTemp = hResultOper[0]
    hResultOper = Null
    
    If sOperacionProducto = "NEU" Or sOperacionProducto = "CLON" Then  'Es un producto nuevo o clonado
      
      hResultOper = Null
      modVariables.c_Conn.Begin()
        hResultOper = modVariables.c_Conn.Create("tbl_productos")
        hResultOper!chr_nombre_prod = txtTNombreProd.Text
        hResultOper!chr_desc_prod = txtDescProd.Text
        hResultOper!id_categoria = iCatTemp
        hResultOper!chr_pic_prod_path = "NA.jpg"
        hResultOper!int_activo = 1
        hResultOper.Update()
      modVariables.c_Conn.Commit()
      hResultOper = Null  
      
      'obtiene ID del producto recién insertado
      lastProdId = modVariables.c_Conn.Exec("select last_insert_id() as last")["last"]
      'inserta precio por tipo en la base de datos
      hResultOper = Null
      modVariables.c_Conn.Begin()
        hResultOper = modVariables.c_Conn.Create("tbl_precios_productos")
        hResultOper!id_producto = lastProdId
        hResultOper!dbl_precio = CFloat(txtPrecio.Text)
        hResultOper!int_tipo_precio = cmbTipoPrecios.Index
        hResultOper!dat_fecha_precio_activo = Now()
        hResultOper.Update()
      modVariables.c_Conn.Commit()
      hResultOper = Null  
      
      If cmbCategorias.Index = modVariables.i_CatCombos Then
        sQuery = "INSERT INTO `tbl_combos` (`id_producto_relacionado`, `bit_activo`) VALUES (&1, '1');"
        Try modVariables.c_Conn.Exec(sQuery, lastProdId)
        chkIsCombo.Value = False
      Endif
      
      If chkIsCombo.Value = True Then
        If Message.Warning("Se agregaran " & txtCantidad.Text & " Pz.(s) de este producto al combo " & cmbCombos.Text, "Si, agregar", "No, corregir") = 1 Then
          'hResultCombos
          sQuery = "INSERT INTO `tbl_prods_x_combo` (`id_combo`, `id_producto`, `int_cantidad`, `bol_activo`) VALUES (&1, &2, &3, '1');"
          Try modVariables.c_Conn.Exec(sQuery, cmbCombos.Index, lastProdId, txtCantidad.Text)
        Else
          chkIsCombo.SetFocus()
        Endif
      Endif

      If chkCostoExtra.Value = True Then
        
        hResult = Null
        hResultOper = Null
        
        rResultVariantes.MoveTo(cmbVarEligeCosto.Index - 1)
        
        sQuery = "SELECT * FROM `tbl_costos_extra_var_prod` where `id_producto_variante` = &1 and `id_fecha_control` = &2 and `id_tipo_precio` = &3 order by `id_costos_extra_var_prod`;"
        Try hResult = modVariables.c_Conn.Exec(sQuery, cmbVarEligeCosto.Index, modVariables.i_idControlFecha, cmbTipoPrecios.Index)
        
        
        If hResult.Available Then 'Existe ya un costo para esta variante/platillo con esta fecha, actualizar costo y fecha
          hResultOper = Null
          sQuery = "`id_variante` = &1 and `id_fecha_control` &2 and `id_tipo_precio` = &3"
          hResultOper = modVariables.c_Conn.Edit("tbl_costos_extra_var_prod", sQuery, cmbVarEligeCosto.Index, modVariables.i_idControlFecha, cmbTipoPrecios.Index)
          modVariables.c_Conn.Begin()
            hResultOper!id_fecha_control = modVariables.i_idControlFecha
            hResultOper!fl_costo_extra = CFloat(txtVarCostoExtra.Text)
            hResultOper.Update()
          modVariables.c_Conn.Commit()
          hResultOper = Null
        Else 'No existe costo para esta variante/platillo
          hResultOper = Null
          modVariables.c_Conn.Begin()
            hResultOper = modVariables.c_Conn.Create("tbl_costos_extra_var_prod")
            hResultOper!id_producto_variante = rResultVariantes[0]
            hResultOper!id_fecha_control = modVariables.i_idControlFecha
            hResultOper!fl_costo_extra = CFloat(txtVarCostoExtra.Text)
            hResultOper!id_tipo_precio = modVariables.i_intTipoPrecio
            hResultOper.Update()
          modVariables.c_Conn.Commit()
          hResultOper = Null  
        Endif
      Endif
      
      cleanForm()
      message("Los datos han sido guardados", "Aceptar")
      
    Else 'Es un producto modificado
      
      sQuery = "UPDATE `tbl_productos` SET " 
      sQuery &= "`chr_nombre_prod` = &1, " 
      sQuery &= "`chr_desc_prod` = &2, "
      sQuery &= "`id_categoria` = &3 "
      sQuery &= "where `tbl_productos`.`id_producto` = &4"
      'Message(sQuery & ", " & modVariables.i_currProductoInteger)
      Try modVariables.c_Conn.Exec(sQuery, txtTNombreProd.Text, txtDescProd.Text, iCatTemp, modVariables.i_currProductoInteger)
      
      'let's check in prices tables if there is one already existing
      hResult = Null
      sQuery = "SELECT * FROM `tbl_precios_productos` where `int_tipo_precio` = &1 and `id_producto` = &2 and `bit_activo` = 1;"
      Try hResult = modVariables.c_Conn.Exec(sQuery, cmbTipoPrecios.Index, modVariables.i_currProductoInteger)
      
      'deactivate previously active prices for this product
      If hResult.Available Then
        For Each hResult
          sQuery = "UPDATE `tbl_precios_productos` SET "
          sQuery &= "`bit_activo` = 0 "
          sQuery &= "where `id_producto` = &1 And `int_tipo_precio` = &2;"
          'Print sQuery
          modVariables.c_Conn.Exec(sQuery, hResult["id_producto"], hResult["int_tipo_precio"])
        Next
      Endif
      
      'clear results
      hResult = Null
      
      'once cleared, insert new price for this product
      sQuery = "INSERT INTO `tbl_precios_productos` (`id_producto`, `dbl_precio`, `int_tipo_precio`, `dat_fecha_precio_activo`) VALUES ("
      sQuery &= "&1, &2, &3, &4)" 
      
      Try modVariables.c_Conn.Exec(sQuery, modVariables.i_currProductoInteger, txtPrecio.Text, cmbTipoPrecios.Index, modUtils.convierteFechaFormatoHora(Now))
      
      'See if product is a regular product or a combo
      
      'First see if exists in table and check value
      sQuery = "SELECT * FROM tbl_combos where `id_producto_relacionado` = &1 and `bit_activo` = 1;"
      Try hResult = modVariables.c_Conn.Exec(sQuery, modVariables.i_currProductoInteger)
      
      If hResult.Available Then 'In combos table
        Select Case chkIsCombo.Value
          Case True
            sQuery = " UPDATE `tbl_combos` SET `bit_activo` = '1' WHERE (`id_producto_relacionado` = &1)"
          Case False
            sQuery = "DELETE FROM `tbl_combos` WHERE (`id_combo_relacionado` = &1);"
        End Select
        Try modVariables.c_Conn.Exec(sQuery, modVariables.i_currProductoInteger)
      Else 'Not in combos table
        Select Case chkIsCombo.Value
          Case True
            sQuery = "INSERT INTO `tbl_combos` (`id_producto_relacionado`, `bit_activo`) VALUES (&1, '1');"
          Case False
            chkIsCombo.Value = False
        End Select
        Try modVariables.c_Conn.Exec(sQuery, modVariables.i_currProductoInteger)
      Endif
      
      If chkCostoExtra.Value = True Then
        hResult = Null
        hResultOper = Null
        
        rResultVariantes.MoveTo(cmbVarEligeCosto.Index - 1)
        
        sQuery = "SELECT * FROM `tbl_costos_extra_var_prod` where `id_producto_variante` = &1 and `id_fecha_control` = &2 and `id_tipo_precio` = &3 order by `id_costos_extra_var_prod`;"
        Try hResult = modVariables.c_Conn.Exec(sQuery, cmbVarEligeCosto.Index, modVariables.i_idControlFecha, cmbTipoPrecios.Index)
        
        
        If hResult.Available Then 'Existe ya un costo para esta variante/platillo con esta fecha, actualizar costo y fecha
          hResultOper = Null
          sQuery = "`id_variante` = &1 and `id_fecha_control` &2 and `id_tipo_precio` = &3"
          hResultOper = modVariables.c_Conn.Edit("tbl_costos_extra_var_prod", sQuery, cmbVarEligeCosto.Index, modVariables.i_idControlFecha, cmbTipoPrecios.Index)
          modVariables.c_Conn.Begin()
            hResultOper!id_fecha_control = modVariables.i_idControlFecha
            hResultOper!fl_costo_extra = CFloat(txtVarCostoExtra.Text)
            hResultOper.Update()
          modVariables.c_Conn.Commit()
          hResultOper = Null
        Else 'No existe costo para esta variante/platillo
          hResultOper = Null
          modVariables.c_Conn.Begin()
            hResultOper = modVariables.c_Conn.Create("tbl_costos_extra_var_prod")
            hResultOper!id_producto_variante = rResultVariantes[0]
            hResultOper!id_fecha_control = modVariables.i_idControlFecha
            hResultOper!fl_costo_extra = CFloat(txtVarCostoExtra.Text)
            hResultOper!id_tipo_precio = modVariables.i_intTipoPrecio
            hResultOper.Update()
          modVariables.c_Conn.Commit()
          hResultOper = Null  
        Endif
      Endif
      cleanForm()
    Endif
      
  Else
    cleanForm()
  End If
  
  'Ahora si guardar los valores de los checks activados
  checaVariantes(vBoxVariantes1)
  checaVariantes(vBoxVariantes2)
  checaVariantes(vBoxVariantes3)
  
  RefreshGridProductos()
  
  If Not Error Then Message.Info("La información ha sido actualizada correctamente")
  'boxCategorias.Enabled = False
  'VBox12.Enabled = False
  'VBox13.Enabled = False
  
  txtTNombreProd.Text = ""
  txtDescProd.Text = ""
  txtPrecio.Text = ""
  cleanForm()
  cmbVarEligeCosto.Clear
  panelVarCostoExtra.Enabled = False
  gridProductos.Enabled = True
  
Catch
  Message.Error(Error.Text & ", " & Error.Where)   
End



Public Sub btnClonar_Click()

  If (Message.Question("Desea Clonar el producto seleccionado?", "Si, Clonar", "No, Me espero...") = 1) Then
    sOperacionProducto = "CLON"
    HBox14.Enabled = True
    VBox12.Enabled = True
    'VBox13.Enabled = True
    boxCategorias.Enabled = True
    HBoxVariantes.Enabled = True
    
    txtDescProd.Enabled = True
    txtDescProd.Enabled = True
    cmbTipoPrecios.Enabled = True
    txtTNombreProd.Enabled = True
    'picProducto.Enabled = True
    'btnCargarFotos.Enabled = True
    boxNvoErase.Visible = False
    boxCnlGrd.Visible = True
    boxCategorias.Enabled = True
    panelVarCostoExtra.Enabled = True
  Endif

End


Public Sub btnCargarFotos_Click()

'    Dim Dialog As Dialog
    Dim myImage As Image
    Dim factor As Float
    Dim imgPath As String

    myImage = New Image
    
    Dialog.Title = "Escoja una foto"
    Dialog.Filter = ["*.jpg", "Archivos JPG", "*.JPG", "Archivos JPG", "*.jpeg", "Archivos JPG", "*.JPEG", "Archivos JPEG", "*.png", "Archivos PNG", "*.gif", "Archivos Gif"]
    'Dialog.Path = "."
    If Dialog.OpenFile() Then
      Return ' User pressed Cancel -
    Else
      imgPath = Dialog.Path
      'btnCargarFotos.Text = imgPath
      'hFile = Open Dialog.Path For Read
      
      myImage = myImage.Load(imgPath)
      
      If myImage.Width > myImage.Height Then
        'la imagen es más ancha que alta, procesarla a ancho de 150
        factor = 270 / myImage.Width 
      Else
        factor = 140 / myImage.Height
      Endif
      
      myImage = myImage.Stretch(Round(myImage.Width * factor), Round(myImage.Height * factor))
      
      'If modVariables.$hClientes[0] > 0 Then 
      '  $tempPicFile = User.Home &/ ".tacosRoy" &/ "pictures" &/ modVariables.$hClientes[0] & ".tmp.jpg"
      'Else
        $tempPicFile = Temp() & ".jpg"
      'Endif
        myImage.Save($tempPicFile, 85)
        
        'picProducto.Picture = Picture.Load($tempPicFile)
 
    Endif
 'btnCargarFotos.Text = ""
End

Public Sub cmbCategorias_Click()

Dim sQueryCat As String
Dim rResultCat As Result
Dim iInd As Integer
Dim myControl As Control

  For Each myControl In vBoxVariantes1.Children
    'Object.SetProperty(myControl, "Enabled", False)
    Object.SetProperty(myControl, "Value", False)
  Next
  For Each myControl In vBoxVariantes2.Children
    'Object.SetProperty(myControl, "Enabled", False)
    Object.SetProperty(myControl, "Value", False)
  Next
  For Each myControl In vBoxVariantes3.Children
    'Object.SetProperty(myControl, "Enabled", False)
    Object.SetProperty(myControl, "Value", False)
  Next

  sQueryCat = "Select * from `vw_variantes_x_platillo` where `ID Producto` = &1 and `Tipo Precio` = &2 order by `ID Variante` ASC" 
  Try rResultCat = modVariables.c_Conn.Exec(sQueryCat, modVariables.i_currProductoInteger, modVariables.i_intTipoPrecio)

  For Each rResultCat
    For Each myControl In vBoxVariantes1.Children
      If Object.GetProperty(myControl, "Tag") = rResultCat["ID Variante"] Then 
        'Object.SetProperty(myControl, "Enabled", True)
        Object.SetProperty(myControl, "Value", True)
      Endif
    Next
    For Each myControl In vBoxVariantes2.Children
      If Object.GetProperty(myControl, "Tag") = rResultCat["ID Variante"] Then 
        'Object.SetProperty(myControl, "Enabled", True)
        Object.SetProperty(myControl, "Value", True)
      Endif
    Next
    For Each myControl In vBoxVariantes3.Children
      If Object.GetProperty(myControl, "Tag") = rResultCat["ID Variante"] Then 
        'Object.SetProperty(myControl, "Enabled", True)
        Object.SetProperty(myControl, "Value", True)
      Endif
    Next
  Next
End

Public Sub chkIsCombo_Click()

  cmbCombos.Enabled = chkIsCombo.Value

End

Public Sub btnFiltrarProds_Click()

Dim sQuery As String
'Select * From `vw_products_catprecio` where `Producto` like "%pasto%" and `CatID` = 2 and `Activo`= 1 order by Categoria, ID
  If txtFiltrarProductos.Text <> "" Then
    'Llenar el grid de productos
    Select Case cmbFiltraCategorias.index > 0
      Case True
        sQuery = "Select * From `vw_products_catprecio` where `Producto` like \"%" & txtFiltrarProductos.Text & "%\" and `Categoria` = &1 and `Activo`= 1 order by Categoria, ID"
        Print sQuery
        $gridProductos = modVariables.c_Conn.Exec(sQuery, cmbFiltraCategorias.Text)
      Case False
        sQuery = "Select * From `vw_products_catprecio` where `Producto` like \"%" & txtFiltrarProductos.Text & "%\" and `Activo`= 1 order by Categoria, ID" 
        $gridProductos = modVariables.c_Conn.Exec(sQuery)
    End Select

    If $gridProductos.Available Then
      gridProductos.Rows.Count = $gridProductos.Count
    Else
      gridProductos.Rows.Count = 0
    Endif
  Endif

End



Public Sub cmbFiltraCategorias_Click()

  Dim sQuery As String
  
  Select Case cmbFiltraCategorias.Index > 0
    Case True
      sQuery = "Select * From `vw_products_catprecio` where `Categoria` = &1 and `Activo`= 1 order by Categoria, ID"
      $gridProductos = modVariables.c_Conn.Exec(sQuery, cmbFiltraCategorias.Text)
    Case False
      sQuery = "Select * From `vw_products_catprecio` where `Activo`= 1 order by Categoria, ID"
      $gridProductos = modVariables.c_Conn.Exec(sQuery)
  End Select
  
  If $gridProductos.Available Then
    gridProductos.Rows.Count = $gridProductos.Count
  Else
    gridProductos.Rows.Count = 0
  Endif

End



Public Sub chkCostoExtra_Click()
  
Dim sQuery As String
Dim hResult As Result

  If chkCostoExtra.Value = True Then
    sQuery = "SELECT * FROM `vw_variantes_x_producto` where `ID Prod.` = &1 order by `ID Var.` ASC;"
    Try hResult = modVariables.c_Conn.Exec(sQuery, modVariables.i_currProductoInteger)
    If hResult.Available Then
      cmbVarEligeCosto.Clear
      cmbVarEligeCosto.Add("Elegir...")
      For Each hResult
        cmbVarEligeCosto.Add(hResult["Variante"], hResult["ID Var."])
      Next
    Endif
    'cmbVarEligeCosto
  Endif

  With chkCostoExtra
    txtVarCostoExtra.Enabled = .Value
    cmbVarEligeCosto.Enabled = .Value
  End With

End

Private Sub checaVariantes(vBoxVariante As Container) 

Dim hResult As Result
Dim hResultOper As Result
Dim sQuery As String
Dim myControl As Control

  For Each myControl In vBoxVariante.Children
    
    If Object.GetProperty(myControl, "Value") = True Then 'variante checada true
    hResult = Null
      'Buscamos si hay alguna variante para este producto existente en la tabla
      sQuery = "Select * from `tbl_prods_variantes` where `id_producto` = &1 and `id_variante` = &2 order by id_variante;"
      Print sQuery
      Try hResult = modVariables.c_Conn.Exec(sQuery, modVariables.i_currProductoInteger, Object.GetProperty(myControl, "Tag"))
      If hResult.Available = False Then
        hResultOper = Null
        modVariables.c_Conn.Begin()
          hResultOper = modVariables.c_Conn.Create("tbl_prods_variantes")
          hResultOper!id_producto = modVariables.i_currProductoInteger
          hResultOper!id_variante = Object.GetProperty(myControl, "Tag")
          hResultOper!int_activo = 1
          hResultOper.Update()
        modVariables.c_Conn.Commit()
        hResultOper = Null
      Else 'Ya hay variante por producto
        For Each hResult
          hResultOper = Null
          If hResult["int_activo"] = 0 Then 'Estaba apagada, encenderla
            sQuery = "`id_producto` = &1 and `id_variante` = &2 "
            hResultOper = modVariables.c_Conn.Edit("tbl_prods_variantes", sQuery, modVariables.i_currProductoInteger, Object.GetProperty(myControl, "Tag"))
            modVariables.c_Conn.Begin()
              hResultOper!int_activo = 1
              hResultOper.Update()
            modVariables.c_Conn.Commit()
          Endif
          hResultOper = Null
        Next
      Endif
    Else 'El check es falso, vamos a ver si existe esta variante/prod en la DB para apagarla
      hResult = Null
      sQuery = "Select * from `tbl_prods_variantes` where `id_producto` = &1 and `id_variante` = &2 order by id_variante;"
      Try hResult = modVariables.c_Conn.Exec(sQuery, modVariables.i_currProductoInteger, Object.GetProperty(myControl, "Tag"))
      If hResult.available And hResult <> Null Then
        For Each hResult
          If hResult["int_activo"] = 1 Then
            sQuery = "`id_producto` = &1 and `id_variante` = &2 "
            hResultOper = modVariables.c_Conn.Edit("tbl_prods_variantes", sQuery, hResult["id_producto"], hResult["id_variante"])
            modVariables.c_Conn.Begin()
              hResultOper!int_activo = 0
              hResultOper.Update()
            modVariables.c_Conn.Commit()
          Endif
        Next
      Else
        Print "nada"
      Endif 
    Endif
  Next
  
Catch
  Print Error.Text
End

Public Sub txtVarCostoExtra_KeyPress()

  If (Key.Code >= Asc("a") And Key.Code <= Asc("z")) Or (Key.Code >= Asc("A") And Key.Code <= Asc("Z")) Then Stop Event

End


Public Sub cmbVarEligeCosto_Click()

  rResultVariantes.MoveTo(cmbVarEligeCosto.Index - 1)
  'Message.Info(rResultVariantes[0])

End


Public Sub btnDefCostos_Click()

  FCostosPrecios.ShowModal()

End
