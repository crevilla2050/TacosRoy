' Gambas class file

Private fTotal As Float
Private rResult As Result
Private myOrder As Integer
Private myTicket As Integer
Private rYPrint As Integer
'Private iInc As Integer

Private Const PRINT_MARGIN As Float = 1

Public Function sCalculaCosto(iInc As Integer, Optional bPrint As Boolean) As String[]

Dim sQuery As String
Dim hResult, rResultProxOr, rResultPromos, rResultVar, rResultDetail, rNombreVar As Result
Dim flTemporal As Float
Dim docV As New String[3]

  sQuery = "SELECT * FROM db_tacosRoy.tbl_precio_tipo_ordenes where `id_orden` = &1;"
  docV[0] = ""
  Try hResult = modVariables.c_Conn.Exec(sQuery, modVariables.i_intOrdenID)
  modVariables.i_intTipoPrecio = hResult["id_tipo_precio"]
  hResult = Null
  sQuery = "Select * from vw_prods_x_orden where `Orden` = &1 and `Activo` = 1 and `Tipo Precio` = &2 order by `HoraFecha` Asc"
  Try rResultProxOr = modVariables.c_Conn.Exec(sQuery, modVariables.i_intOrdenID, modVariables.i_intTipoPrecio)
  
  If rResultProxOr.available And rResultProxOr <> Null Then
    fTotal = 0
    For Each rResultProxOr 'checar promos y costos extra
      sQuery = "Select * from `tbl_promociones` where `id_producto` = &1 and `bit_activo = 1`"
      Try rResultPromos = modVariables.c_Conn.Exec(sQuery, rResultProxOr["ID Prod"])
      If rResultPromos <> Null Then 'Hay una promocion para este producto, checar validez de días.
        flTemporal = 0
        If Mid(rResultPromos!chr_dias_valido, WeekDay(Now) + 1, 1) = "1" Then
          flTemporal = rResultProxOr!Precio - (rResultProxOr!Precio * rResultPromos!fl_descuento)
          flTemporal = (flTemporal * rResultProxOr!Cantidad)
          fTotal = ftotal + flTemporal
        Endif
      Else
        rResultPromos = Null
        sQuery = "SELECT `dbl_precio` as Precio FROM `tbl_precios_productos` where `id_producto` = &1 and int_tipo_precio = &2 and `bit_activo` = 1;"
        Try rResultPromos = modVariables.c_Conn.Exec(sQuery, rResultProxOr["ID Prod"], rResultProxOr["Tipo Precio"])
        flTemporal = rResultPromos["Precio"] * rResultProxOr["Cantidad"]
        fTotal += flTemporal
        If bPrint = True Then 
          Paint.Font = Font["Helvetica, Regular, 12"]
          docV[0] = rResultProxOr["Cantidad"] & gb.Tab & gb.Tab & gb.Tab & rResultProxOr["Producto"] & gb.Cr & gb.Tab & "$" & CInt(flTemporal) & gb.CrLf
          Paint.DrawRichText(docV[0], PRINT_MARGIN, (iInc * 330) + 2000 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCobrar.Count, Align.TopNormal)
          'Inc iInc
        Endif

        rResultPromos = Null
        hResult = Null
        sQuery = "SELECT * FROM `tbl_prods_orden_opciones` where `id_prod_x_orden` = &1"
        
        Try hResult = modVariables.c_Conn.Exec(sQuery, rResultProxOr["IDPO"])
        
        If hResult.Available Then
          For Each hResult
            sQuery = "SELECT * FROM `tbl_prods_variantes` where `id_producto`= &1 and `id_variante` = &2 and `int_activo` = 1 order by `id_producto`, `id_variante`;"
            Try rResultVar = modVariables.c_Conn.Exec(sQuery, rResultProxOr["ID Prod"], hResult["id_variante_platillo"])
            If rResultVar.available Then
              For Each rResultVar
                sQuery = "SELECT * FROM `tbl_costos_extra_var_prod` where `id_producto_variante` = &1; "
                Try rResultDetail = modVariables.c_Conn.Exec(sQuery, rResultVar["id_prods_variantes"])
                If rResultDetail.Available Then
                  For Each rResultDetail
                    If rResultDetail["id_tipo_precio"] = rResultProxOr["Tipo Precio"] Then
                      flTemporal = CFloat(rResultDetail["fl_costo_extra"]) * CFloat(rResultProxOr["Cantidad"])
                      fTotal += flTemporal
                      If bPrint = True Then
                        sQuery = "SELECT * FROM `tbl_variantes_platillos` where `id_variante_pl` = &1"
                        Try rNombreVar = modVariables.c_Conn.Exec(sQuery, hResult["id_variante_platillo"])
                        Paint.Font = Font["Helvetica, Regular, 9"]
                        docV[0] = gb.CrLf & rNombreVar["chr_imprimir"] & gb.Cr & gb.Tab & "$" & CInt(flTemporal) & gb.CrLf
                        Paint.DrawRichText(docV[0], PRINT_MARGIN, (iInc * 330) + 2200 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCobrar.Count, Align.TopNormal)
                        Inc iInc
                      Endif
                    Endif
                  Next
                  rResultDetail = Null
                Endif
              Next
              rResultVar = Null
            Endif
          Next
          hResult = Null
        Endif
      Endif
      'Inc iInc
    Next
  Endif

  docV[1] = CStr(fTotal)
  docV[2] = iInc
  If bPrint = True Then 
    Paint.Font = Font["Helvetica, Regular, 14"]
    docV[0] = "Total a Pagar: $" & docV[1] & ".00" & gb.CrLf
    'Paint.DrawRichText(docV[0], PRINT_MARGIN, (iInc * 250) + 2600 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCobrar.Count, Align.TopNormal)
  Endif
  
  
  'iInc += 1
  Return docV
  
End


Public Sub Run() As Boolean

  Return Not Me.ShowModal()

End

Public Sub btnCancel_Click()

  Me.Close

End

Public Sub Form_Open()

  Dim sQuery As String
  Dim rResultPromos As Result
  Dim flTemporal As String[]
  
  lblCbOrden.Text = modVariables.i_intOrdenID
  lblCbMesa.Text = modVariables.s_strMesaTemp
  
  flTemporal = sCalculaCosto(1, False) 
    
    lblCbTotal.Text = "$" & CStr(flTemporal[1])
    
Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)
End

Public Sub txtRecibido_KeyPress()

  Print Str(key.code) 
  'If Len(txtRecibido.text) = 0 Then btnOK.Enabled = False Else btnOK.Enabled = True
  If (Key.Code >= Asc("a") And Key.Code <= Asc("z")) Or (Key.Code >= Asc("A") And Key.Code <= Asc("Z")) Then Stop Event
Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)  
End

Public Sub txtRecibido_LostFocus()

  If txtRecibido.Text <> "" Then lblCambio.Text = "$" & CStr(CFloat(txtRecibido.Text) - fTotal)
Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)
End

Public Sub PrinterCobrar_Draw()

  'Dim documento As New ClassLaTex
  'Dim tex As String
  Dim sQuery As String
  Dim hResult, rResultProxOr, rResultSuc, rResultVar, rResultDetail, rNombreVar As Result
  Dim docV As New String[2]
  Dim sTemporal As String[]
  Dim hImage As Image
  Dim rResultPromos As Result
  Dim flTemporal As Float
  Dim iInc As Integer
  
  iInc = 1
  
  If txtRecibido.Text = "" Then 
    Message.Error("Indique la cantidad recibida por favor")
    txtRecibido.SetFocus
    Return
  Endif
    
  lblCambio.Text = "$" & CStr(CFloat(txtRecibido.Text) - fTotal)
  
  hImage = Image.Load(User.Home &/ ".tacosroy/pictures" &/ "logoTicket.png")
  hImage.Opacity(0.3)
  Paint.MoveTo(1, 105)
  Paint.DrawImage(hImage, 12, 600, hImage.Width * 7, hImage.Height * 7)
  
  rYPrint = PRINT_MARGIN - (PrinterCobrar.Page - 1) * (Paint.Height - PRINT_MARGIN * 2)
  
  Paint.Font = Font["Helvetica, Bold, 12"]
  docV[0] = "Orden: " & modVariables.i_intOrdenID & ", Ticket Nr.: " & myTicket 
  Paint.DrawRichText(docV[0], PRINT_MARGIN, 300 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCobrar.Count, Align.TopNormal)
  docV[0] = "Mesa: " & modVariables.s_strMesaTemp
  Paint.DrawRichText(docV[0], PRINT_MARGIN, 600 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCobrar.Count, Align.TopNormal)
  Paint.Font = Font["Helvetica, Regular, 10"]
  
  Paint.MoveTo(1, 405)
  docV[0] = Format(Now, "dddd dd mmmm yyyy, hh:nn:ss")
  Paint.DrawRichText(docV[0], 1, rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCobrar.Count, Align.TopNormal)
  docV[0] = ""
  
  sQuery = "SELECT * FROM tbl_datos_sucursal where id_sucursal = 1"
  Try rResultSuc = modVariables.c_Conn.Exec(sQuery)
  
  Paint.Font = Font["Helvetica, Regular, 8"]
  docV[0] = rResultSuc["chr_nombre"]
  Paint.DrawRichText(docV[0], PRINT_MARGIN, 1100 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCobrar.Count, Align.TopNormal)
  
  docV[0] = rResultSuc["chr_dir1"]
  Paint.DrawRichText(docV[0], PRINT_MARGIN, 1300 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCobrar.Count, Align.TopNormal)
  docV[0] = rResultSuc["chr_dir2"]
  Paint.DrawRichText(docV[0], PRINT_MARGIN, 1500 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCobrar.Count, Align.TopNormal)
  docV[0] = rResultSuc["chr_dir3"] & " - " & rResultSuc["chr_telefono1"]
  Paint.DrawRichText(docV[0], PRINT_MARGIN, 1700 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCobrar.Count, Align.TopNormal)
  'docV[0] &= documento.ResultadoConsultaDB(rResult, False)
  docV[0] = ""
  
  Paint.Font = Font["Helvetica, Regular, 10"]
  docV[0] = "Detalle de la orden:\n"
  Paint.DrawRichText(docV[0], PRINT_MARGIN, 2000 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCobrar.Count, Align.TopNormal)
  
  Paint.Font = Font["Helvetica, Regular, 9"]
  
  'aqui va el calculo con print true
  sTemporal = sCalculaCosto(iInc, True)
  
  Paint.Font = Font["Helvetica, Regular, 10"]
  docV[0] = "Efectivo: $" & txtRecibido.Text & ".00"
  Paint.DrawRichText(sTemporal[0], PRINT_MARGIN, (iInc * 250) + 2700 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCobrar.Count, Align.TopNormal)
  
  Paint.Font = Font["Helvetica, Bold, 10"]
  docV[0] = "Cambio: $" & CFloat(txtRecibido.Text - fTotal) & ".00"
  Paint.DrawRichText(docV[0], PRINT_MARGIN, (iInc * 250) + 2900 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCobrar.Count, Align.TopNormal)

  Paint.Font = Font["Helvetica, Regular, 7"]
  docV[0] = "Documento sin Efectos Fiscales."
  Paint.DrawRichText(docV[0], PRINT_MARGIN, (iInc * 250) + 3200 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCobrar.Count, Align.TopNormal)
  
  Paint.Font = Font["Helvetica, Regular, 7"]
  docV[0] = "Si requiere factura, solicítela el mismo día de compra."
  Paint.DrawRichText(docV[0], PRINT_MARGIN, (iInc * 250) + 3400 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCobrar.Count, Align.TopNormal)
  
  Paint.Font = Font["Helvetica, Regular, 7"]
  docV[0] = "Este establecimiento emite tickets en apego a lo"
  Paint.DrawRichText(docV[0], PRINT_MARGIN, (iInc * 250) + 3600 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCobrar.Count, Align.TopNormal)
  
  Paint.Font = Font["Helvetica, Regular, 7"]
  docV[0] = "previsto por las leyes vigentes"
  Paint.DrawRichText(docV[0], PRINT_MARGIN, (iInc * 250) + 3800 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCobrar.Count, Align.TopNormal)
 
  Paint.Font = Font["Helvetica, Regular, 10"]
  docV[0] = "Muchas gracias por su compra"
  Paint.DrawRichText(docV[0], PRINT_MARGIN, (iInc * 250) + 4100 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCobrar.Count, Align.TopNormal)
  
  Paint.Font = Font["Helvetica, Regular, 7"]
  docV[0] = "Ordena en linea:"
  Paint.DrawRichText(docV[0], PRINT_MARGIN, (iInc * 250) + 4600 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCobrar.Count, Align.TopNormal)
  
  Paint.Font = Font["Helvetica, Regular, 10"]
  docV[0] = "www.tacosroy.com"
  Paint.DrawRichText(docV[0], PRINT_MARGIN, (iInc * 250) + 4900 + rYPrint, Paint.Width - PRINT_MARGIN * 2, Paint.Height * PrinterCobrar.Count, Align.TopNormal)
  
Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)
End

Public Sub btnOK_MouseUp()

  Dim sQuery As String
  Dim hResult As Result
  Dim myInt As Integer
  Dim myTot As Integer
  
  
  sQuery = "Select * From `tbl_consecutivo` ORDER BY `id_consecutivo` DESC LIMIT 1"
  Try hResult = modVariables.c_Conn.Exec(sQuery)
  
  modVariables.i_intTicketNR = hResult[1]
  myTicket = modVariables.i_intTicketNR
  
  'sQuery = "INSERT INTO `tbl_ticket_cons` (`id_ticketNrConsecutivo`, `chr_ticketConsecutivo`) VALUES (Null, &1)"
  
  hResult = Null
  modVariables.c_Conn.Begin()
  hResult = modVariables.c_Conn.Create("tbl_ticket_cons")
  Select Case Mouse.Control
    Case True
      myTot = myTicket
      'hResult!chr_ticketConsecutivo = myTicket
      myInt = 0
    Case False
      myTot = myTicket + 1
      'hResult!chr_ticketConsecutivo = myTicket + 1 
      myInt = 1
  End Select
  
  hResult!chr_ticketConsecutivo = myTot
  hResult.Update()
  modVariables.c_Conn.Commit()
  hResult = Null
  Try modVariables.i_ticketNumber = modVariables.c_Conn.Exec("select last_insert_id() as last")["last"]
  
  'Se cambia el status del ticket
  sQuery = "UPDATE `tbl_ordenes` SET `chr_status_orden` = &1 where `id_orden_id` = &2"
  Try modVariables.c_Conn.Exec(sQuery, txtReferenciaPago.Text, modVariables.i_intOrdenID)

  modVariables.c_Conn.Begin()
    hResult = modVariables.c_Conn.Create("tbl_ordenes_cerradas")
    hResult!id_orden_id = modVariables.i_intOrdenID
    hResult!dt_horafecha_cierre_orden = Now()
    hResult!fl_total = fTotal
    hResult!bool_factura = False
    hResult!chr_referencia_notas = txtReferenciaPago.Text
    hResult!int_lvl_report = myInt
    hResult!id_ticket_IDNr = modVariables.i_ticketNumber
    hResult!id_control_fecha = modVariables.i_idControlFecha
    hResult.Update()
  modVariables.c_Conn.Commit()
  hResult = Null
  
  If Error Then Message.Error(Error.Text & ", " & Error.Where)
  
  sQuery = "Select * From `vw_info_ordenes_tickets` Where id_orden_id = &1"
  Try hResult = modVariables.c_Conn.Exec(sQuery, modVariables.i_intOrdenID)
  myOrder = hResult["chr_consecutivo"]
  
  sQuery = "Select * From `tbl_ticket_cons` ORDER BY id_ticketNrConsecutivo DESC LIMIT 1"
  Try hResult = modVariables.c_Conn.Exec(sQuery)
  myTicket = CInt(hResult[1])
  
  sQuery = "SELECT * From `tbl_ordenes` where `chr_status_orden` = 'Abierta' order by id_orden_id"
  FMain1.gridMainOrden.Rows.Count = 0
  
  Try hResult = modVariables.c_Conn.Exec(sQuery)
  
  FMain1.gridMainOrden.Rows.Count = hResult.Count
  
  'Se imprime el ticket
  Me.Enabled = False
  Inc Application.Busy
  PrinterCobrar.OutputFile = User.Home &/ "Tickets/ticket_" & modVariables.i_intTicketNR & "-" & modUtils.convierteFechaFormatoHora(Now) & ".pdf"
  PrinterCobrar.Print
  Dec Application.Busy
  Me.Enabled = True
  
  Me.Close(True)
  cmbFormaPago.Enabled = True
Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)
End


Public Sub txtDescuento_KeyPress()

  If Len(txtDescuento.text) = 0 Then btnAplicaDesc.Enabled = False Else btnAplicaDesc.Enabled = True
  If (Key.Code >= Asc("a") And Key.Code <= Asc("z")) Or (Key.Code >= Asc("A") And Key.Code <= Asc("Z")) Then Stop Event

End

Public Sub txtDescuento_Change()

  If CInt(txtDescuento.Text) > 100 Then txtDescuento.Text = "99"

End

Public Sub cmbFormaPago_Change()

  Select Case cmbFormaPago.Index
    Case 0
      lblDescuento.Visible = False
      txtDescuento.Visible = False
      btnAplicaDesc.Visible = False
      txtReferenciaPago.Text = "Efectivo"
      txtReferenciaPago.Visible = True
      txtRecibido.Enabled = True
      'btnOK.Enabled = False
    Case 1
      lblDescuento.Visible = True
      txtDescuento.Visible = True
      btnAplicaDesc.Visible = True
      txtReferenciaPago.Text = "Descuento"
      txtReferenciaPago.Visible = False
      txtRecibido.Enabled = True
      'btnOK.Enabled = False
    Case 2
      lblDescuento.Visible = False
      txtDescuento.Visible = False
      btnAplicaDesc.Visible = False
      txtReferenciaPago.Text = "Cortesía"
      txtReferenciaPago.Visible = True
      txtRecibido.Enabled = False
      btnOK.Enabled = True  
    Case Else
      
    End Select
Catch
  Print Error.Text
  Message.Error(Error.Text & ", " & Error.Where)
End

Public Sub cmbFormaPago_KeyRelease()

  cmbFormaPago_Change()

End

Public Sub cmbFormaPago_MouseUp()

  cmbFormaPago_Change()

End

Public Sub cmbFormaPago_Click()

  cmbFormaPago_Change()

End

Public Sub btnAplicaDesc_Click()

  lblCbTotal.Text = fTotal - (CFloat(fTotal) * (CFloat(txtDescuento.Text) / 100))
  fTotal = CFloat(lblCbTotal.Text)

End

Public Sub txtRecibido_Change()

  If txtRecibido.Text <> "" Then lblCambio.Text = "$" & CStr(CFloat(txtRecibido.Text) - fTotal)

End
